<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>SignalShore</title><link href="https://signalshore.github.io/" rel="alternate"></link><link href="https://signalshore.github.io/feeds/all.atom" rel="self"></link><id>https://signalshore.github.io/</id><updated>2020-07-14T00:00:00+05:30</updated><entry><title>Work &amp; Pandemic Update</title><link href="https://signalshore.github.io/blog/Pandemic-Update-2.html" rel="alternate"></link><published>2020-07-14T00:00:00+05:30</published><updated>2020-07-14T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2020-07-14:/blog/Pandemic-Update-2.html</id><summary type="html">&lt;p&gt;Brief Update about the Pandemic and my work situation&lt;/p&gt;</summary><content type="html">&lt;p&gt;Its nearing almost 6 months since India went into a state of lock-down.&lt;/p&gt;
&lt;p&gt;I travelled back home about 1 month back. The experience was
interesting. We all had to take precautions etc etc.&lt;/p&gt;
&lt;h2&gt;Staying at Home&lt;/h2&gt;
&lt;p&gt;I haven't stayed at home for longer than 3 weeks at a time since I
left home 5 years ago. It's been quite an experience. Having stayed
alone for years, it takes some time to get used to people being around
you all the time.&lt;/p&gt;
&lt;p&gt;The lack of privacy and "alone-time" is noticeable and somewhat
disturbing during certain moments. As much as I enjoy being with these
people, I need to have some time to tone-down and be inside my own
head.&lt;/p&gt;
&lt;h2&gt;Cleaning&lt;/h2&gt;
&lt;p&gt;With Covid-19 all of our cleaning routines are on overdrive now and
big bottles/jars of alcohol based sanitizers are quite common now,
even though soap water also works. &lt;/p&gt;
&lt;h2&gt;Work&lt;/h2&gt;
&lt;p&gt;Work has been good. Apparently my performance was good enough that I
received a good promotion. This was most unexpected because I felt
that I was not doing good enough or that there was something more to
do always.&lt;/p&gt;
&lt;p&gt;The promotion has been interesting. Apart from the technical
responsibilities, I have started making detailed plans for projects
and time estimates. Need to see how this plays out.&lt;/p&gt;
&lt;p&gt;My recent project involves working with a distributed database which I
am enjoying a lot.&lt;/p&gt;
&lt;h2&gt;Social Stuff&lt;/h2&gt;
&lt;p&gt;I've been cutting down on my social media consumption for a while
now. I think I have it in control to a large extent. I think I will
start getting back on Instagram again. Not sure about it.&lt;/p&gt;
&lt;p&gt;I spend a decent amount of time worrying about my friends who are
abroad, some of them are in the USA, some in Germany and some in other
cities in India. I'll admit, this covid-19 is scary. We are
privileged than most, but still.&lt;/p&gt;
&lt;h2&gt;Reading&lt;/h2&gt;
&lt;p&gt;I've been spending more time trying to read books. It's been good
overall. I read books when i get time from work and other learning in
general.&lt;/p&gt;
&lt;p&gt;I want to make a "Reading" page for this blog where I can track
things. I do not want to use goodreads. It's easily done by generating
a page from my internal tracking org-mode file that I use, the catch
is that the output needs to be sanitized for the web. #TODO&lt;/p&gt;</content><category term="Meta"></category><category term="Work"></category></entry><entry><title>Container Networking, Namespaces and Tcpdump.</title><link href="https://signalshore.github.io/blog/Container-Networking-and-Tcpdump.html" rel="alternate"></link><published>2020-06-16T00:00:00+05:30</published><updated>2020-06-16T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2020-06-16:/blog/Container-Networking-and-Tcpdump.html</id><summary type="html">&lt;!-- Summary:  --&gt;

&lt;p&gt;How do you run tcpdump only on a container ? How does container
networking even work ?&lt;/p&gt;
&lt;p&gt;In this we will explore some bits of container networking and figure
out how to run tcpdump in such a way that only the traffic from a
container is captured.&lt;/p&gt;
&lt;p&gt;Normally running &lt;code&gt;tcpdump&lt;/code&gt; on the â€¦&lt;/p&gt;</summary><content type="html">&lt;!-- Summary:  --&gt;

&lt;p&gt;How do you run tcpdump only on a container ? How does container
networking even work ?&lt;/p&gt;
&lt;p&gt;In this we will explore some bits of container networking and figure
out how to run tcpdump in such a way that only the traffic from a
container is captured.&lt;/p&gt;
&lt;p&gt;Normally running &lt;code&gt;tcpdump&lt;/code&gt; on the eth0 interface on a instance is good
enough, but what do you do when your container host is running
multiple containers and you do not need to see all of their traffic ?&lt;/p&gt;
&lt;p&gt;As usual this was a debugging scenario on prod. &lt;/p&gt;
&lt;h1&gt;The Problem&lt;/h1&gt;
&lt;p&gt;There was a nasty connection timeout issue when I was involved in the
debugging discussion. My initial reaction was to break out tcpdump
and let it capture on the primary &lt;code&gt;eth0&lt;/code&gt; interface.&lt;/p&gt;
&lt;p&gt;As I would soon discover, the volume of data flowing through that
instance was very high and capturing on the interface is not
feasible. If you are capturing upwards of 100MB + files every second,
things get bad really soon. Furthermore, you don't need all the
packets, you only need the packets destined for that specific
container.&lt;/p&gt;
&lt;p&gt;Time for some container networking lessons&lt;/p&gt;
&lt;h1&gt;Container Networking&lt;/h1&gt;
&lt;p&gt;Containers use a Linux isolation framework called namespaces in order
to isolate process running on a host. For networking, every container
runs in its own separate networking namespace so that it is isolated
from other processes and connection between these different namespaces
is established by using Virtual Ethernet devices called &lt;code&gt;veth&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;From the man page of &lt;a href="https://man7.org/linux/man-pages/man4/veth.4.html"&gt;veth&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The veth devices are virtual Ethernet devices.  They can act as
     tunnels between network namespaces to create a bridge to a
     physical network device in another namespace. They are created in
     pairs.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We can think of them as virtual Ethernet cables that are connected to
something on both ends to some network interface. The interfaces are
like virtual Ethernet ports similar to the Ethernet port on your
computer.&lt;/p&gt;
&lt;p&gt;So now, we can have to look at the scenario from two different
perspectives, from the host's perspective and from the containers
perspective.&lt;/p&gt;
&lt;p&gt;I am running a simple &lt;code&gt;sh&lt;/code&gt; shell in alpine.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# docker run -it alpine:latest /bin/sh&lt;/span&gt;
&lt;span class="s-Atom"&gt;#&lt;/span&gt; &lt;span class="s-Atom"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Hello :-) &amp;quot;&lt;/span&gt;
&lt;span class="s-Atom"&gt;#&lt;/span&gt; &lt;span class="nv"&gt;Hello&lt;/span&gt; &lt;span class="p"&gt;:-)&lt;/span&gt; 
&lt;span class="s-Atom"&gt;#&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now, I am run &lt;code&gt;ip link&lt;/code&gt; which will describe the network interfaces.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;# ip link&lt;/span&gt;
&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;LOOPBACK&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;UP&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;LOWER_UP&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;mtu&lt;/span&gt; &lt;span class="mi"&gt;65536&lt;/span&gt; &lt;span class="n"&gt;qdisc&lt;/span&gt; &lt;span class="n"&gt;noqueue&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="n"&gt;UNKNOWN&lt;/span&gt; &lt;span class="n"&gt;qlen&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;
    &lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;loopback&lt;/span&gt; &lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt; &lt;span class="n"&gt;brd&lt;/span&gt; &lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt;
&lt;span class="mi"&gt;17&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;eth0&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;if18&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;BROADCAST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;MULTICAST&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;UP&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;LOWER_UP&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;M&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;DOWN&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;mtu&lt;/span&gt; &lt;span class="mi"&gt;1500&lt;/span&gt; &lt;span class="n"&gt;qdisc&lt;/span&gt; &lt;span class="n"&gt;noqueue&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="n"&gt;UP&lt;/span&gt; 
    &lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ether&lt;/span&gt; &lt;span class="mo"&gt;02&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ac&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;01&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mo"&gt;00&lt;/span&gt; &lt;span class="n"&gt;brd&lt;/span&gt; &lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ff&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Here, we that &lt;code&gt;eth0@if18&lt;/code&gt; has an &lt;code&gt;@ifXX&lt;/code&gt; in it which makes things very
interesting. This signifies two things. The '@' shows us that this
interface is linked to another interface and the '&lt;em&gt;ifXX&lt;/em&gt;' tells us
that the interface it is linked to is not in the same network
namespace.&lt;/p&gt;
&lt;p&gt;Every interface is supposed to be connected on both ends and every
interface has an interface index. This is the value that we see on the
above output as 1 and 17. This can be found out by reading the value
at &lt;code&gt;/sys/class/net/&amp;lt;interface&amp;gt;/ifindex&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;# cat /sys/class/net/eth0/ifindex &lt;/span&gt;
&lt;span class="mi"&gt;17&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can read the value of the linked interface from &lt;code&gt;/sys/class/&amp;lt;interface&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The one it is connected to is called the
peer link and we can look at its index in
&lt;code&gt;/sys/class/net/&amp;lt;interface&amp;gt;/iflink&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;# cat /sys/class/net/eth0/iflink&lt;/span&gt;
&lt;span class="mi"&gt;18&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;But, that is surprising because my container does not have any
interface with &lt;em&gt;ifindex&lt;/em&gt;=18. That is not a mistake. This shows that
the interface 17 on the container is linked to interface 18 on my
&lt;em&gt;host&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;This is what &lt;code&gt;ip link&lt;/code&gt; shows on my host.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;lo&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;LOOPBACK&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;UP&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;LOWER_UP&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;mtu&lt;/span&gt; &lt;span class="mi"&gt;65536&lt;/span&gt; &lt;span class="n"&gt;qdisc&lt;/span&gt; &lt;span class="n"&gt;noqueue&lt;/span&gt; &lt;span class="n"&gt;state&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;EXTRA&lt;/span&gt; &lt;span class="n"&gt;DETAILS&lt;/span&gt; &lt;span class="n"&gt;TRUNCATED&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt;
    &lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;loopback&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt; &lt;span class="n"&gt;brd&lt;/span&gt; &lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;00&lt;/span&gt;
&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;enp0s31f6&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;NO&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;CARRIER&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;BROADCAST&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;MULTICAST&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;UP&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;mtu&lt;/span&gt; &lt;span class="mi"&gt;1500&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;EXTRA&lt;/span&gt; &lt;span class="n"&gt;DETAILS&lt;/span&gt; &lt;span class="n"&gt;TRUNCATED&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt;
    &lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ether&lt;/span&gt; &lt;span class="n"&gt;e8&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;64&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;c1&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;brd&lt;/span&gt; &lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ff&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;wlp6s0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;BROADCAST&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;MULTICAST&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;UP&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;LOWER_UP&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;mtu&lt;/span&gt; &lt;span class="mi"&gt;1500&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;EXTRA&lt;/span&gt; &lt;span class="n"&gt;DETAILS&lt;/span&gt; &lt;span class="n"&gt;TRUNCATED&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt;
    &lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ether&lt;/span&gt; &lt;span class="mi"&gt;98&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;bc&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;d9&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;b0&lt;/span&gt; &lt;span class="n"&gt;brd&lt;/span&gt; &lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ff&lt;/span&gt;
&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;docker0&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;BROADCAST&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;MULTICAST&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;UP&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;LOWER_UP&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;mtu&lt;/span&gt; &lt;span class="mi"&gt;1500&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;EXTRA&lt;/span&gt; &lt;span class="n"&gt;DETAILS&lt;/span&gt; &lt;span class="n"&gt;TRUNCATED&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt;
    &lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ether&lt;/span&gt; &lt;span class="mi"&gt;02&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;42&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;27&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;cf&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;32&lt;/span&gt; &lt;span class="n"&gt;brd&lt;/span&gt; &lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ff&lt;/span&gt;
&lt;span class="mi"&gt;18&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;veth01f0f9d&lt;/span&gt;&lt;span class="err"&gt;@&lt;/span&gt;&lt;span class="n"&gt;if17&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;lt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;&lt;span class="n"&gt;BROADCAST&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;MULTICAST&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;UP&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt;&lt;span class="n"&gt;LOWER_UP&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;gt&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt; &lt;span class="n"&gt;mtu&lt;/span&gt; &lt;span class="mi"&gt;1500&lt;/span&gt; &lt;span class="o"&gt;[[&lt;/span&gt;&lt;span class="n"&gt;EXTRA&lt;/span&gt; &lt;span class="n"&gt;DETAILS&lt;/span&gt; &lt;span class="n"&gt;TRUNCATED&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt;
    &lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;ether&lt;/span&gt; &lt;span class="n"&gt;f6&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;d7&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;73&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;f4&lt;/span&gt; &lt;span class="n"&gt;brd&lt;/span&gt; &lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ff&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ff&lt;/span&gt; &lt;span class="n"&gt;link&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;netnsid&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;NOTE&lt;/strong&gt; Notice how interface &lt;em&gt;18&lt;/em&gt; is linked to interface &lt;em&gt;17&lt;/em&gt; on another namespace. This will be important.&lt;/p&gt;
&lt;h3&gt;Why don't we have a iflink for some interfaces.... ?&lt;/h3&gt;
&lt;p&gt;Interfaces that represent physical devices (eth0, wlan0) are linked to themselves and hence the '@' is not used.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;# cat /sys/class/net/wlp6s0/ifindex&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="cp"&gt;# cat /sys/class/net/wlp6s0/iflink&lt;/span&gt;
&lt;span class="mi"&gt;3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2&gt;How is this related to tcpdump ?&lt;/h2&gt;
&lt;p&gt;Well, we have figured out that all traffic from the container is
flowing through the host machine via a linked network interface, so
in order to sniff packets only from that container, we can tell tcpdump
to point to that interface only.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tcpdump -i &amp;lt;interface&amp;gt; -w output.pcap&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;and  Voila!!! Now  we can  sit  and sniff  packet only  from a  docker
container.&lt;/p&gt;
&lt;p&gt;Not only does this vastly reduce the size of the capture files, it
also reduces complexity during the analysis phase.&lt;/p&gt;
&lt;p&gt;That is it. Thanks for reading and happy sniffing.&lt;/p&gt;</content><category term="CS"></category><category term="Tech"></category></entry><entry><title>Life During a Pandemic</title><link href="https://signalshore.github.io/blog/Life-During-A-Pandemic.html" rel="alternate"></link><published>2020-05-16T00:00:00+05:30</published><updated>2020-05-16T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2020-05-16:/blog/Life-During-A-Pandemic.html</id><summary type="html">&lt;p&gt;In case you are reading this from the future.&lt;/p&gt;</summary><content type="html">&lt;h2&gt;Context&lt;/h2&gt;
&lt;p&gt;The world is going through the Covid-19 pandemic right now and it has
brought the world to its knees.  We've been under lockdown for more
than a month. It started during the last week of March and we are
already at the Middle of May.&lt;/p&gt;
&lt;p&gt;There is no sign of this pandemic stopping anytime soon. There are
just a bunc of theories.&lt;/p&gt;
&lt;h2&gt;Work&lt;/h2&gt;
&lt;p&gt;Things are quite bad overall. A bunch of people I know have been fired
or know someone who has been fired. Some companies are doing good,
some are doing bad. I am not sure how most companies will come out of
this.&lt;/p&gt;
&lt;p&gt;We went complete remote about a week before the official lockdown
started and so far my colleagues at our HR team and our internal
systems has been very very helpful. They are doing everything they can
and I could not ask for more. &lt;/p&gt;
&lt;p&gt;Work seems ot have increased during the lockdown. The site is seeing
an increase in traffick due to some advertisement champaigns etc
etc. All of this is veyr new to me. I had no idea that advertisements
were so effective. Regardless, it is very interesting and I am
personally quite glad that the container platform here is working as
intended. We are also onboarding a lot of new services in the
container ecosystem. Its is quite fun.&lt;/p&gt;
&lt;p&gt;Work has increased though. Previously when we used to go to office we
could choose when to sign off, but recently with working from home I
am clocking 12-hour days on an average. It's been really hectic.&lt;/p&gt;
&lt;h2&gt;Personal Finance&lt;/h2&gt;
&lt;p&gt;I am a very conservative person when it comes to personal finance. I
dont like speding money. I started to put some money in various Mutual
Funds from Jan, 2020. This was after I had suffitient money saved for
my rainy-day-fund. &lt;/p&gt;
&lt;p&gt;During the lockdown, I caught a stupid mistake in my calculation and I
realized that I did not have enough money in my rainy-day store for a
year, so I pulled back some money from the Mutual Funds, with some
losses. Lesson Learnt.&lt;/p&gt;
&lt;h2&gt;Normal Life&lt;/h2&gt;
&lt;p&gt;I quite like being isolated. I've been weaning myself off of Social
Media steadily for about 3 months now. Instagram and facebook were the
first to go. Followed by less dependence on Twitter and Reddit and
Whatsapp. On certain days I can pass an entire day without talking to
a single living soul. &lt;/p&gt;
&lt;p&gt;I've been reading a bit more these days. I have a decent amount of
time, now with working from home etc etc. Im getting less time to read
than before, but its okay.&lt;/p&gt;
&lt;p&gt;I developed a lower-back ache about 2 weeks back and henceforth I
started exercising regularly. The back pain is better.&lt;/p&gt;
&lt;p&gt;I started talking to my college friends again. Its been rather nice to
talk to them. &lt;/p&gt;
&lt;h2&gt;Food&lt;/h2&gt;
&lt;p&gt;I have always had a weird relationship with food. I got a bunch fo
supplies to last me a good couple of weeks of isolation and that they
did. However my supplies are about to run away so I am rationing now.&lt;/p&gt;
&lt;p&gt;For the first month, I lived mostly on Bread and Peanut Butter
Sandwiches. I used to toast them sometimes with Margarine. And
oats. We get "just add hot water" type oats here. I prefer these to
instant noodles. To augment the nutritional value, I also add peas and
vegetables to them.&lt;/p&gt;
&lt;p&gt;I tried experimenting with eggs and meat and I have to say, it is
considerably more work than the value they provide.&lt;/p&gt;
&lt;p&gt;Since this lockdown is not coming to an end anytime soon, I am trying
a different sort of cooking than my traditional "boil everything
together with salt". I am adding beans to the mix. They are quite
nutritious.&lt;/p&gt;
&lt;hr&gt;

&lt;p&gt;That is all for today. Thanks for reading. Let's hope that we get
through this mess quickly.&lt;/p&gt;</content><category term="Meta"></category></entry><entry><title>Personal Accounting</title><link href="https://signalshore.github.io/blog/Accounting.html" rel="alternate"></link><published>2020-04-19T00:00:00+05:30</published><updated>2020-04-19T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2020-04-19:/blog/Accounting.html</id><summary type="html">&lt;p&gt;A description of my accounting system at 2020.&lt;/p&gt;</summary><content type="html">&lt;p&gt;I used to hate accounting when I had the subject in my Undergrad. It
seemed extremely complicated for no apparent reason. &lt;/p&gt;
&lt;p&gt;Over the years I have started to appreciate the need for accounting and
I have a small system for maintaining my personal accounts as well.&lt;/p&gt;
&lt;h1&gt;Beginning&lt;/h1&gt;
&lt;p&gt;It started back in 2015 when I moved to Bangalore and was living alone
for the first time. The amount of money needed to just survive was
very surprising to me (not because things were too expensive; but
because I wasn't used to paying for everything I wanted).&lt;/p&gt;
&lt;p&gt;To keep track of where my money went, I used to maintain a simple
spreadsheet that had all my transactions in it. Since I was not
earning any money, this was a good enough system. I used this simple
process until I started my internship. This complicated things
because now, I was being paid and I needed to account for the inflow
of cash as well. With little difficulty I managed to integrate this
into the spreadsheet as well. Then it became too complicated and I
gave up. I did not do any accounting till about September 2018.&lt;/p&gt;
&lt;h1&gt;The need for proper accounting&lt;/h1&gt;
&lt;p&gt;I started working about 2 months prior and I was being paid a decent
wage. On top of it I also had proper expenses, rent, taxes, internet
bills etc etc. I realized that the simple spreadsheet would be too
complicated and a proper accounting software (like Tally) would be too
much for my needs. I knew that in order to track everything properly I
needed to use the &lt;a href="https://en.wikipedia.org/wiki/Double-entry_bookkeeping"&gt;Double-Entry&lt;/a&gt; accounting system.&lt;/p&gt;
&lt;p&gt;The Double-Entry Accounting system is a concept that says that every
transaction has two parties that are involved. One party gives money
and the other party receives money. This is something that was not
taught properly in college and was the main reason I hated the
accounts classes. &lt;/p&gt;
&lt;p&gt;I needed something that would be simple for my needs and something
that would be able to handle double-entry accounting system.&lt;/p&gt;
&lt;h1&gt;Enter ledger-cli&lt;/h1&gt;
&lt;p&gt;This is a &lt;a href="https://plaintextaccounting.org/"&gt;plaintext accounting&lt;/a&gt; software. What this means is that
&lt;a href="https://www.ledger-cli.org/"&gt;ledger-cli&lt;/a&gt; uses plaintext files to do proper accounting. &lt;/p&gt;
&lt;p&gt;I &lt;em&gt;love&lt;/em&gt; text files. Simple text files with no magic sauce on the file
itself, and you can have whatever sauce you want on the application
level. This gives you the flexibility of being able to play with the
plaintext file with other text processing tools available on Linux
(grep/sed/awk) etc.&lt;/p&gt;
&lt;p&gt;With ledger-cli you do not have to learn a bunch of things just to
use it.&lt;/p&gt;
&lt;p&gt;Each transaction in ledger looks like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="mi"&gt;2019&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mo"&gt;04&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;19&lt;/span&gt; &lt;span class="n"&gt;Bought&lt;/span&gt; &lt;span class="n"&gt;some&lt;/span&gt; &lt;span class="n"&gt;icecream&lt;/span&gt;
    &lt;span class="nl"&gt;AccountA:&lt;/span&gt;&lt;span class="n"&gt;SubAccountA1&lt;/span&gt;  &lt;span class="mi"&gt;3000&lt;/span&gt;
    &lt;span class="nl"&gt;AccountB:&lt;/span&gt;&lt;span class="n"&gt;SubAccountB1&lt;/span&gt;  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;3000&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;That's about it. It basically says that for buying some coffee you paid
3000 (in any unit of currency) from SubAccountB1 to SubAccountA1.
The &lt;code&gt;Account:SubAccountA1&lt;/code&gt; is used to illustrate that you can have nested accounts.&lt;/p&gt;
&lt;p&gt;Ledger also does amazing reporting.
For example: This is how much I've spent on travelling over the two years (This exclude everyday transport using busses and autos)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;ledger&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;personal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ledger&lt;/span&gt; &lt;span class="n"&gt;balance&lt;/span&gt; &lt;span class="n"&gt;Expenses&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;travel&lt;/span&gt;
        &lt;span class="mf"&gt;78331.94&lt;/span&gt;  &lt;span class="n"&gt;Expenses&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Travel&lt;/span&gt;
          &lt;span class="mf"&gt;543.51&lt;/span&gt;    &lt;span class="n"&gt;Cab&lt;/span&gt;
            &lt;span class="mi"&gt;4137&lt;/span&gt;    &lt;span class="n"&gt;Cancel&lt;/span&gt;
           &lt;span class="mi"&gt;55661&lt;/span&gt;    &lt;span class="n"&gt;Flight&lt;/span&gt;
           &lt;span class="mi"&gt;10855&lt;/span&gt;    &lt;span class="n"&gt;Package&lt;/span&gt;
             &lt;span class="mi"&gt;690&lt;/span&gt;    &lt;span class="n"&gt;Rent&lt;/span&gt;
         &lt;span class="mf"&gt;6445.43&lt;/span&gt;    &lt;span class="n"&gt;Trains&lt;/span&gt;
&lt;span class="o"&gt;----------------&lt;/span&gt;
        &lt;span class="mf"&gt;78331.94&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;For example: This shows how much I've spent on House Rent and etc etc stuff. (I only have an audible subscription that I share)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;ledger&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;f&lt;/span&gt; &lt;span class="n"&gt;personal&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ledger&lt;/span&gt; &lt;span class="n"&gt;balance&lt;/span&gt; &lt;span class="n"&gt;Expenses&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Utilities&lt;/span&gt;
          &lt;span class="mi"&gt;162243&lt;/span&gt;  &lt;span class="n"&gt;Expenses&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="n"&gt;Utilities&lt;/span&gt;
           &lt;span class="mi"&gt;11833&lt;/span&gt;    &lt;span class="n"&gt;Electricity&lt;/span&gt; &lt;span class="n"&gt;Bill&lt;/span&gt;
          &lt;span class="mi"&gt;142900&lt;/span&gt;    &lt;span class="n"&gt;House&lt;/span&gt; &lt;span class="n"&gt;Rent&lt;/span&gt;
            &lt;span class="mi"&gt;3744&lt;/span&gt;    &lt;span class="n"&gt;Internet&lt;/span&gt;
            &lt;span class="mi"&gt;3666&lt;/span&gt;    &lt;span class="n"&gt;Phone&lt;/span&gt; &lt;span class="n"&gt;Recharge&lt;/span&gt;
             &lt;span class="mi"&gt;100&lt;/span&gt;    &lt;span class="n"&gt;Subscriptions&lt;/span&gt;
&lt;span class="o"&gt;----------------&lt;/span&gt;
          &lt;span class="mi"&gt;162243&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Its just fun. You also use sed/awk to generate reports/graphs of your own.&lt;/p&gt;
&lt;h1&gt;For the Future&lt;/h1&gt;
&lt;p&gt;I see more complexity coming my way as I start investing properly. I
only stick to mutual funds as of now, but tracking them has been a
pain. I am recording all the &lt;code&gt;buy&lt;/code&gt;s in my system, but I don't record
the &lt;code&gt;sell&lt;/code&gt;s properly.&lt;/p&gt;
&lt;p&gt;I also need to record Reimburseable expenses better and salaries better. &lt;/p&gt;
&lt;p&gt;Apart from that, this system looks robust as of now.&lt;/p&gt;
&lt;h1&gt;Why do this at all?&lt;/h1&gt;
&lt;p&gt;We struggled with money a lot while growing up, not because we had
less, but because we didn't measure how we spent it. Moreover, I like
data, I like reports and I like text files. I want to keep track of my
money.&lt;/p&gt;
&lt;p&gt;What doesn't get measured; doesn't get fixed. :-)&lt;/p&gt;
&lt;p&gt;That's it for today.&lt;/p&gt;</content><category term="Meta"></category></entry><entry><title>Confused At 2020</title><link href="https://signalshore.github.io/blog/Confused-at-2020.html" rel="alternate"></link><published>2020-03-18T00:00:00+05:30</published><updated>2020-03-18T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2020-03-18:/blog/Confused-at-2020.html</id><summary type="html">&lt;p&gt;I am confused. When I got out of college i thought I had a plan.  I
would work for 2 years and then I would go off to university. I wasn't
supposed to change jobs in those 2 years. &lt;/p&gt;
&lt;p&gt;To say that things got fucked up, would be an understatement â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I am confused. When I got out of college i thought I had a plan.  I
would work for 2 years and then I would go off to university. I wasn't
supposed to change jobs in those 2 years. &lt;/p&gt;
&lt;p&gt;To say that things got fucked up, would be an understatement.&lt;/p&gt;
&lt;p&gt;In the course of these two years I discovered/realized a bunch of
things. &lt;/p&gt;
&lt;h1&gt;Work!&lt;/h1&gt;
&lt;p&gt;I used to think that I would hate working and after two years I would
get into a decent university and everything would be
amazing. Somewhere in the middle I got drawn into the world of DevOps
and I fell in Love with it. I absolutely love my job as a DevOps
engineer because it fits very closely with what I love.&lt;/p&gt;
&lt;p&gt;As a DevOps Engineer I get to play/interact on interesting projects
with multiple teams that directly improve the lives of my colleagues
and myself. I get to play with high-level tools like Docker/AWS etc and
also low level tools to help debug TCP/UDP connection level issues.  I
am secretly proud that I can read tcpdump logs. :-)&lt;/p&gt;
&lt;p&gt;At Shaadi, things are complicated enough to keep me interested and the
number of things that I want to do to improve the existing system will
easily occupy me for the next 3 months. So, things are really good
here. I'm learning a lot and I am discovering new skills that I did
not know I had.&lt;/p&gt;
&lt;h1&gt;College and Studying&lt;/h1&gt;
&lt;p&gt;I have been having cold-feet about applying to colleges for the last 4
months. About a year ago I was 100% sure that I wanted to go to
college. Now, I am not so much sure. But now with Covid-19 I think its
only good that I did not apply. &lt;/p&gt;
&lt;p&gt;Things have also developed for me on the academic front as well.
During the last two years I realized that my mathematical background
isn't good enough for me to get into a math-heavy course. Most of the
courses need you to have some heavy mathematics in your undergraduate
level for you to be eligible. BCA was probably the worst decision I
ever made but my friends from college are again the best people I know
so I don't know what to make of that.&lt;/p&gt;
&lt;p&gt;For some reason I used to think that people who do the theoretical
sciences are better than people who do the non-theoretical sciences
and as a result I tried very very hard to be one of the theoretical
science people. Its a belief that I have outgrown. If I were to
categorize myself I would say that between the theoretical and
practical spectrum I stand with somewhere in the middle. I can read a
100 page paper with decent comprehension and at the same time I can
come up with wild hacks to get something done.&lt;/p&gt;
&lt;p&gt;I am actually considering studying distributed systems and
computational modelling in college. I still need to explore the
computational modelling space a bit. Having worked significantly with
distributed systems for the past 2 years I am positive I would love to
study this field in more detail. Databases is also another thing I am
looking at. Let's see. &lt;/p&gt;
&lt;h1&gt;Learning&lt;/h1&gt;
&lt;p&gt;I do not think that going to college is a necessity, however there is
a chance I might want to get into academic research and that
definitely requires a person to go to college.&lt;/p&gt;
&lt;p&gt;On the other-hand learning is something that is always going on. It
never stops. New things to learn have always motivated me. For me the
difficulty is not getting started, the difficulty is staying on track
and see something through. Having a bunch of half-finished books and
projects is a commonality in my life. There is just too much to learn
in this world that its criminal to not even try.&lt;/p&gt;
&lt;h1&gt;Philosophy&lt;/h1&gt;
&lt;p&gt;I have been listening to a podcast called the "Philosophize This". I
never knew that I would enjoy reading and learning about
philosophical ideas so much.&lt;/p&gt;
&lt;p&gt;I am halfway through the podcast and I plan to go through it again. I
really like the skeptics and the work of the existentialists. But in
either case, I don't know enough to comment. It's just fascinating to
read and think about.&lt;/p&gt;
&lt;h1&gt;Freedom&lt;/h1&gt;
&lt;p&gt;Since applying to college isn't a priority anymore, I feel a lil bit
more free. I can explore ideas/courses that I didn't previously
explore because now I do not have a deadline hanging over me.&lt;/p&gt;
&lt;p&gt;Its quite nice. I read books/things I enjoy which are not directly
related to what I want to study in college. This feels like a HUGE
development.&lt;/p&gt;</content><category term="Meta"></category></entry><entry><title>Bash and Netcat</title><link href="https://signalshore.github.io/blog/TCP-Proxy-in-Bash.html" rel="alternate"></link><published>2020-01-12T00:00:00+05:30</published><updated>2020-01-12T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2020-01-12:/blog/TCP-Proxy-in-Bash.html</id><summary type="html">&lt;p&gt;Some bash tricks; named pipes, netcat, and a tcp proxy.&lt;/p&gt;</summary><content type="html">&lt;p&gt;I have a fascination for bash based tooling. I prefer awk, sed, grep
over any fancy tooling. Anyway, recently I have discovered two really
cool features about Bash.&lt;/p&gt;
&lt;h1&gt;TCP proxy using Named Pipes&lt;/h1&gt;
&lt;p&gt;We all know what pipes are in bash. Pipes in bash let you create data
streams from one process to another process. However the syntax of
using pipes with processess can be a bit difficult and restrictive.&lt;/p&gt;
&lt;p&gt;For example, 
If you want to push the output of process A into process B, you would write it as such&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="sx"&gt;!bash&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;B&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This is similar to &lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;A &amp;amp;gt; file &lt;span class="nv"&gt;$ &lt;/span&gt;B &amp;amp;lt; file
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Named pipes are special files that can be used to pass data between
two processess. When a process writes to a named pipe the kernel
processess the data internally and does not write data to the file
system. Moreover named pipes are blocking, i.e. if there is no reader
present then you can not write to a named pipe. This feature makes it
ideal to signal backpressure etc etc.&lt;/p&gt;
&lt;p&gt;You make a named pipe is bash using the &lt;code&gt;mkfifo &amp;lt;filename&amp;gt;&lt;/code&gt; command. As you can
see, a named pipe is nothing but a first-in-first-out stream (with
some added bells and whistles).&lt;/p&gt;
&lt;p&gt;In a cool hack you can make a TCP proxy using netcat and named pipes&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;nc -lp 6000 &amp;amp;lt;primary | nc localhost 5000 &amp;amp;gt;primary
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;This uses the named pipe &lt;code&gt;primary&lt;/code&gt; as a bidirectional pipe.&lt;/p&gt;
&lt;p&gt;Let us see what is going on here.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;nc -lp 6000 &amp;lt;primary&lt;/code&gt; tells netcat to listen on locahost:6000 and accept inputs from the primary fifo.&lt;/li&gt;
&lt;li&gt;Then we push the output (which in this case is the response to the input that is being piped from the fifo) to the next netcat instance.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nc localhost 5000 &amp;gt;primary&lt;/code&gt; this tells netcat to connect to a server running at port 5000 and send the output to the primary fifo.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Whats more ?&lt;/h2&gt;
&lt;p&gt;You can even copy the entire TCP stream using this little tool called &lt;code&gt;tee&lt;/code&gt;.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;nc -lvp 6000 &amp;amp;lt;primary | tee mirror | nc localhost 5000 &amp;amp;gt;primary
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;In this case you have to read from the &lt;code&gt;mirror&lt;/code&gt; fifo and you should be
able to see all the traffic flowing through your proxy. Change the
fifo &lt;code&gt;mirror&lt;/code&gt; to a real file and you will have a copy of the traffic.&lt;/p&gt;</content><category term="Tech"></category></entry><entry><title>Imitation wont get me there</title><link href="https://signalshore.github.io/blog/Imitation-wont-get-you-there.html" rel="alternate"></link><published>2019-11-30T00:00:00+05:30</published><updated>2019-11-30T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2019-11-30:/blog/Imitation-wont-get-you-there.html</id><summary type="html">&lt;p&gt;How many times when we want to do something do we stop and think that
maybe what we are attempting to do is futile because we do not have
what the pros have ?&lt;/p&gt;
&lt;p&gt;maybe it's because you don't have that cutting edge climbing shoes, or
that expensive camera, or that â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;How many times when we want to do something do we stop and think that
maybe what we are attempting to do is futile because we do not have
what the pros have ?&lt;/p&gt;
&lt;p&gt;maybe it's because you don't have that cutting edge climbing shoes, or
that expensive camera, or that fancy guitar.&lt;/p&gt;
&lt;p&gt;Most of us have some thing that we would like to get better at, be it
any particular sport or mathematics or computer programming or
trekking for that matter and in most of these fields there are certain
people who are at the very top. These are the inspiring people, these
are the people we look up to and often we imitate the habits of these
people, believing that imitation would help us get there. Now this
imitation can often take a bad turn. I'll make my case below.&lt;/p&gt;
&lt;p&gt;What follows below was very true for me in certain aspects. YMMV. I do
not claim that I have the fundamental truth. All I know is that at
this point in time and space, this is true for me.&lt;/p&gt;
&lt;h1&gt;All Imitation is not the same&lt;/h1&gt;
&lt;p&gt;I think that there are two very different forms of imitation. In one
form you look at a prolific programmer and you start
studying/practicing how they practised. Or you look at the footsteps
of a developer that you admire and study what they did etc etc. I
believe that this is a good model to imitate.&lt;/p&gt;
&lt;p&gt;On the other hand you have the kind of imitation where you look at
what possessions a person has or what tools that person uses and you
conclude that the possession/tool is a part of the reason why they are
so prolific. Case in point, it's the fancy Mac Book Pro that makes
prolific programmer so prolific and maybe, if you also use a Mac Book
Pro you would be equally closer to being prolific.&lt;/p&gt;
&lt;p&gt;It might seem that these are small examples that I have cherry picked,
but I have seem myself do it a lot of times and I have seen other
people do it too.&lt;/p&gt;
&lt;h1&gt;The scene in Tech ?&lt;/h1&gt;
&lt;p&gt;Have you seen a popular Youtuber do a &lt;em&gt;setup tour&lt;/em&gt;. Have you seen
questions like &lt;em&gt;which text editor does &lt;insert person here&gt; use&lt;/em&gt; (I
have googled this myself multiple times). There are multiple varieties
of this. Which window manager, which standing desk, which headphone,
etc etc.&lt;/p&gt;
&lt;p&gt;Now, I am not saying that everyone who watches these videos are people
who want to get these gadgets so that they get better at whatever they
are trying to do. However, there are certain people who are trying to
find answers in the wrong places.&lt;/p&gt;
&lt;p&gt;In tech this often happens in the form of someone explaining that
buying a &lt;em&gt;good&lt;/em&gt; laptop is the way to get started. Believe me, this
sort of advise is very common on the internet. I used to think this
too for a long time and I used to hate my current laptop which I
bought from college. It was a low-end device but nevertheless it was a
device that actually worked and it was the best I could afford at that
point. It took me quite some time to see that point.&lt;/p&gt;
&lt;p&gt;I have seen inspiring people do inspiring work is shittier laptops and
I can tell you (and myself) that the choice of laptop does not
matter. It's a &lt;em&gt;good to have&lt;/em&gt;, not a &lt;em&gt;necessity&lt;/em&gt;.&lt;/p&gt;
&lt;h1&gt;A word about Isomorphic Mimicry&lt;/h1&gt;
&lt;p&gt;I heard of this term first time In episode 138 (12 dream reforms) on
the Seen and the Unseen podcast.&lt;/p&gt;
&lt;p&gt;https://en.wikipedia.org/wiki/Capacity_building#Isomorphic_mimicry&lt;/p&gt;
&lt;p&gt;This method is used by governments of developing countries which try
to mimic other government success's by replicating methods and policy
designs deemed successful in other countries. This does not work in
certain cases for it ignores all ground level realities.&lt;/p&gt;
&lt;p&gt;Now, when I heard it for the first time, I could immediately see how
this could apply in a personal way.&lt;/p&gt;
&lt;h1&gt;How did I fall into this trap ?&lt;/h1&gt;
&lt;p&gt;For a decent amount of time I used to believe that I needed a good and
powerful laptop to do good work. Which is not the case. &lt;/p&gt;
&lt;p&gt;I kind of like cycling, and for a long time I used to believe that I
need a very fancy bicycle so that I can do "proper" cycling. I enjoy
thinking about "bicycle touring" and it's a sport where you need some
amount of gear. I quite like the gear too. But, for a lot of time I
used to believe that having the gear will make you an expert
tourer. Which is false. There are lots of people who use non-fancy
bicycles to tour.&lt;/p&gt;
&lt;p&gt;The fact that the bicycling industry has come up with various
different types of bicycles each designed for a specific form of the
sport does not help either. There are mountain bikes, road bikes,
hybrids, commuters, gravel bikes, touring bikes, TT bikes etc
etc. Now, there are different specialized sports that need these
specialized bicycle variants, but the point is that for the kind of
riding I do, all of the differences do not matter at all. So, the
bottom line for me is not that these differences are unnecessary, but
that they are unnecessary for me.&lt;/p&gt;
&lt;p&gt;The same logic applies to programming and nay sort of exercise that
requires some gear. If you are just getting started, the kind of gear
that you have does not really matter. This is mainly because the gear
plays a very small part when you are just starting out with
something. Often when you are starting out, you yourself are the
biggest bottleneck, and the only way you can get better is to becomes
less of a bottleneck. The equipment (bicycle, computer) that you own
beings to matter only when they begin to become the bottleneck and not
you.&lt;/p&gt;
&lt;h1&gt;How did I get out of it ?&lt;/h1&gt;
&lt;p&gt;I don't think I have fully managed to look byond the BS in most fields
when it comes to arguments like these, however I have come a long way.&lt;/p&gt;
&lt;p&gt;It was a blog post on the website
of
&lt;a href="https://surlybikes.com/blog/some_answers_to_just_about_any_bike_forum_post_ive_ever_read?fbclid=IwAR3AA7ubNCtsUtwSdEtDBXtZ0HMLpIhq4sv_QWkxMXPiQXvg1jrmv689FXU"&gt;Surly Bikes&lt;/a&gt;. Read
it. It is amazing. Surly makes amazinf bikes and are known for their
steel framed touring bikes. People have travelled around the world on Surly Long Haul Truckers. &amp;lt;3&lt;/p&gt;
&lt;p&gt;Also, outside of cycling I have seen people do great things on not-so-great equipment, the equipment does not really matter. :-)&lt;/p&gt;
&lt;h1&gt;Where else does this happen ?&lt;/h1&gt;
&lt;p&gt;There is a similar narrative in almost all forms of sport, where we
are sold the idea that in order to become a pro or in order to
participate in that sport, you need to have some specialized
equipment.&lt;/p&gt;
&lt;p&gt;You need &lt;em&gt;running shoes&lt;/em&gt; for running.
You need &lt;em&gt;special climbing shoes&lt;/em&gt; for climbing
You need a &lt;em&gt;good laptop&lt;/em&gt; for programming.
You need a &lt;em&gt;Gaming PC&lt;/em&gt; for gaming.
You need a &lt;em&gt;Kindle&lt;/em&gt; (or any e-reader) to experience ebook properly. 
You need a &lt;em&gt;mechanical keyboard&lt;/em&gt; to experience typing joy.
You need a &lt;em&gt;audiophile headphone&lt;/em&gt; to experience good music quality.&lt;/p&gt;
&lt;p&gt;All of this is just shit advise tbh.&lt;/p&gt;
&lt;p&gt;As Sheldon Cooper said&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You only &lt;strong&gt;need&lt;/strong&gt; to breathe. Rest everything is optional. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1&gt;What's the Tl;DR ?&lt;/h1&gt;
&lt;p&gt;If I were to sum everything up for myself, it would be this. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If there is something that you want to do, and you are waiting for
that perfect equipment or that perfect time or someone told you that
you need to master something else before doing that; they were lying
or they didn't know better themselves. All, you need is to just get
started. Get the ball rolling with whatever you have. :-)&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="Meta"></category></entry><entry><title>The Quest for Truth; and other things</title><link href="https://signalshore.github.io/blog/The-quest-for-truth-and-other-things.html" rel="alternate"></link><published>2019-11-24T00:00:00+05:30</published><updated>2019-11-24T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2019-11-24:/blog/The-quest-for-truth-and-other-things.html</id><summary type="html">&lt;p&gt;I've been an inquisitive kid when I was young. I remember picking up
random things and asking endless series of questions etc etc. I still
do all those. I can be relentless when it comes to looking for answers
that do not satisfy my internal metric for truth.&lt;/p&gt;
&lt;p&gt;This was â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've been an inquisitive kid when I was young. I remember picking up
random things and asking endless series of questions etc etc. I still
do all those. I can be relentless when it comes to looking for answers
that do not satisfy my internal metric for truth.&lt;/p&gt;
&lt;p&gt;This was partially inspired by
a &lt;a href="https://philosophizethis.org/belief/"&gt;Episode 41 (Belief)&lt;/a&gt; from the
&lt;em&gt;Philosophize This!&lt;/em&gt; podcast, and partially about certain things that I
have observed in myself, but did not really want to address/accept.&lt;/p&gt;
&lt;blockquote&gt;
&lt;h6&gt;Everything that follows is what I think and this is true for me at this point in time and space. There is a very good chance that the definition will evolve and grow&lt;/h6&gt;
&lt;/blockquote&gt;
&lt;h1&gt;What is truth and how to find it ?&lt;/h1&gt;
&lt;p&gt;There is no objective truth. There is no objective truth because I as
a human being do not have complete information about the world.&lt;/p&gt;
&lt;p&gt;You almost never have full information hence you will never find the
ultimate truth. This however does not mean that you should stop
looking. In fact, far from it actually. I would argue that the fact
that there is no ultimate truth, makes it all the more valuable to
keep looking for it.&lt;/p&gt;
&lt;p&gt;Imagine how boring it would be to live in a world with a finite amount
of truth in it. Once you have figured out a that amount of truth, there
would be nothing left to do because you have figured it all out.&lt;/p&gt;
&lt;p&gt;Having no definitive truth makes life interesting, for there is always
something new to learn; something new to find out. Moreover, having
partial truths is better than not having any truths in the first
place.&lt;/p&gt;
&lt;h1&gt;The internal Truth Police and skepticism&lt;/h1&gt;
&lt;p&gt;I have an internal metric for truth. This means that if some
hypothesis does not reconcile with my metric for truth then I find it
very difficult to accept said hypothesis. This often manifests in the form of
dissatisfaction from a proposed solution to a problem at work or not
trusting a narrative until a convincing argument is presented, etc
etc. Needless to say this makes me quite obnoxious and a difficult
person at times.&lt;/p&gt;
&lt;p&gt;I've been reading a bunch of old philosophy and one school of
thought that I find myself agreeing with a lot is is Skeptics (and the
Stoics as well). I would argue that this &lt;em&gt;deliberate&lt;/em&gt; skepticism is good. It keeps
me on my toes and I can see bullshit from half a mile away. This habit
has made me take myself and my beliefs very seriously as well.&lt;/p&gt;
&lt;p&gt;It has also made me very very skeptical of grand claims that seem too
good to be true. After all, there is no free lunch, and everything has
a cost.&lt;/p&gt;
&lt;h1&gt;Belief&lt;/h1&gt;
&lt;p&gt;During growing up, I learnt very early on that most of the things that
my family told me about how the world works is False. &lt;/p&gt;
&lt;p&gt;The biggest of these experiences heppened when I was moving to
Bangalore and everyone I knew in Kolkata told me that South India was
a weird place. Their food, their language and their customs are
different and they are very racist towards outsiders. My personal
experience was much different and exactly the opposite. There was a
similar mismatch between what people said and how my experience was
when I travelled to Chennai and until quite recently when I moved to
Mumbai. The point is, I learnt to be skeptical about everything I hear
and that has consumed certain other parts of my life.&lt;/p&gt;
&lt;p&gt;In the podcast we talk about how Belief and truth are two different
things. When you think about it, it makes sense. After all, just
because you believe in something does not mean that it has to be
true. So, how do you make sure that your beliefs are as close to the
truths as possible ?&lt;/p&gt;
&lt;p&gt;In the podcast the host says that one way to make sure that your
beliefs are as close to the truth as possible is by scrutinizing your
beliefs in the most ruthless and the most thorough manner
possible. Now, this is not an easy work. Moreover, this is not a
one-off task. It's a lifelong endeavour. Pledging your allegiance to
the Truth means that you have a lifelong responsibility to make sure
that your beliefs are as closer to the truth as possible.&lt;/p&gt;
&lt;p&gt;The aim is to as intellectually rigorous as possible.&lt;/p&gt;
&lt;h1&gt;Intellectually Rigorous Thinking&lt;/h1&gt;
&lt;p&gt;I do not idolize a lot of people, however I do idolize certain kind of
behaviour in people. I really value knowledge and I hold learning/the
ability and willingness to learn new things above everything else. &lt;/p&gt;
&lt;p&gt;In my experience the most forward thinking, interesting, wise and calm
and kind people are the ones who never stopped learning in the first
place. &lt;/p&gt;
&lt;p&gt;I read somewhere that &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Life is best filled by learning as much as you can about as much as you can.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;and I agree with this completely. &lt;/p&gt;
&lt;p&gt;So, one thing that I noticed amongst the people I idolized was that
they had a very lear way of thinking about things. I'm not talking
about a certain ideology. I'm talking about a way of &lt;em&gt;thinking&lt;/em&gt; about
things no matter which ideology they follow.&lt;/p&gt;
&lt;p&gt;Initially I was quite impressed by Jordan Peterson and he advocated
to "think for yourself". That was quite powerful, until I discovered
Slavoj Zizek and a bunch of other philosophers (can not recall then
but the Hellinistic age was rad), and its amazing to see how they can
think through an issue or a problem.&lt;/p&gt;
&lt;p&gt;One major thing that all these people have in common and all of them
advocate for is to read a lot, or in other words to study as much as
possible. The world is increasingly complex with a lot of interrelated
connections and you can only begin to make sense of it by trying to
understand how these relationships unfold. What I am presonally
impressedd by is that after a certain amount of time you begin to see
things you could not see before, like hidden patterns that show you
how the world works. Listening to people like Bill Gates, Harari,
Peterson (to some extent), Zizek etc etc gives you a feeling of that.&lt;/p&gt;
&lt;p&gt;I recently came across Hellinistic Skepticism and one of the major take
aways from learning about Hellinistic Skepticism is that they believed
that truth is not binary and it was impossible to attain it and they
valued knowing both sides of an argument very well.&lt;/p&gt;
&lt;p&gt;I read somewhere that &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You don't know something unless you can argue both &lt;em&gt;for&lt;/em&gt; and &lt;em&gt;against&lt;/em&gt; it; cause otherwise your opinions are not well informed.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This was a major learning moment for me personally. The fundamental
idea is to analyze your life trough a very critical lens, so you can
be sure that whatever you say, however you act, everything you do can
be reconciled with your internal metric of truth. Otherwise, what's
the point ?&lt;/p&gt;
&lt;h1&gt;Kindness and Empathy&lt;/h1&gt;
&lt;p&gt;In this process to find the closest truth one can often become quite
unkind, both to one's self and to other people. This is something that
I am guilty of myself and I am trying my best to get better at being
kind.&lt;/p&gt;
&lt;p&gt;I will with a quote -&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Doubt is not a pleasant condition but Certainty is absurd. - Voltaire&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="Meta"></category></entry><entry><title>Programming Languages Part B</title><link href="https://signalshore.github.io/blog/programming-languages-part-b.html" rel="alternate"></link><published>2019-10-06T00:00:00+05:30</published><updated>2019-10-06T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2019-10-06:/blog/programming-languages-part-b.html</id><summary type="html">&lt;p&gt;In Part B we study functional programming languages with dynamic type
checking. For this we use the programming language Racket which is a
dialect of the LISP programming language. During the second week we
also implement a programming language interpreter. Even though it is a
toy language it gives a â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;In Part B we study functional programming languages with dynamic type
checking. For this we use the programming language Racket which is a
dialect of the LISP programming language. During the second week we
also implement a programming language interpreter. Even though it is a
toy language it gives a lot of insight into how interpreters work.&lt;/p&gt;
&lt;h1&gt;Part B : Racket&lt;/h1&gt;
&lt;p&gt;I will highlight what were the major learning points for me.&lt;/p&gt;
&lt;h2&gt;Dynamic Typing&lt;/h2&gt;
&lt;p&gt;Static or dynamic typing is defined on the basis of when the type
checking takes place during the life-cycle of a program. In static type
checking the type checking happens at compile time while in dynamic
type checking the type checking happens at run time. Dynamic typing
can be convenient when you are writing programs as you do not have to
figure out the types of arguments and variables in your program
beforehand and more programs are accepted by the system, but at the
same time this also means the most of the errors happen at run-time.&lt;/p&gt;
&lt;h2&gt;Delayed Evaluation&lt;/h2&gt;
&lt;p&gt;In a programming language the manner in which expressions (and
sub-expressions) are evaluated can have a large impact on how programs
are constructed.&lt;/p&gt;
&lt;p&gt;Generally when we evaluate a function expression, we evaluate the
sub-expressions first before evaluating the actual function. This is
called applicative order evaluation.&lt;/p&gt;
&lt;p&gt;For example consider this function which tries to emulate the functionality of the 'if' expression.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;my-if&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;b&lt;/span&gt; &lt;span class="nv"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;b&lt;/span&gt; &lt;span class="nv"&gt;c&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Let's use this 'my-if' as we would use a normal if clause&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;my-if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;= &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;;; result :=&amp;amp;gt; 3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;This works properly. However, the next one doesn't.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;my-if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;= &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;;; result :=&amp;amp;gt; Error&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;This is because when 'my-if' is being evaluated, then all the three
arguments to the function is evaluated first before evaluating
'my-if'. This does not happen when we use the normal 'if' conditional
because if is a special form. It evaluates the conditional argument
first and based on that result it evaluates either of the branches.&lt;/p&gt;
&lt;p&gt;There should be a way of passing around expression in a language
without actually evaluating them. In Racket we can do this by wrapping
the function that we want to dealy in a lambda function that takes no
arguments. Thus we can pass this lambda function around as much as  we
want and we can evaluate it when we need it by using an extras set of
parenthesis.&lt;/p&gt;
&lt;p&gt;Thus we need to rewrite the old functions. We can do it as&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;new-if&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;b&lt;/span&gt; &lt;span class="nv"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;and we will call this function as &lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;new-if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;= &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;This is called thunking. When we wrap a function in an empty lambda
function, then we create a thunk. Instead of 'e1' we use '(lambda ()
e1)'. So when the thunk is passed to a function, the thunk gets
evaluated first into the function and then we can evaluate the
function to get the result.&lt;/p&gt;
&lt;p&gt;This is just one of the many programming idioms that are there that we
can use to mess around with the order of evaluation in a program.&lt;/p&gt;
&lt;h2&gt;Delay &amp;amp; Force (call by need or lazy evaluation or promises)&lt;/h2&gt;
&lt;p&gt;So thunking provides us a solution to the problem of evaluating
expression that are not needed.  What about expressions that can be
used in multiple places in a program ? If we use thunking we can delay
the evaluation untill needed but we will still have to evaluate it
every single time it is needed. Here we see another design
consideration. It is not only important to have a framework to delay
evaluation, it is also important to have to framework that allows you
to avoid re-computation.&lt;/p&gt;
&lt;p&gt;This is called call-by-need or lazy evaluation.&lt;/p&gt;
&lt;h3&gt;What is Lazy evaluation ?&lt;/h3&gt;
&lt;p&gt;Lazy evaluation is an evaluation strategy in which an expression is
not evaluated when they are bound to variables. Instead they are
evaluated when their results are needed by other computations. This is
the default mode of evaluation used in the Haskell programming
Language.&lt;/p&gt;
&lt;p&gt;One way to do this (in Racket) is to transform every function call
into a value look-up. We can store the thunk of the function in a cons
cell along with the result. If the result is not computed then we will
evaluate the thunk and store the value in the cell (we will mutate the
cons cell) and thus, the next time we need to evaluate the same
function, we can just look up the value in the cons cell.&lt;/p&gt;
&lt;p&gt;Basically when we implement a system where we store the output of a
function if it has been evaluated once. As noted above this can be
done easily using mutable cons cells.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;delay &lt;/span&gt;&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;mcons &lt;/span&gt;&lt;span class="no"&gt;#f&lt;/span&gt; &lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;force &lt;/span&gt;&lt;span class="nv"&gt;thunk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;mcar &lt;/span&gt;&lt;span class="nv"&gt;thunk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;mcdr &lt;/span&gt;&lt;span class="nv"&gt;thunk&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;begin &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;set-mcar! &lt;/span&gt;&lt;span class="nv"&gt;thunk&lt;/span&gt; &lt;span class="no"&gt;#t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;               &lt;span class="c1"&gt;;; set the flag to true&lt;/span&gt;
               &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;set_mcdr!&lt;/span&gt; &lt;span class="nv"&gt;thunk&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nb"&gt;mcdr &lt;/span&gt;&lt;span class="nv"&gt;thunk&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;   &lt;span class="c1"&gt;;; replace the thunk with the result&lt;/span&gt;
               &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;mcdr &lt;/span&gt;&lt;span class="nv"&gt;thunk&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;                    &lt;span class="c1"&gt;;; return the result&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;This is something that hit me in the face with a brick when I first understood it.
It's so beautiful and cool. :-)&lt;/p&gt;
&lt;h2&gt;Streams; Producers and Consumers&lt;/h2&gt;
&lt;p&gt;Let me preface this section by stating that before this I had no idea
what streams were and how they worked.&lt;/p&gt;
&lt;p&gt;A stream (in the context of computers) is an infinite source of
data. It is never ending. This is a very hand-wavy definition and it
does not paint a truthful picture but it is good enough for
now. Streams are produced by something called as a producer. The
producers knows only how to produce a stream of data endlessly.&lt;/p&gt;
&lt;p&gt;Now, that we have an endless stream of data, what do we do with it ?
This is where consumers come in. Consumers consume the data from the
stream in whatever manner they want.&lt;/p&gt;
&lt;p&gt;A good analogy is rivers. A glacier is the producer which produces and
endless stream of water and humans are the consumers. The consumers
get to decide how to and how much to consume the stream.&lt;/p&gt;
&lt;p&gt;Constructing an endless source of data is quite impossible since you
never really know when to stop. So how do producers produce an endless
stream of data ? To do that producers use a short-cut. To construct an
infinite stream of data all you need is a starting point and a method
to go to the next point. With these two information you can create
data on-demand without needing to know when to stop.&lt;/p&gt;
&lt;p&gt;We will try to understand this with an example.&lt;/p&gt;
&lt;p&gt;Consider the set of all Natural Numbers which we can all agree that is
an infinite set.&lt;/p&gt;
&lt;p&gt;How would one go about printing out all the natural numbers if the
entire set is infinite ?&lt;/p&gt;
&lt;p&gt;The answer is that one does not need to print all the natural numbers
all at once. All one needs to do is to keep track of the current
number being printed and then increment the number by 1 when the next
natural number is needed. In this case the starting point is 1 and the
method of obtaining the next number is that you increment the current
number by 1.&lt;/p&gt;
&lt;p&gt;This gives us a good starting point of how to go about designing
streams.  In a stream (in this case) the flow of data is controlled by
the consumer as data is produced only when it is asked for by the
consumer and the only two pieces of information needed by either the
producer or the consumer is the starting element of the stream and the
formula.&lt;/p&gt;
&lt;p&gt;So we can code up streams by writing a thunk that evaluates to a pair
wherein the first element is the first element and the second element
is a thunk that has everything we need to get all the elements from 2
to infinity.&lt;/p&gt;
&lt;p&gt;Let us write a stream that just produces an infinite stream of 1's&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="nv"&gt;ones-st&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cons &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;ones&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="c1"&gt;;; we call this stream by&lt;/span&gt;

&lt;span class="c1"&gt;;; this gives the first element&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;car &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;one-st&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="c1"&gt;;; this gives us the second element&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;car &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cdr &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;one-st&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;The stream is a thunk which when evaluated gives a pair. The first
element in the pair is the first value in the stream and the second
element is another thunk. We can clearly see how this works in the way
we call it.&lt;/p&gt;
&lt;p&gt;This stream is a bit easy to understand since there is not
transformation that is taking place between the subsequent elements.&lt;/p&gt;
&lt;p&gt;Now we will define the same stream and put a transformation function
in the middle. This function will not do anything but it will act as a
good placeholder for future transformations.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;ones&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;ones-help&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cons &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;ones-help&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;+ &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)))))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;ones-help&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;In this way we have a framework of how to go about designing different streams. 
Let use write an infinite stream of the square of all the natural numbers.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;square&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;square-help&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cons &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;* &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda &lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;square-help&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;+ &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)))))&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;square-help&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;How do we get elements from the stream ? &lt;/p&gt;
&lt;p&gt;To get the first element we evaluate the stream and get the first
element form the pair. To get the second element from the stream we
evaluate the cdr of the pair we get.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;car &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;square&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="c1"&gt;;; first element&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;car &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nb"&gt;cdr &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;square&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;span class="c1"&gt;;; second element&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Thus we can get new elements from the list.&lt;/p&gt;
&lt;p&gt;Note: This is the exact same way in which Alonzo Church defines Church Numerals. &lt;/p&gt;
&lt;h2&gt;Datatype with structs.&lt;/h2&gt;
&lt;p&gt;SML has records and datatype bindings that allows us to make compound
dataypes and data-structures and it lets us use pattern matching to
get the desired data out form the data structure.&lt;/p&gt;
&lt;p&gt;For Example,&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;val&lt;/span&gt; &lt;span class="nv"&gt;record_test&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;  &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;sohom&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;second&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;b&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt; &lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="cm"&gt;(* creates a new record in the env and binds it to record_test *)&lt;/span&gt;

&lt;span class="kr"&gt;val&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;first&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;second&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;tt&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;number&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;ttt&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;record_test&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;(* This pattern matches the record on the left with the record on&lt;/span&gt;
&lt;span class="cm"&gt;the right and binds the values after extracting them from the&lt;/span&gt;
&lt;span class="cm"&gt;record *)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;We could implement the same kind of the thing in Racket using cons
cells but there is an even better way in Racket. In Racket we can use
structs to define custom data types.&lt;/p&gt;
&lt;p&gt;When we add a new datatype with &lt;code&gt;struct&lt;/code&gt; it introduces a bunch of
other functions into the environment. Let me illustrate this with an example.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;struct&lt;/span&gt; &lt;span class="nv"&gt;foo&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;field1&lt;/span&gt; &lt;span class="nv"&gt;field2&lt;/span&gt; &lt;span class="nv"&gt;field3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;This will introduce a constructor for this struct, a checker for this
struct and accessor functions for each field in the struct. This is
super handy.&lt;/p&gt;
&lt;p&gt;So we can do things like&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12
13&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="nv"&gt;new_t&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;foo&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;foo?&lt;/span&gt; &lt;span class="nv"&gt;new_t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;;; evaluates to #t&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;foo-field1&lt;/span&gt; &lt;span class="nv"&gt;new_t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;;; evaluates to 1&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;foo-field2&lt;/span&gt; &lt;span class="nv"&gt;new_t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;;; evaluates to 2&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;foo-field3&lt;/span&gt; &lt;span class="nv"&gt;new_t&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="c1"&gt;;; evaluates to 3&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;I think this is really cool. Especially because the user does not have
to write accessor functions for all the types they define, but instead
the language system generates them. Also, struct is not a syntactic
sugar for some list or something else. Struct actually creates a new
type in the environment.&lt;/p&gt;
&lt;h2&gt;Implementing a Programming Language&lt;/h2&gt;
&lt;p&gt;This something that we actually have to do this course. It's a part of
the homework.&lt;/p&gt;
&lt;p&gt;I will not go into the details but this week was particularly very
interesting because you had to first understand the syntax and the
semantics of the programming language that you were supposed to build
and then write the interpreter for it. &lt;/p&gt;
&lt;p&gt;One thing that I did get over was my fear of interpreters and realize
that a compiler or an interpreter is just a normal program; there is
nothing too fancy about it. It is a normal program in the sense that
it takes data input in some form, and produces an output in some form
which is mostly transformation based on certain rules.&lt;/p&gt;
&lt;p&gt;I had a really great time trying and implementing Closures and writing
the main eval function.&lt;/p&gt;
&lt;h3&gt;What is the environment ?&lt;/h3&gt;
&lt;p&gt;During programming we often hear about the "environment" a lot but we
do not spend too much time thinking about what it actually is. Turns
out that the environment is just a mapping that stores the identifiers
that the values/expressions are bound too. When you think about it,
this makes sense, right ?&lt;/p&gt;
&lt;p&gt;I mean, what is the role of the environment ? Like all the environment
is supposed to do is to make sure that when the expressions are
evaluated they get evaluated with the correct values.&lt;/p&gt;
&lt;p&gt;In the made up programming language we  do this by using a list as the
environment.&lt;/p&gt;
&lt;h3&gt;Closures and Lexical Scoping&lt;/h3&gt;
&lt;p&gt;In the MUPL (made up programming language), we implement lexical
scoping and closures.&lt;/p&gt;
&lt;p&gt;It's quite simple. When the interpreter encounter a function definition
it just wraps the function along with the env in a data structure
(like a cons of two elements) and that is about it.&lt;/p&gt;
&lt;p&gt;The most challenging part of this whole exercise was to write the case
for the function calls.&lt;/p&gt;
&lt;h2&gt;Static Checking&lt;/h2&gt;
&lt;p&gt;We talked briefly about static checking in the first paragraph.
In this section we will look at static checking in more detail.&lt;/p&gt;
&lt;p&gt;Couple of thing first.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ML has static type checking&lt;/li&gt;
&lt;li&gt;Racket does not have static type checking&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The job of static checker is to reject programs after they have been
parsed but before they have been run.&lt;/p&gt;
&lt;p&gt;The static checker checks the program for correctness. &lt;/p&gt;
&lt;p&gt;How do we define this correctness ?&lt;/p&gt;
&lt;p&gt;One way we check for correctness is by evaluating the program against
a set of rules. Most commonly these rules are the typing rules. Mix
all of these together and you the type checker and the set of rules
that are used to evaluate the correctness of a program is called the
type system.&lt;/p&gt;
&lt;h3&gt;Correctness of a type system&lt;/h3&gt;
&lt;p&gt;The type system is a part of the programming language definition that
specifies what type of programs are legal and what are not in that
programming language.&lt;/p&gt;
&lt;p&gt;The Type System is designed to prevent a certain kind of bad behaviour
in the programming language. If the type system prevents the behaviour
that it claims to prevent then the type system is correct.&lt;/p&gt;
&lt;p&gt;We use two different and opposing metrics to determine the correctness
of a type system:&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;Soundness&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;A type system is sound if all type-checked programs are correct.
This means that the type checker will never accept an in-correct
program, i.e. there wont be any false negetives. &lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;Completeness&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;A type system is complete if all correct programs can be accepted by
the type checker. This means that the Type Checker will never reject a
correct program, i.e. there wont be any false positives.&lt;/p&gt;
&lt;p&gt;We define the positives/negetives with respect to the ppresence of
undesirable bugs in a program. These are the bugs that the type
checker is designed to prevent. Hence, for &lt;em&gt;negetive&lt;/em&gt; the type checker
claims that the bug is not present in the program i.e. the program is
correct and vice-versa.&lt;/p&gt;
&lt;p&gt;In the broader context of logic systems these terms have some interesting meanings.
1. A system is sound if only true statemenats are proveable.
2. A system is complete if &lt;em&gt;all&lt;/em&gt;  true statements are proveable.&lt;/p&gt;
&lt;p&gt;Now, completeness is much more difficult to have than soundness. This
is because for a type checker to be complete it needs to show that all
correct programs are accepted by it and the set of &lt;em&gt;all correct
programs&lt;/em&gt; is inifinite in nature. The tradeoff that gets made is that
programming language designers will rather have a sound system than a
complete system.&lt;/p&gt;
&lt;h2&gt;That's it&lt;/h2&gt;
&lt;p&gt;This course bought me immense joy and I hope that it's the same for
you as well.  Bear in mind that week 2 will be quite difficult but
just push through. It will be worth it.&lt;/p&gt;</content><category term="Learning"></category><category term="CS"></category></entry><entry><title>The Book System</title><link href="https://signalshore.github.io/blog/The-Book-System.html" rel="alternate"></link><published>2019-08-04T00:00:00+05:30</published><updated>2019-08-04T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2019-08-04:/blog/The-Book-System.html</id><summary type="html">&lt;p&gt;I like processes. Often is very difficult for me to get started with
something if I do not have a process in place. Something about
processes makes me feel safe and routine.&lt;/p&gt;
&lt;p&gt;Recently I was struggling to read books and hence I decided that I
needed to come up a â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I like processes. Often is very difficult for me to get started with
something if I do not have a process in place. Something about
processes makes me feel safe and routine.&lt;/p&gt;
&lt;p&gt;Recently I was struggling to read books and hence I decided that I
needed to come up a process to read books.&lt;/p&gt;
&lt;h1&gt;The Setup&lt;/h1&gt;
&lt;p&gt;I have 3 modes of reading and they are divided based on how dense the books are.&lt;/p&gt;
&lt;h2&gt;The physical book&lt;/h2&gt;
&lt;p&gt;This is for the very very dense (information dense) books. I generally
refrain from buying physical books because of the Carbon footprint
associated with them, but i do make an exception for books that are
too good and too dense.&lt;/p&gt;
&lt;p&gt;Often when I read books I take notes and annotate them and having
physical book is just better for this.&lt;/p&gt;
&lt;p&gt;Also, i am a big fan of used books, and I love picking up books with
inscriptions on them. Just something that adds a personal touch to the
books.&lt;/p&gt;
&lt;h2&gt;The Android phone&lt;/h2&gt;
&lt;p&gt;This is probably the best and the most versatile device for reading
books.  Now sure this is not too good for taking annotations and all
but that's okay.&lt;/p&gt;
&lt;p&gt;I use this primarily for reading when I am commuting as this is much
more portable tan the Kindle.&lt;/p&gt;
&lt;p&gt;I mainly read books that are medium to light dense in this
format. Mostly light dense books/articles.&lt;/p&gt;
&lt;p&gt;I use Pocket to keep a track of web articles that I want to read.&lt;/p&gt;
&lt;h2&gt;The Kindle&lt;/h2&gt;
&lt;p&gt;So this is something (an e-reader) that I have always wanted to buy
but did not go through with the plan. since I stare at a screen like
all the time I am awake an e-reader is a welcome change in life.&lt;/p&gt;
&lt;p&gt;Some of my main concerns were with the Kindle ecosystem that is very
closely tied to Amazon. To get past that I would rather buy a kKobo
Aura any day. Its a much better device than the Kindle
Paper-white. That said, this Paper-White 2018 is waterproof and was
available at a delicious discount on Amazon Prime day and getting a
Kobo Aura is a fucking weird thing in India. So, it was the Kindle.&lt;/p&gt;
&lt;p&gt;Now, the Kindle isn't a bad device for reading once you airgap it and
side-load books using Calibre. Calibre is brilliant.&lt;/p&gt;
&lt;p&gt;I'm using the kindle for medium to very dense books in the digital
format. This is for books that need you to sit down and just read
them. Books that demand focus. &lt;/p&gt;
&lt;p&gt;So yeah, that is my system right now.&lt;/p&gt;
&lt;p&gt;Quite happy with how the overall system turned out and I am reading
significantly more these days.&lt;/p&gt;
&lt;p&gt;I will soon make my reaing list public. I've been thinking of this for
a long time and I think that this will be good. Goodreads is nice but
it is too complex. &lt;/p&gt;</content><category term="Meta"></category><category term="Misc"></category></entry><entry><title>Reduce Waste Part 2</title><link href="https://signalshore.github.io/blog/What-a-waste-Part-2.html" rel="alternate"></link><published>2019-07-20T00:00:00+05:30</published><updated>2019-07-20T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2019-07-20:/blog/What-a-waste-Part-2.html</id><summary type="html">&lt;p&gt;So back in January 2019 I decided to reduce the amount of waste I
produce on a monthly basis. Read it &lt;a href="https://signalshore.github.io/blog/What-a-waste.html"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Initial plan was to behave "normally" for three months and then try
the reduction thing. That did not work because I was inconsistent with
maintaining the record.&lt;/p&gt;
&lt;p&gt;But â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;So back in January 2019 I decided to reduce the amount of waste I
produce on a monthly basis. Read it &lt;a href="https://signalshore.github.io/blog/What-a-waste.html"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Initial plan was to behave "normally" for three months and then try
the reduction thing. That did not work because I was inconsistent with
maintaining the record.&lt;/p&gt;
&lt;p&gt;But, I am a consistent person generally speaking so it should not
matter too much and now 4 months later I have quite interesting
results.&lt;/p&gt;
&lt;p&gt;Let's get to it. &lt;/p&gt;
&lt;h1&gt;Where are we&lt;/h1&gt;
&lt;p&gt;So right now when I look at my monthly schedule I can confidently say
that the only two sources of plastics on a monthly basis are the Oats
and the dates that I buy every month.&lt;/p&gt;
&lt;p&gt;I'm still a bit sketchy on how many of these packets I need on a
monthly basis but the number should not be more than two packets each.&lt;/p&gt;
&lt;p&gt;I should add that there are certain days when I do buy a pack biscuit
or a pack of peanut brittle etc etc, but I have managed to cut down
that number to almost zero.&lt;/p&gt;
&lt;p&gt;So yeah, that is the tl;dr. Read on to know what else I tried.&lt;/p&gt;
&lt;h1&gt;My Diet&lt;/h1&gt;
&lt;p&gt;I do not follow a very rigid diet plan however the basic rules that I follow are:
- minimize packaging of food (buy non packed food; order-in instead of
  take-out; no home delivery etc)
- eat local (nothing imported; imported has a higher carbon cost associated with it)
- minimize sugar
- eat less (yeah!!)&lt;/p&gt;
&lt;p&gt;Also this goes without saying that I am /not/ a foodie. I eat so that
I can survive (rather don't die) and do other stuff that is important
to me. Food is just a necessity, an implementation detail. (I am
painfully aware how weird this apathy towards food is).&lt;/p&gt;
&lt;p&gt;So, I eat lunch from a variety of different places and for dinner I
generally eat oats (just add hot water) and sometimes I have fruits. I
eat dates cause they are perfect for blood and they help with my sweet
tooth.&lt;/p&gt;
&lt;h1&gt;Food Habits&lt;/h1&gt;
&lt;p&gt;Initially i used to skip a meal during the day. This was generally the
breakfast. I would skip breakfast and have lunch directly at noon,
followed by something light in the evening and then dinner by 10pm.&lt;/p&gt;
&lt;p&gt;I tried to skip dinner and instead replacing it with breakfast. That
would mean that I would not have to buy Oats and my total food intake
would be same. That proved to be more difficult than I initially
thought.&lt;/p&gt;
&lt;p&gt;I really like the tasteless-ness in my mouth when I wake up and the
idea of destroying that with food is un-ideal. So i try to maximize the
time I can go without food.&lt;/p&gt;
&lt;p&gt;So, can't skip dinner.&lt;/p&gt;
&lt;p&gt;Moreover, I formed a habit of buying a packet of peanut brittle after
lunch everyday. This was bad on multiple levels including adding a
plastic wrapper to my waste everyday and adding a bunch of sugar to my
diet.&lt;/p&gt;
&lt;p&gt;However I could not will myself out of this habit.&lt;/p&gt;
&lt;p&gt;Everything changed when I went to visit my family for 2 weeks. Those
two weeks without any schedule that I formed in Mumbai really reset
every habit that I had formed, and after returning I could not buy
that packet of peanut brittle after lunch.&lt;/p&gt;
&lt;h1&gt;Normal Lifestyle&lt;/h1&gt;
&lt;p&gt;I'm quite spartan when it comes to other things and I do not buy stuff
unless absolutely needed. Very recently I bought an amazon Kindle
Paperwhite and I feel quite guilty about it. In my defense I wanted
this for a long time, ever since my school days.&lt;/p&gt;
&lt;h1&gt;Why all this ?&lt;/h1&gt;
&lt;p&gt;It should not be surprising to anyone reading this that Climate Change
is a big problem right now. In-fact it is probably one of the top most
issues threatening the survival of all species on the planet. I am
extremely pessimistic about the entire situation and I do not think
that we will be able to contain climate change to a reasonable limit
any time soon.&lt;/p&gt;
&lt;p&gt;That said, I still want to fight the good fight and there are multiple
ways in which that can be done. Currently the situation so dire that
individual changes in lifestyle can not solve everything and the best
way to fight this is to form groups and pressurize corporations and
governments into making drastic changes that favor the
environment. However, I would argue that individual changes also have
a huge effect mainly because no individual exists in isolation, and
hence they will spread some influence around. Furthermore, if every
individual starts making drastic changes to their lifestyle then that
will change the marketplace in which big companies operate and I think
that that would have some positive effect.&lt;/p&gt;
&lt;p&gt;Anyway, Thanks for reading. This is it for today. :-)&lt;/p&gt;</content><category term="Meta"></category><category term="Env"></category></entry><entry><title>I like Engineering.</title><link href="https://signalshore.github.io/blog/I-like-Engineering.html" rel="alternate"></link><published>2019-07-12T00:00:00+05:30</published><updated>2019-07-12T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2019-07-12:/blog/I-like-Engineering.html</id><summary type="html">&lt;p&gt;I had a realization very very recently.&lt;/p&gt;
&lt;p&gt;This is the sort of thing that can happen only out of the blue when
you are thinking about it in hindsight.&lt;/p&gt;
&lt;p&gt;I went on a trek with a bunch of friends. It was an organized trek so
there was an extended group â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I had a realization very very recently.&lt;/p&gt;
&lt;p&gt;This is the sort of thing that can happen only out of the blue when
you are thinking about it in hindsight.&lt;/p&gt;
&lt;p&gt;I went on a trek with a bunch of friends. It was an organized trek so
there was an extended group of people as well. It was super fun. 
During the trek we came across a small dam (a proper human-made dam
will gates to control the flow of water etc etc). For a moment I was
transfixed by this seemingly ordinary dam.&lt;/p&gt;
&lt;p&gt;I see people walk up to a dog and pet it, or see a cat and walk towards
it. For me, I am drawn towards machines, human made "engineering"
things. After the trek, when I think about it, I feel the situation is
same as that of people and dogs/cats.&lt;/p&gt;
&lt;p&gt;I think I should explore this a bit further. &lt;/p&gt;
&lt;p&gt;What was my thinking when I saw that dam during the trek ?&lt;/p&gt;
&lt;p&gt;I can remember certain details that I noticed.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The gates were curved and they weren't too wide which means that the
  dam is not designed to stop a huge flow of water.&lt;/li&gt;
&lt;li&gt;The gates were above water which suggests that this dam was designed
  on the same lines as some of the dams in Netherlands. This design
  enables easier maintenance of the gates as their normal resting
  state is above water.&lt;/li&gt;
&lt;li&gt;There was not water flow indicating that the dam was not operational (maybe)&lt;/li&gt;
&lt;li&gt;I tried to spot any motors nearby which would be the mechanism used
  to raise/lower the gates. Could not find anything like that, but
  there were some large manual screws which suggests that maybe this
  is a manual mechanism.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As any well-read engineer can tell that I am practically speculating
right now, I have NO idea even if any of these assumptions are correct
about the dam that I saw, but these were going on inside my head at
that time. I wasn't stuck on the dam for a long time, maybe I stood
there for about a minute, then kept walking.&lt;/p&gt;
&lt;p&gt;My point is, this is a pattern that I have failed to observe in myself
for a long time (or maybe I did observe but never thought about it
actively). I am more interested in how the game engine works than the
actual game. I am more interested is how something works than that
particular something.&lt;/p&gt;
&lt;p&gt;What draws me to these seemingly ordinary pieces of engineering is
that I find these marvelous. The sheer amount of complexity that goes
into making these is a testament to human cleverness. We have
discovered/invented so much; and we have so much more to go. &lt;/p&gt;
&lt;p&gt;That is just inspiring. :-)&lt;/p&gt;</content><category term="Meta"></category><category term="Misc"></category></entry><entry><title>Instant Messaging et. al.</title><link href="https://signalshore.github.io/blog/Instant-Messaing.html" rel="alternate"></link><published>2019-05-05T00:00:00+05:30</published><updated>2019-05-05T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2019-05-05:/blog/Instant-Messaing.html</id><summary type="html">&lt;p&gt;About 2 weeks ago I uninstalled WhatsApp from my phone. This decision
was many weeks into the making. Below, I will attempt to distill my
experience and some insights I gained during this exercise. Whatever
I have written below is completely based on my experience and even
though I have â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;About 2 weeks ago I uninstalled WhatsApp from my phone. This decision
was many weeks into the making. Below, I will attempt to distill my
experience and some insights I gained during this exercise. Whatever
I have written below is completely based on my experience and even
though I have done some research, I am far from being authoritative on
this topic. That said, if I am wrong then please reach out and help me
understand this better.&lt;/p&gt;
&lt;p&gt;I have tried my best to group the content under appropriate headers
which are somewhat related. This is long read BTW. &lt;/p&gt;
&lt;h2&gt;The urgency of Instant Messaging&lt;/h2&gt;
&lt;p&gt;WhatsApp is what we call an Instant Messaging application. The idea
being that you can reach anyone, anywhere instantly. &lt;/p&gt;
&lt;p&gt;The key word here is the "instant" part, and there is very specific
set of features that these apps use to guide its users into that
"instant" mindset. After all, it's in the apps best interest to keep
the user on the app for the maximum amount of time. The use of "Last
seen", "online/typing", read receipts etc all work together to create
an environment where there is an innate sense of urgency.&lt;/p&gt;
&lt;p&gt;I would expect instant replies to my messages. This got too weird too
fast.  There would be times when I would check the online/typing
status and get angry (unreasonably so) if someone was online but not
replying.&lt;/p&gt;
&lt;p&gt;Notice how self-centered and negative this line of thinking is for it
completely ignores the fact that the other person is a human being who
has some work other than replying to my messages and instead focuses
only on, "they got my message (double ticks), they saw my
message (the ticks are blue), they are online (it shows online), but
they are not replying for whatever reason."&lt;/p&gt;
&lt;p&gt;Moreover this is not how a real human conversation works. In my
opinion emails and IRC have done a much better job of simulating human
communication in the digital form. With emails there is no
expectation of instant replies and with IRC you are part of the
conversation as long as you are signed-in to the channel (chat room).&lt;/p&gt;
&lt;h2&gt;The human-ness of communication&lt;/h2&gt;
&lt;p&gt;Communication is a very human phenomenon (not only limited to humans,
but in this context we are focusing on communication between humans),
however communicating via Instant Messaging reduces the experience of
communication to just some exchange of text messages and maybe some
emojis. Human communication isn't that shallow.&lt;/p&gt;
&lt;p&gt;When we talk with someone face-to-face or via a phone call it's not
just the normal exchange of words, but at the same time there are
multiple other cues (for lack of a better word) that are communicated
and interpreted.&lt;/p&gt;
&lt;p&gt;Cues like, how was the sentence spoken, was it too fast or too slow,
how did they sound, which syllable did they stress on, how was
their expression, body language, what were they doing with their feet,
their hands, was there eye-contact, etc etc. All of this is missing
from IM.&lt;/p&gt;
&lt;p&gt;The lack of these cues increases the ambiguity in a conversation which
makes it incredibly hard for me as an individual to judge the tone of
the conversation. I've been told in various ways that I ask a lot of
questions precisely because I need to ask a lot of questions to judge
the tone of the conversation. This also includes multiple hours of
agony thinking "Did they mean it like this or like that ?" etc
etc. Also, its weird that some people (read. most of them) do not
really reply to all the questions you ask in a big message.&lt;/p&gt;
&lt;p&gt;Personally, I enjoy (rather; started to enjoy) the weird laughter, the
"umms" and the "hmms", the random hand movements etc etc that we get
to experience in a real conversation.&lt;/p&gt;
&lt;h2&gt;Different persona&lt;/h2&gt;
&lt;p&gt;Over the internet it is much easier to be a completely different
version of yourself. A lot of communication is context and since that
is essentially absent from instant messaging, it leaves a lot of room
for interpretation on both the sending and the receiving end.&lt;/p&gt;
&lt;p&gt;Furthermore, since the lack of human-ness also acts as a shield since
you don't have to deal with the actual human. So you can say anything
you want without facing the full consequences of it. This makes it
very easy to say certain things both good and bad. This leads to
things like firing someone via an email, or breaking up with someone
via a text.&lt;/p&gt;
&lt;p&gt;I've experienced that it's much easier to offer a incredibly
non-constructive criticism over the internet (i.e. something that does
not do the other person any good but makes them feel bad), while its
also incredibly easy to compliment someone or to say something
encouraging to someone over the internet. Try saying "I believe in
you" to someone face-to-face. Its terrifying, but at the same time its
much more rewarding if you can actually do it.&lt;/p&gt;
&lt;h2&gt;My attention span&lt;/h2&gt;
&lt;p&gt;I'm always online. It's an integral part of my work, my studies etc
etc. This means that I am also very very over-stimulated, all the
time.&lt;/p&gt;
&lt;p&gt;A large part of my work necessitates that I be able to &lt;em&gt;context
switch&lt;/em&gt; between different tasks of varying complexity very quickly, so
being able to switch laser focus from one task to another for a small
amount of time and then again switch back is vital. At work, at any
point of time I generally work on a long term agenda (like weekly
work-goal), some short term critical bug-fixes, older code cleanup
(cause there is always a better way to do stuff), personal
side-projects (like this blog) and studying. Apart from this I have at
least three communication applications open at the same time and I am
interacting with at least 4 groups on a regular basis (work group,
meetup group, NGO etc etc).&lt;/p&gt;
&lt;p&gt;Also "work" is not like a continuous 9 hour marathon. Most of my work
is some random hours distributed over multiple smaller spikes
throughout the day. (because hey, the database backup takes a long time
and a problem is a problem regardless of whether its a work problem
or a non-work problem).&lt;/p&gt;
&lt;p&gt;What this means is that I have a really hard time trying to focus on
important things that are not too important. Things like reading a
considerably boring section of an otherwise interesting paper, or a
decently boring part of a book or more importantly sitting down to
study, but not actually studying because I get distracted too easily
and the material I am studying is somewhat more difficult. Things have
become so bad that I find it difficult to sit through an entire movie
without either skipping the "slow" parts or speeding the movie up. I
find YouTube videos too slow at the "normal" pace and hence I speed it
up to 1.75x now. I started with 1.25x about 3 months ago.&lt;/p&gt;
&lt;p&gt;Things aren't that bad though. I find that I am able to focus only
when the problem at hand is too critical or too challenging (not
difficult) or when it is something that I am very interested
in. Anything less that and my mind starts to wander. Needless to say
all this is extremely difficult for me to admit and hence I really think
I should do something actively to fix it.&lt;/p&gt;
&lt;p&gt;It's a mess in my head and I need to fix it. Removing WhatsApp and
other non-critical stuff for two weeks kind of reduced the amount of
stimulus I had on a daily basis. From the first day itself there was a
sense of emptiness which was really amazing.&lt;/p&gt;
&lt;h2&gt;The fragility and plasticity of human communication&lt;/h2&gt;
&lt;p&gt;Human communication has always been very fragile. Fragile in a sense
that, once a conversation between two people are over it exists only
in the minds of the participants which in the long term can cause the
memory of that conversation to morph into something else entirely so
much so that different participants have completely different
recollections of the same conversation. Memory is plastic after-all
(and there is a lot of research to prove this)&lt;/p&gt;
&lt;p&gt;This also means that people forget things that they talked about from
time to time and this is normal. The brain does a regular clean-up job
when we sleep deleting the less important stuff while stashing the
more important stuff (watch Inside Out). For me personally I tend to
remember some weird details and whatnot.&lt;/p&gt;
&lt;p&gt;Initially this used to be very annoying but over time I realized that
this is a very important feature of human communication. This
forget-able-ness is the reason why it feels so good when a very old
friend brings up a very old topic etc etc.&lt;/p&gt;
&lt;p&gt;With instant messaging everything is permanent since everything is
recorded. There is no ambiguity as to what was said, but at the same
time there is no context information also. This can be weird
especially if you re-read old messages without any context
whatsoever. Again, in my opinion this is not how human communication is
supposed to be. (Watch Black Mirror S1E3 - 
&lt;a href="https://en.wikipedia.org/wiki/The_Entire_History_of_You"&gt;The Entire History of You&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Also, when people forget conversations, it's actually fun because you
get to have the same conversations again with them. &lt;/p&gt;
&lt;h2&gt;Dependence&lt;/h2&gt;
&lt;p&gt;I have always been obsessed with the idea of being independent of all
(well certain) forms of attachment and with the idea of less; less
things, less needs etc etc and so far it has been a somewhat
interesting journey trying to carve a lifestyle that fits those
goals.&lt;/p&gt;
&lt;p&gt;I have always played with the idea of giving up all forms of instant
messaging, but that idea seemed too much in a way, particularly
because I am too much dependent of these applications and I kept
thinking that it would be too difficult; that life would be too tough
without them.&lt;/p&gt;
&lt;p&gt;To my utter surprise, nothing could be further from the truth. I
stopped "missing" WhatsApp from the moment I uninstalled it from my
phone and to be honest, its been rather an amazing experience so
far. I have a lot of time now.&lt;/p&gt;
&lt;p&gt;It was not easy though. There are certain people that I enjoy talking
to, who are available only on WhatsApp and since I moved around a bit I
have a lot of remote friends, so WhatsApp (or any IM application) is
necessary, which is one of the reasons I will be installing it back
again. But yes! it was a good change.&lt;/p&gt;
&lt;p&gt;That said, a lot of international collaborations work and function as
they do precisely because of these applications and the kind of closeness
they enable. So it would be unfair to say that these applications are
all "bad". I would speculate that the only "bad" thing is that when
these applications form a rather large part of your daily
communication.&lt;/p&gt;
&lt;p&gt;Letting go of Reddit was much easier.&lt;/p&gt;
&lt;h2&gt;Notes to self&lt;/h2&gt;
&lt;p&gt;I called up a bunch of people and that was amazing. Should do that more often.&lt;/p&gt;
&lt;p&gt;I did not miss WhatsApp as much as I thought I would.&lt;/p&gt;
&lt;p&gt;And most importantly, there are certain people with whom the
experience on instant messaging and real life conversations is
phenomenal and almost indistinguishable. My best guess would be that
these people experience IMs the same way I do (to some extent) and
hence our conversations are somewhat better.&lt;/p&gt;
&lt;p&gt;Finally, Its all in the head. Most of the things you think you need;
you don't!!&lt;/p&gt;
&lt;p&gt;I hope this makes sense.&lt;/p&gt;
&lt;p&gt;Thanks!&lt;/p&gt;</content><category term="Meta"></category></entry><entry><title>Programming Languages Part A</title><link href="https://signalshore.github.io/blog/Programming-Languages-Part-A.html" rel="alternate"></link><published>2019-03-30T00:00:00+05:30</published><updated>2019-03-30T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2019-03-30:/blog/Programming-Languages-Part-A.html</id><summary type="html">&lt;p&gt;I am planning to use the &lt;a href="https://signalshore.github.io/tag/learning.html"&gt;Learning&lt;/a&gt; tag to create a series of posts
about &lt;em&gt;every&lt;/em&gt; online course I will take. The idea is to document
everything in my blog. Having something that I can refer to is also
super awesome.&lt;/p&gt;
&lt;h1&gt;Structure&lt;/h1&gt;
&lt;p&gt;The entire course is quite long. The way â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I am planning to use the &lt;a href="https://signalshore.github.io/tag/learning.html"&gt;Learning&lt;/a&gt; tag to create a series of posts
about &lt;em&gt;every&lt;/em&gt; online course I will take. The idea is to document
everything in my blog. Having something that I can refer to is also
super awesome.&lt;/p&gt;
&lt;h1&gt;Structure&lt;/h1&gt;
&lt;p&gt;The entire course is quite long. The way Dan (the instructor) has
structured the course is that he divided the course into 3 parts. &lt;/p&gt;
&lt;p&gt;In Part A we used the programming language SML (Standard Meta
Language) since the primary focus of this part of the course is to
learn about functional programming languages with static type checking
(I will talk about these later). In Part B we use Racket and in Part C
we use Ruby.&lt;/p&gt;
&lt;h4&gt;&lt;em&gt;NOTE: haven't taken parts B and C of the course so I'm not too clear on that.&lt;/em&gt;&lt;/h4&gt;
&lt;h1&gt;Part A : SML&lt;/h1&gt;
&lt;p&gt;I will write get to the point and write about each major topic that I
learned.&lt;/p&gt;
&lt;h3&gt;Functional Programming and Pure Functions&lt;/h3&gt;
&lt;p&gt;This section defined functional programming for me. I have programmed
a little bit in Scheme before (due to SICP) but I never really learned
what Functional Programming really means. As a result I could not
define it when someone asked me what it is. &lt;/p&gt;
&lt;p&gt;Turns out that I never really understood &lt;em&gt;pure functions&lt;/em&gt;, which is
the core concept around which functional programming revolves. Now,
pure functions are a mathematical concept. Mathematically a function
just takes a value and returns a result. It does &lt;em&gt;nothing&lt;/em&gt; else, or
more specifically it changes nothing else. Moreover a function has to
return the same result for the same argument &lt;em&gt;always&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Well, how does this translate into programming ?&lt;/p&gt;
&lt;p&gt;In programming terms, a pure function has to have no &lt;em&gt;side effects&lt;/em&gt;
Side effects is a term computer people use to confuse non-computer
people. It means that a function should not mutate any mutable
variables/references in the environment. This gets tricky sometimes,
especially if the programming language allows and encourages
mutations.  Object-Oriented languages allow mutation and that can lead
to some interesting problems (and security vulnerabilities) in
software.&lt;/p&gt;
&lt;p&gt;Essentially I wrote a lot of &lt;em&gt;functional&lt;/em&gt; code for this course and its
exercises and homework assignments. That was fun.&lt;/p&gt;
&lt;h3&gt;Static Typing&lt;/h3&gt;
&lt;p&gt;SML is a statically typed language, which means that the programs are
type checked by the compiler before being run.&lt;/p&gt;
&lt;p&gt;A typical program in SML with all types explicitly mentioned looks
like this. Its a simple function that takes two numbers and adds them.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;add&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;int&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="n"&gt;int&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; 
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="n"&gt;+&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;The type of the &lt;code&gt;add&lt;/code&gt; function is &lt;code&gt;fn: int * int -&amp;gt; int&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Let's write a recursive program that calculates &lt;code&gt;n raised to m&lt;/code&gt;.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;pow&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;int&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;
    &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="kr"&gt;then&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="kr"&gt;else&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;*&lt;/span&gt; &lt;span class="n"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;The type of &lt;code&gt;pow&lt;/code&gt; function is &lt;code&gt;fn: int * int -&amp;gt; int&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I had some trouble understanding how the type system worked in SML,
but things got quite clear after a bunch of exercises where we are
required to write a very limited type checker ourselves. This was one
of the best exercises in the entire course in my opinion. Turns out the
type checker is just a massively logical piece of code and not &lt;em&gt;magic&lt;/em&gt;
and things do make sense if you know the type checking rules really
well.&lt;/p&gt;
&lt;h3&gt;Type-Inference&lt;/h3&gt;
&lt;p&gt;In SML you are not required to explicitly mention the types of every
expression, the type checker can infer the types itself. I found this
very un-intuitive at first, but reading about the process made it
quite obvious.&lt;/p&gt;
&lt;p&gt;Let us rewrite the above functions without explicitly mentioning
types.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;add&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="n"&gt;+&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kr"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;pow&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;
    &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="kr"&gt;then&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="kr"&gt;else&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;*&lt;/span&gt; &lt;span class="n"&gt;pow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;In both these cases the type checker can infer the types of the
functions and the arguments and the final type for both the functions
is &lt;code&gt;fn: int * int -&amp;gt; int&lt;/code&gt;. The type checker can do this by &lt;code&gt;looking
ahead&lt;/code&gt; into the function and inspecting the operations being performed
on the arguments. The intuition being that when you check if an
argument value is equal to &lt;code&gt;0&lt;/code&gt; or not, then the argument must be an
integer. Similarly, if you are adding two arguments, they must be
integers. To carry the idea forward, the static type checker would
throw an error if you tried to perform some operation on incompatible
types (like adding a string to an integer). This is also possible
because the operators are not overloaded like how in python the &lt;code&gt;+&lt;/code&gt;
operator can do both addition for integers and concatenation for
strings. Having non-overloaded operators means that every operator has
a very specific type of operands that it accepts, and anything
otherwise would not type-check.&lt;/p&gt;
&lt;h3&gt;Polymorphic Data-types&lt;/h3&gt;
&lt;p&gt;Another thing that I found beautiful was the concept of polymorphic
types in SML. In SML the type checker can figure out if there is a
more-general way to write your program so that it can work for &lt;em&gt;more
than a single type&lt;/em&gt; of arguments. It does this even if you specify a
type. What this means is that your programs become more general. &lt;/p&gt;
&lt;p&gt;Let's write a function with polymorphic data-types.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;add_to_list&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;
    &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="n"&gt;::&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;The function &lt;code&gt;add_to_list&lt;/code&gt; builds a list by taking a object and a list
and adds the object to the front of the list. The type of this
function is &lt;code&gt;fn: 'a * 'a list -&amp;gt; 'a list&lt;/code&gt; where &lt;code&gt;'a&lt;/code&gt; is a polymorphic
datatype as in it can take the type of any value passed to the
function. Hence this function works for both integers and strings. &lt;/p&gt;
&lt;p&gt;Look the the results of the function calls in the comments.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;add_to_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,[]);&lt;/span&gt; 
&lt;span class="cm"&gt;(* [2] : int list *)&lt;/span&gt;
&lt;span class="n"&gt;add_to_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="cm"&gt;(* [2,2,3] : int list *)&lt;/span&gt;
&lt;span class="n"&gt;add_to_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;S&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,[]);&lt;/span&gt;
&lt;span class="cm"&gt;(* [&amp;quot;S&amp;quot;] : string list *)&lt;/span&gt;
&lt;span class="n"&gt;add_to_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;S&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;t&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;a&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;t&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="cm"&gt;(* [&amp;quot;S&amp;quot;,&amp;quot;t&amp;quot;,&amp;quot;a&amp;quot;,&amp;quot;r&amp;quot;,&amp;quot;t&amp;quot;] : string list *)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;It should be noted  that this functions will only work  if the type of
the object and the type of the object  that the list is made up of are
the same. This  is by definition since in SML  the &lt;code&gt;::&lt;/code&gt; operator works
like that. Hence the following call will not type check because we are
trying to add &lt;code&gt;S&lt;/code&gt; to the list &lt;code&gt;[2,3]&lt;/code&gt;.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;add_to_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;S&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="cm"&gt;(* Does not type check *)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h3&gt;Pattern Matching&lt;/h3&gt;
&lt;p&gt;Writing about pattern matching is tricky because it makes absolutely
no sense without any context, and in order to establish context we
would another series of blog posts which is not where I want to go
with this. Let me try.&lt;/p&gt;
&lt;p&gt;Imagine a &lt;code&gt;case&lt;/code&gt; expression. The utility of a case expression lies in
the fact that a case expression can handle multiple branches or
multiple cases.&lt;/p&gt;
&lt;p&gt;The case expression in SML has the form&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;case&lt;/span&gt; &lt;span class="n"&gt;expr_0&lt;/span&gt; &lt;span class="kr"&gt;of&lt;/span&gt;
    &lt;span class="n"&gt;patt_1&lt;/span&gt; &lt;span class="n"&gt;=&amp;amp;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;expr_1&lt;/span&gt;
  &lt;span class="n"&gt;|&lt;/span&gt; &lt;span class="n"&gt;patt_2&lt;/span&gt; &lt;span class="n"&gt;=&amp;amp;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;expr_2&lt;/span&gt;
  &lt;span class="n"&gt;|&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;
  &lt;span class="n"&gt;|&lt;/span&gt; &lt;span class="n"&gt;patt_n&lt;/span&gt; &lt;span class="n"&gt;=&amp;amp;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;expr_n&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;This is evaluated by first evaluating the &lt;code&gt;expr_0&lt;/code&gt; to &lt;code&gt;val_0&lt;/code&gt; and then
pattern-matching it with &lt;code&gt;patt_i&lt;/code&gt; and then based on which pattern it
matches with, the corresponding &lt;code&gt;expr_i&lt;/code&gt; is evaluated.&lt;/p&gt;
&lt;p&gt;The pattern part is super cool because it lets you use constructors and operators within the pattern to pattern match against and you can also do variable binding within the pattern itself. &lt;/p&gt;
&lt;p&gt;Let's see that in action. In the following program I will add all the elements of a list together.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;add_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;
    &lt;span class="kr"&gt;case&lt;/span&gt; &lt;span class="n"&gt;xs&lt;/span&gt; &lt;span class="kr"&gt;of&lt;/span&gt;
        &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="n"&gt;=&amp;amp;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
     &lt;span class="n"&gt;|&lt;/span&gt; &lt;span class="n"&gt;x::xs&amp;#39;&lt;/span&gt; &lt;span class="n"&gt;=&amp;amp;gt&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="n"&gt;+&lt;/span&gt; &lt;span class="n"&gt;add_list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;xs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="n"&gt;add_list&lt;/span&gt;&lt;span class="p"&gt;([]);&lt;/span&gt;
&lt;span class="n"&gt;add_list&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="n"&gt;add_list&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;In this example basically we are matching against the cases where the list is either empty or not. If the list is empty we return 0 as the sum, otherwise we use pattern matching to split the list into the first element and the rest of the list (without the first element) and then recursively compute the sum.&lt;/p&gt;
&lt;h3&gt;Lexical Scope and Closures&lt;/h3&gt;
&lt;p&gt;The body of a function is evaluated in the environment where the
function is defined, not the environment where the function is called.&lt;/p&gt;
&lt;p&gt;We will see it in this example.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;val&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;test&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;y&lt;/span&gt; &lt;span class="n"&gt;+&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;val&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="cm"&gt;(* 5 *)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;The output of this function is &lt;code&gt;5&lt;/code&gt; and not &lt;code&gt;9&lt;/code&gt; because when the
function &lt;code&gt;test&lt;/code&gt; was defined, the value of &lt;code&gt;x = 2&lt;/code&gt; in the
environment. Hence when the function was called it used that value of
x as opposed the newer value where x is redefined to 4.&lt;/p&gt;
&lt;p&gt;A function always has an environment associated with it. This
environment contains the bindings at the time when the function was
defined.  This associating of a function and its environment (lexical
environment) is called a function closure, or simply; a closure.&lt;/p&gt;
&lt;p&gt;Closures are really cool. I did not know before but as it turns out
all the fancy things that I like about Functional Programming like
Currying, Partial Applications etc etc are just closure idioms.&lt;/p&gt;
&lt;p&gt;There are still &lt;em&gt;LOTS&lt;/em&gt; of details that I have not covered about
pattern-matching.&lt;/p&gt;
&lt;h3&gt;Tail Recursion&lt;/h3&gt;
&lt;p&gt;After all this tail recursion is a relatively light-headed concept.&lt;/p&gt;
&lt;p&gt;A tail call is a function call that is the very last operation in the
calling function. i.e. the calling function has nothing to do after
the function call and the result it receives from the function call is
the final answer. &lt;/p&gt;
&lt;p&gt;We will look at this using the factorial function.
Mathematically we can define the factorial of a number as&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;factorial(n) = n * factorial (n - 1) ; when n &amp;gt; 1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We can write this in SML like,&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;
    &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
    &lt;span class="kr"&gt;then&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="kr"&gt;else&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="n"&gt;*&lt;/span&gt; &lt;span class="n"&gt;factorial&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="n"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Now, this is fine and it works; BUT, its not tail recursive. 
This is because the calling function has to multiply the result from the recursive call with &lt;code&gt;x&lt;/code&gt; and then get the result.&lt;/p&gt;
&lt;p&gt;Let's write the tail recursive version of this.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="kr"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;fac_tail&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;
    &lt;span class="kr"&gt;let&lt;/span&gt; &lt;span class="kr"&gt;fun&lt;/span&gt; &lt;span class="nf"&gt;helper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;
            &lt;span class="kr"&gt;if&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;
            &lt;span class="kr"&gt;then&lt;/span&gt; &lt;span class="n"&gt;acc&lt;/span&gt;
            &lt;span class="kr"&gt;else&lt;/span&gt; &lt;span class="n"&gt;helper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="n"&gt;*&lt;/span&gt; &lt;span class="n"&gt;acc&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="n"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="kr"&gt;in&lt;/span&gt;
        &lt;span class="n"&gt;helper&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="kr"&gt;end&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Over here we have a helper function that takes two parameters.  The
first parameter stores the value of &lt;code&gt;factorial(n - 1)&lt;/code&gt; and the second
one keeps track of &lt;code&gt;n&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;If we look at how we are calling the helper function recursively, we see that after the recursive call returns a value, we do not need to perform any operations on the result, since it is already the result we want. This is a tail call. &lt;/p&gt;
&lt;p&gt;The benefits of tail calls is that compilers are smart enough to optimize tail calls and hence these recursive calls are not as expensive computationally.&lt;/p&gt;
&lt;p&gt;Moreover, because of lexical scoping we can use any variable binding
in the helper function without explicitly passing it during every
call. This makes for very readable code. Using an accumulator to store the intermediate results also helps us avoid re-computation of already computed values. This is called memoization. &lt;/p&gt;
&lt;h1&gt;Wrapping up and Reflections.&lt;/h1&gt;
&lt;p&gt;This was by-far the most amazing course I have ever taken. I am 95%
confident that this is exactly what I want to study going forward. It
was quite challenging as well. Had a tough tiem figuring out work (I
need to pay my bills :-P) and this course and a bunch of ofther
commitments. I reckon I spent about 20 hours a week on this particular
course. Anyway, super fun, can't wait for Part B.&lt;/p&gt;
&lt;p&gt;Since I paid for this course (first online course I paid for) I got a
certificate. My official final score is 95.1% which is good
enough. &lt;a href="https://www.coursera.org/account/accomplishments/certificate/PF8DZ3V2S6N2"&gt;This&lt;/a&gt; is
my online certificate. &lt;/p&gt;
&lt;p&gt;I am using the Gitlab
repo
&lt;a href="https://gitlab.com/83bytes/programming_languages_coursera"&gt;Programming_languages_coursera&lt;/a&gt; to
keep track of all my exercises and solutions. Currently I am keeping
notes in a single large document with tons of comments. I haven't
found a better way.&lt;/p&gt;
&lt;p&gt;Its been a long time since I finished this course. I got detracted
from my plan to start Part B ASAP. &lt;/p&gt;
&lt;p&gt;I plan to revisit the challenge problems of week 2 and week 3 before
starting Part B, which should take about a week more.&lt;/p&gt;</content><category term="Learning"></category><category term="CS"></category></entry><entry><title>Kumara-Parvatha and Savandurga</title><link href="https://signalshore.github.io/blog/Bangalore-Treks.html" rel="alternate"></link><published>2019-03-17T00:00:00+05:30</published><updated>2019-03-17T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2019-03-17:/blog/Bangalore-Treks.html</id><summary type="html">&lt;p&gt;In the second week of January I had a trip planned to Bangalore. The
main goal here was to figure out some work in Bangalore and college. &lt;/p&gt;
&lt;p&gt;However during the Sandakphu trek some of the trekkers there
convinced me that Western Ghats is amazing and that I should
absolutely trek â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;In the second week of January I had a trip planned to Bangalore. The
main goal here was to figure out some work in Bangalore and college. &lt;/p&gt;
&lt;p&gt;However during the Sandakphu trek some of the trekkers there
convinced me that Western Ghats is amazing and that I should
absolutely trek the Kumarparvatha thing. Its long, its challenging,
its fun. &lt;/p&gt;
&lt;p&gt;I had another trek planned with some of my Bangalore friends. So, I
had to figure out how to squeeze these two treks in a single weekend as
I was traveling during the middle of the week for cheaper tickets. On
top of this Richard Stallman came to India during that weekend (I got
super lucky tbh) and I could attend his talk in person.&lt;/p&gt;
&lt;h1&gt;The Plan&lt;/h1&gt;
&lt;p&gt;Everyone said that Kumaraparvatha is a two day trek. Now I did not
have 2 days to spare. I had to fit 2 treks in the weekend. &lt;/p&gt;
&lt;p&gt;I had divided the weekend into two parts; Part 1, the trek to
Kumaraparvatha and Part 2, the trek to Savandurga. My plan &lt;em&gt;was&lt;/em&gt;
flawless. The plan was to work from home on Friday and take an
overnight bus to Kukke-Subramanya and start the trek, trek for the day
and return to Kukke by Saturday eveing just in time to board a bus to
Bangalore. Reach Bangalore early morning and then head off to meet
the other group for the Savandurga trek. Then finish the Savandurga
trek by 1800 hrs and get back home.&lt;/p&gt;
&lt;p&gt;Things clearly did not go as planned. They never do.&lt;/p&gt;
&lt;h1&gt;S0.. Kumaraparvatha ..&lt;/h1&gt;
&lt;p&gt;Friday turned out to be the day when Richard Stallman was giving the
talk at RVCE. I HAD to attend it. So, did that; which got over at
15:00 hrs. The bus was at 20:00. I had 7 hours. I needed to finish
some work as well. Went to a friends house and left some of my stuff
(the laptop) there. I had assumed that I would leave for the trek well
rested, but by the time I was in the bus, i was carrying 7 hours of
extra sweat.&lt;/p&gt;
&lt;p&gt;All said and done I met with Sonakshi and Niranjan at Majestic at the
stipulated time . We had 2 idlis for dinner. I was under the
impression that I would be able to get bananas from Kukke-Subramanya but
I was mistaken. In the morning none of the shops would be open. So, the
others made me buy the wonder fruit. We also got a bunch of peanut
brittles.&lt;/p&gt;
&lt;p&gt;The bus started on time, but it reached Kukke-Subramanya at 0430 hrs in
the morning. This was almost an hour before my schedule. We decided
not to waste too much time and hit the trail right away. &lt;/p&gt;
&lt;p&gt;It was pitch dark and my head lamp was not working. We figured out a
way to make it work with me walking in the middle of the group and
using the torch on my powerbank. I did not want to use my phone as a
torch because I was recording the entire trek in OSMAND with
continuous logging.&lt;/p&gt;
&lt;p&gt;We reached Buttaramane soon enough. We stopped there for some time for
food and the loo. We also filled our water bottles. I had to brush my
teeth due to peer pressure. We had some lemon rice and got three
plates packed to carry with us. The forest office was nearby from here.&lt;/p&gt;
&lt;p&gt;At the forest office we had to pay for entry and had to get our bags
inspected We could also leave some stuff at the forest office so as to
reduce the load that we would be carrying. I didn't leave anything
behind. I was kinda-sorta training for the next trek.&lt;/p&gt;
&lt;p&gt;The trek was amazing. It is a pretty trek. We were not trekking for
the view anyway. The thing I like about Kumaraparvatha is the
challenge. It is a long trek. 12kms in one direction. Generally
people hike up to the forest office in a day and use the next day to
trek up-to the peak and back. The forest officials do not allow anyone
into the forest after 12 noon. Its almost 6 kms to the peak from the
forest office, and also more technical, so if you do not start from
the forest office before 12 noon, it can get dangerous.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In this photo we have Sonakshi and Niranjan far into the frame. 
&lt;img alt="One of the flatter stretches" src="/assets/images/2019-03-17/kum2.jpg"&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;On the way to the top there is a section where you come across a steep
rock-face which looked inviting. But Sonakshi and Niranjan being the
saner members of the group stopped me from climbing via that route. I
was disappointed.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Big rock face is question. (it is Not as steep as it looks)
&lt;img alt="big rock" src="/assets/images/2019-03-17/kum3.jpg"&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We reached the top in about 6 hours. We slept for a very very short
time and had the packed food before starting back. By this time it was
afternoon and the sun was over our heads. We did not have too much
water with us as well.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;We took some photos from the somewhere near the top&lt;/p&gt;
&lt;p&gt;&lt;img alt="big rock" src="/assets/images/2019-03-17/kum1.jpg"&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is the other side from the same location
&lt;img alt="big rock" src="/assets/images/2019-03-17/kum4.jpg"&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The first part of the descent was somewhat difficult because of the
heat, and we ran out of water just before reaching Buttaramane but
nothing too much. I got disoriented a bit and kept slippin. A banana
fixed it. We waited at the forest office for some time and then headed
to Buttaramane. We refilled our bottles here and started off
again. From then the journey was fun. We kept descending at a faster
pace, we were almost running downhill. We took a detour went to a
stream nearby. Dipping our feet in the stream felt amazing. We waited
for about half an hour here before leaving.&lt;/p&gt;
&lt;p&gt;We exited the forest at about 1800 hours. Our bus was at 22:30 hrs, so
we had a bunch of hours to kill. We jumped around for a bit
legitimately impressed by our pace. The experienced folks told me that
our pace was impressive. I trusted them.&lt;/p&gt;
&lt;p&gt;We had some food, sat on the road, and got kicked out of a restaurant.
Then we boarded the bus and slept.&lt;/p&gt;
&lt;p&gt;We reached Bangalore quite early. I was trying to convince Sonakshi
and Niranjan to come to the Savandurga trek with me but I was not
successful. Niranjan said he would come. Then Sonakshi went her way,
while me and Niranjan headed to his place. We were planning to freshen up
(no showering) and then head to the meetup location for Savandurga. In
the end Niranjan also ditched me. I removed the base layer I was
wearing. That improved the smell a tiny bit.  I left Niranjans place
and then had a friend pick me up on the rental car that we booked for
Savandurga. I got lucky logistically.&lt;/p&gt;
&lt;p&gt;Let's end this section with a picture of team Kumaraparvatha. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;TEAM Kumaraparvatha!!
&lt;img alt="team_kum" src="/assets/images/2019-03-17/team_kum.jpg"&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;

&lt;h1&gt;Part 2 .. Savandurga..&lt;/h1&gt;
&lt;p&gt;My friend and I met with the rest of the group at 10:00 hrs which was
1 hours later than our plan. Anyway, we said our hellos and started.
The drive wasn't that bad. We stopped on the middle for some food and
stuff to pack.&lt;/p&gt;
&lt;p&gt;The road to Savandurga (via Magdi Road) is just beautiful. This was a
familiar route since I had cycled through the same road about a year
back. We could see the hill as we started to approach it. Some of the
team members expressed their concerns over the difficulty of what
awaited them.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is how Savndurga looks from the road.
&lt;img alt="savnd" src="/assets/images/2019-03-17/savn3.jpg"&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We reached Savandurga in about 90 minutes.The team was quite worried
when we saw the monolith. We were making good time, however we
wasted a decent amount of time eating stuff before we started
trekking. &lt;/p&gt;
&lt;p&gt;The thing that makes Savandurga challenging is the gradient and the
feature. It's steep. It's a short but a very steep climb. It's also
just a rock. You are climbing on a rock. Which means that it heats up
really fast and finding traction is quite difficult. On top of that
there are not many trees on the rock, so shade is really hard to find
as well. Finding a place to sit is also a challenge since once you are
on the rock, there is a constant gradient. You are always tilted
somewhere, so even if you decide to sit down, you have to make sure
you do not slide down. Considering all this I really wanted to avoid
the afternoon sun, but by the time we started it was almost 12 when we
started.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Look at the gradient.
&lt;img alt="savnd-grad" src="/assets/images/2019-03-17/savn1.jpg"&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A friend got really exhausted during the climb and she decided that
she would not continue. The plan was that she would wait at a resting
spot and we would pick her up on the way down. &lt;/p&gt;
&lt;p&gt;As we continued up, a lot of the kids wanted to give up but they kept
at it. There is a place on top of Savandurga which is just blow the
peak (we will call this the 'spot').  The entire group decided to call
it a day there and not continue till the peak itself, except Rohit and
Nikhil and I. The three of us were quite pumped about the idea and
decided to sprint to the top and come back ASAP.&lt;/p&gt;
&lt;p&gt;In my honest opinion the trek to the top from the spot is the most
trickiest part since it has some of the more challenging
terrain. Until now we were trekking on the rock itself, but the
monolith plateaus at the spot and after that there is a section where
you walk between huge boulders, a section where you have to squeeze
between two boulders and a section just before the peak where you have
to climb a very steep boulder. It's not too tough, just challenging. &lt;/p&gt;
&lt;p&gt;The top of Savandurga is where the temple is. The view from the top is
just amazing. You can see the Manchanabele reservoir nearby and an all
round view from the top of the largest monolith. We took a bunch of
pics here.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The view from the top. That is the temple below that we can see.
That is the Manchanbele reservoir that we can see in the back
&lt;img alt="savnd-temple" src="/assets/images/2019-03-17/savn2.jpg"&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;On our way back we met the friend who decided to stay back just below
the spot. She started feeling better so she decided to trek to the top
herself. It was super awesome to see her so unexpectedly. She also had
some food with her, which was very much needed. Needless to say, all
of us were very much impressed by her. &lt;/p&gt;
&lt;p&gt;Descending was fun. I did something that I have always wanted to
do. Run down the hill. Do not do this unless you know what you are
doing. Its very very very dangerous to run down a hill which is as
steep as Savandurga. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is how descending looks. 
&lt;img alt="savnd-desc" src="/assets/images/2019-03-17/savn4.jpg"&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We had a mini celebration after descending from the hill. It was
fun. These folks had completed their very first trek. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is the team.
&lt;img alt="savnd-team" src="/assets/images/2019-03-17/team_savn.jpg"&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We returned to Bangalore soon enough. I took an hour long nap for the
major part of the journey back home. The others I believe took some
embarrassing photos of me sleeping.&lt;/p&gt;
&lt;h1&gt;GPX tracks and Analysis&lt;/h1&gt;
&lt;p&gt;I was recording both of these treks just for the heck of it. 
Here are screenshots.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Kumaraparvatha
&lt;img alt="kumara-gpx" src="/assets/images/2019-03-17/kumara.png"&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As we can see, the total time for the recording is 11 hours and 25
minutes and the total distance recorded is 23.7
kms. &lt;a href="/assets/files/2019-03-17/KumaraParvatha.gpx.zip"&gt;Here&lt;/a&gt; is the
GPX-track for Kumaraparvatha.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Savandurga
&lt;img alt="savand-gpx" src="/assets/images/2019-03-17/savnd.png"&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In this trek we covered 5.9 kms in about 4 hours and 9 minutes.
&lt;a href="/assets/files/2019-03-17/savandurga.gpx.zip"&gt;Here&lt;/a&gt; is the GPX file.&lt;/p&gt;
&lt;h1&gt;The End&lt;/h1&gt;
&lt;p&gt;Overall this was a fun trek. I do think I will return to
Kumaraparvatha once again after monsoon. This is the time when the
Western Ghats is in its full glory. :-)&lt;/p&gt;
&lt;p&gt;Until then!&lt;/p&gt;
&lt;p&gt;Oh! BTW;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This is me sleeping. Open mouth for better breathing.
&lt;img alt="me-sleeping" src="/assets/images/2019-03-17/me.jpg"&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="Travel"></category><category term="Env"></category><category term="Trek"></category></entry><entry><title>Sandakphu Trek</title><link href="https://signalshore.github.io/blog/Sandakphu-Trek.html" rel="alternate"></link><published>2019-02-24T00:00:00+05:30</published><updated>2019-02-24T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2019-02-24:/blog/Sandakphu-Trek.html</id><summary type="html">&lt;p&gt;Growing up I've always been interested in trekking; So, naturally when
a friend suggested that we should go for a trek in 2018, I was kinda
skeptical and kinda excited. Skeptical mainly because it was a
significant amount of money including all the equipment I had to buy
for a â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Growing up I've always been interested in trekking; So, naturally when
a friend suggested that we should go for a trek in 2018, I was kinda
skeptical and kinda excited. Skeptical mainly because it was a
significant amount of money including all the equipment I had to buy
for a high altitude trek in the winter; and excited because it was a
trek. My very first trek. I had a lot of expectations in my head.&lt;/p&gt;
&lt;h2&gt;Why Sandakphu ?&lt;/h2&gt;
&lt;p&gt;My friend and me wanted to go for a different trek but we couldn't get
the booking in time. So we choose Sandakphu. Apart from that Sandakphu
was on our radar mainly because of the length of the trek and the good
reviews. Both of us wanted to do something that was a challenging and
lengthy so after Goechala; Sandakphu fit the bill perfectly.&lt;/p&gt;
&lt;h2&gt;Preparation&lt;/h2&gt;
&lt;p&gt;The preparation of this trek involved two parts mainly. &lt;/p&gt;
&lt;p&gt;Firstly, I had to prepare myself physically for the trek. I was not
too worried about the physical part since I walk a lot on a regular
basis and I also started running after moving to Mumbai.&lt;/p&gt;
&lt;p&gt;However for this trek I needed to buy some rather expensive equipment.
I needed to buy one rucksack, and some clothing for the low
temperature and shoes. The clothing was most important. I did not want
to buy something too expensive and too specialized for the trek. I
wanted something more versatile.&lt;/p&gt;
&lt;p&gt;Buying the rucksack was easy. I bought a 60L pack. I really wanted to
buy a 70L but realized that it would be too much.&lt;/p&gt;
&lt;p&gt;Buying the clothing was more fun! When you are selecting clothing for
treks, you want to be as efficient as possible because everything you
own, you have to carry it yourself. One of the techniques is to use
layering. There are plenty of good websites online that talk about
layering (fyi. the layering information on IndiaHikes site is shit and
absolutely not reliable).&lt;/p&gt;
&lt;p&gt;The layering can be quite complicated but ultimately it boils down to
minimizing the loss of heat (clothes do not generate heat, instead
they keep you warm by minimizing heat loss). So tl;dr I bought two
polyester base layers and one hollow-fill jacket from decathlon. The
hollow-fill jacket was good enough for heat but under certain extreme
windy conditions I did find it a bit too cold as it is not completely
wind-proof. But it was good enough for this trek.&lt;/p&gt;
&lt;p&gt;For shoes I decided to rent a pair from IndiaHikes.&lt;/p&gt;
&lt;h2&gt;The Trek&lt;/h2&gt;
&lt;p&gt;The trek was from 22nd to 28th of December. We picked this batch
hoping that we would get extreme cold temperature.&lt;/p&gt;
&lt;p&gt;On 22nd we met the rest of the team the NJP station in West Bengal and
we started off to Jaubhari. Jaubhari is the IndiaHikes base camp for
the Sandakphu trek.  At Jaubhari we were briefed about the trek by our
trek leader. I was really surprised to know about the various
activities that IndiaHikes does on the mountains to make the treks
more sustainable. Someone from IndiaHikes also briefed the entire team
about the benefits of using menstrual cups which I found really cool!
After this out medical parameters were checked and recorded, followed
by some dinner. Jaubhari is at 2134 meters.&lt;/p&gt;
&lt;p&gt;At Jaubhari we also received our rented equipment. I rented a shoe but
for some reason I could not feel comfortable in them. They felt
different. So against the advise of the trek leaders and other fellow
trekkers I decided to continue the trek in my regular shoes.&lt;/p&gt;
&lt;p&gt;One 23rd, we reached Tumling which was at 2970 meters. The trek was
fun. We stopped in the middle of the trek for lunch. At Tumling the
temp was somewhere around 2-5 C.&lt;/p&gt;
&lt;p&gt;On the way to Tumling the waist belt of the pack of a fellow trekker
got ripped. At Tumling we managed to get hold of some needle and
thread and stitched the ripped belt. It was a hacky job but the belt
worked till the last day of the trek. Note to self: Carry needles and
nylon thread.&lt;/p&gt;
&lt;p&gt;One thing that was constant throughout the trek were the view of the
Everest on the left and Kanchenjunga on the right. We could see them
everyday, which is a welcome change from the normal stuff we are used
to seeing everyday. :-P&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lhotse, Everest, Makalu peaks from the right.
&lt;img alt="Everest" src="/assets/images/2019-02-24/everest.png"&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The weather was quite cold which was quite enjoyable for me. I went
for a walk after dinner to experience the cold and also to test my
jacket. I did remove my jacket for a bit and it got too cold too
fast. The jacket was doing its job perfectly and I was satisfied with
my purchase. :-P&lt;/p&gt;
&lt;p&gt;On 24th we reached Kalipokhri which is at 3170 meters. I do not
remember the details of this days trek. I do remember that at
Kalipokhri all of us gathered in the hut where we were supposed to
have dinner a all of us sang. It was a beautiful experience.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Kanchenjunga.                                         &lt;br&gt;
&lt;img alt="Kanchenjunga" src="/assets/images/2019-02-24/kanchenjunga.png"&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;After dinner I headed out for another walk. I told three people that I
would be going outside and where I would be going and gave them a
tentative timeframe. There was a short hill nearby our lodge. I
fancied walking up it in the morning but couldn't. So now was my
time. It was exceptionally dark although the moon was
present. thankfully my headlamp came handy. I was climbing the hill
from the leeward side so I could not figure out the wind speed. On top
it was another story. It was extremely windy. It was good. This was a
good place.&lt;/p&gt;
&lt;p&gt;On 25th we reached Sandakphu which was at 3577 meters. It was quite
cold, but the views were amazing. &lt;/p&gt;
&lt;p&gt;The trek to sandakphu was mostly thorough a motor-able road although
there were certain shortcuts which were somewhat more technical than
the road. Wile trekking we were also picking up small pieces of
plastic. I managed to pick up a used sanitary napkin (who the fuck
throws a sanitary napkin out there). Anyway, I also managed to
annoy a co-trekker when I was being stupid and picked up a water
bottle that was not in a safe position (sorry!!).&lt;/p&gt;
&lt;p&gt;We had some time to kill in Sandakphu so we all got together and sang
and played dumb charades. It was my turn and I froze completely
(again!!). At this point I should just stop playing these games.&lt;/p&gt;
&lt;p&gt;We also saw the milky-way. This was the first time I was seeing the
Milky Way and it was amazing. :-)&lt;/p&gt;
&lt;p&gt;On 26th, we left from Sandakphu and went to Sabargram located at 3600
meters. This place was really cold. I helped pitch some toilet tents. &lt;/p&gt;
&lt;p&gt;We also managed to do some amazing photography and got good shots of
the milky-way.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This was our camp location at Sabargram.
&lt;img alt="camp" src="/assets/images/2019-02-24/camp.png"&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;On 27th we were supposed to reach Phalut which is at 3642 meters and
then descend back to Gorkhey which is at 2300 meters. This day was too
much fun. By the end of the trek I was running down the hill along
with our guide Buddha Ji.&lt;/p&gt;
&lt;p&gt;There is a river flowing through Gorkhey and some of us went there to
dip our feet in the stream. I managed to slip and fall down into the
river; thankfully I did not get too wet otherwise I would be in
trouble. &lt;/p&gt;
&lt;p&gt;Me and an equally crazy co-trekker decided to compete about who can
keep their feet in the cold water for the longest time. I won that
competition. The water wasn't that cold.&lt;/p&gt;
&lt;p&gt;As this was the second last day of the trek we all gathers in the
men's dorm and everyone shared small bits and pieces about what they
would be taking away from the trek. This was another noteworthy
experience.&lt;/p&gt;
&lt;p&gt;28th marked the last day of the trek and quite possibly the last day
some of us would ever see each other again. We started off early in
the morning and we reached the final spot at Sepi well ahead of time. &lt;/p&gt;
&lt;p&gt;We had lunch and then we took vehicles to Jaubhari (base camp) where
we were supposed to return our rental equipment and pick up other
stuff for the journey back home.&lt;/p&gt;
&lt;p&gt;The journey to Jaubhari wasn't too special, except everyone was tired
and I think everyone knew that the trek had already ended. It felt
kinda sad to realize that there was a very good chance that none of us
would see each other ever again.&lt;/p&gt;
&lt;p&gt;The journey from Jaubhari to NJP was quite interesting. We had a train
to catch so we were under the clock. On top of that the weather got
significantly worse and it started snowing heavily. It was snowing so
much that we couldn't see the road ahead, thankfully though, the
driver of the jeep knew the route and he cold drive under those
conditions. I puked on the way (Is it really trekking if you don't
puke). We reached the railway station to find that the train was
delayed. We all said our goodbyes and promised to stay in touch. &lt;/p&gt;
&lt;p&gt;And that was it. My first trek had ended. :-)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The entire group for the trek
&lt;img alt="group" src="/assets/images/2019-02-24/team.jpg"&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2&gt;What does trekking mean for me ?&lt;/h2&gt;
&lt;p&gt;I like being self-reliant. I get a lot of pleasure out of doing
everything I need myself. It's about being able to solve my own
problems myself and also understand how the world works in some tiny
manner.&lt;/p&gt;
&lt;p&gt;I also believe in owning less and living a simple, minimalist and
sustainable life. People who know me, know that I have very little
respect for the more common &lt;em&gt;needs&lt;/em&gt; of life. The ultimate target would
be to carve a life in which I do not own anything I do not need and
quite possibly live out of a suitcase. :-P&lt;/p&gt;
&lt;p&gt;I also enjoy solitude more than the average human being (or so I
think). I also enjoy walking a lot. Walking helps me orient myself
wiht my thoughts in some sort of way. Whenever I am having some
(any!!) trouble, or I can not understand something I am studying or I
start feeling lonely, I go for a walk. I enjoy the conversations I
have with myself during these walks. I walk to unwind after a
stressful day. I regularly walk home (roughly 6 kms) after a weird day
at work.&lt;/p&gt;
&lt;p&gt;Trekking is something that ties all of this together in some weird
sort of way. It makes you realize what all you do not need. It helps
you declutter.&lt;/p&gt;
&lt;p&gt;There is something thrilling about carrying everything you &lt;em&gt;think&lt;/em&gt;
you can need in a bag and walk into the wilderness. Now, the trek was
not like "walking into the wilderness"; in-fact far from it actually,
but I guess this is the beginning. I would actually love to trek in a
completely un-supported fashion but right here, right now, its not
feasible. Maybe someday. Right now, this is good enough. :-)&lt;/p&gt;
&lt;p&gt;That's it. Thanks for reading. :-)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I will end this with a picture of me. 
&lt;img alt="ME" src="/assets/images/2019-02-24/me.jpg"&gt;&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="Travel"></category><category term="Env"></category><category term="Trek"></category></entry><entry><title>Reduce waste Part 1</title><link href="https://signalshore.github.io/blog/What-a-waste.html" rel="alternate"></link><published>2019-02-03T00:00:00+05:30</published><updated>2019-02-03T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2019-02-03:/blog/What-a-waste.html</id><summary type="html">&lt;h1&gt;Motivation&lt;/h1&gt;
&lt;p&gt;I've been an arm-chair environmentalist for far too long. &lt;/p&gt;
&lt;p&gt;Starting 2019 I decided to do something real for a change.  I am
starting small and trying to optimize my consumption habits to have
the least possible Carbon Footprint, as well as un-needed waste.&lt;/p&gt;
&lt;h1&gt;Plan of Action&lt;/h1&gt;
&lt;p&gt;"Optimize" often boils â€¦&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Motivation&lt;/h1&gt;
&lt;p&gt;I've been an arm-chair environmentalist for far too long. &lt;/p&gt;
&lt;p&gt;Starting 2019 I decided to do something real for a change.  I am
starting small and trying to optimize my consumption habits to have
the least possible Carbon Footprint, as well as un-needed waste.&lt;/p&gt;
&lt;h1&gt;Plan of Action&lt;/h1&gt;
&lt;p&gt;"Optimize" often boils down to reduction in (unnecessary) consumption
pattern for the most part.&lt;/p&gt;
&lt;p&gt;Now all I had to do was to reduce what I buy. Easier said than
done. The lack of observability in the whole "reduce waste" process
complicates things.&lt;/p&gt;
&lt;p&gt;Someone said &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You can not fix what you can not see!&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;With that in mind I know what I had to do. I had to collect every
single-use plastic that I used in the month of January.&lt;/p&gt;
&lt;p&gt;The plan was simple:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If you buy something that it has a plastic wrapper. Put it in the
  bag (I had a dedicated pocket for this)&lt;/li&gt;
&lt;li&gt;Be liberal with what you buy. Don't get into the "buy less" thingy
  now. (this is because i want to get a picture of what the "worst
  case scenario" looks like for me)&lt;/li&gt;
&lt;li&gt;Refuse plastic carry bags for the normal scenarios where you refuse
  plastic carry bags.&lt;/li&gt;
&lt;li&gt;Plastic waste includes anything that you &lt;em&gt;paid&lt;/em&gt; for and/or consumed.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Complications&lt;/h1&gt;
&lt;p&gt;While collecting waste was easy, the complicated part was the
traveling.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I had to travel to Kolkata for 8 days due to some family emergency
which was unplanned.&lt;/li&gt;
&lt;li&gt;I had to travel to Bangalore for some work for a week.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The weird part was collecting all the plastic during these travels. 
I do think that these travels increased my consumption by some margin. &lt;/p&gt;
&lt;p&gt;I also went trekking in Bangalore so there is some extra waste associated with that as well.&lt;/p&gt;
&lt;h1&gt;So, what do we have here!&lt;/h1&gt;
&lt;p&gt;This is a photo of all the stuff I collected. It's grouped into 4 sections&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;img alt="Photo of the stuff" src="/assets/images/2019-02-03/waste.png"&gt;
I apologize for the atrocious photo editing skills&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Anyway, the stuff is divided into 4 groups. &lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;&lt;em&gt;A. Chocolate Wrappers&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;These are all chocolate wrappers. I don't always buy chocolates except
some candies from the office canteen. The stuff in the yellow box are
those. &lt;/p&gt;
&lt;p&gt;Other than those I have 2 Amul Bitter chocolates (gifts) and 2 some
weird chocolate i bought in Bangalore and one snicker for the trek.&lt;/p&gt;
&lt;p&gt;I can get rid of this entire section by not eating chocolates at all
or by buying proper chocolates.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;&lt;em&gt;B. Peanut Brittle Wrappers&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;This section is entirely made up of peanut-brittle wrappers of all
shapes and sizes.&lt;/p&gt;
&lt;p&gt;I am a sucker for peanuts. I use peanut brittle specifically whenever
I need to grab something quick to eat or snack on. This doesn't happen
as often.&lt;/p&gt;
&lt;p&gt;I also use peanut brittle as the primary food source during my
treks. These wrappers are from the treks. &lt;/p&gt;
&lt;p&gt;I project that I can reduce the size of this section significantly by
either buying peanut brittle in large quantities locally or making
them myself.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;&lt;em&gt;C. Monthly rations&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;This is the part that I require on a monthly basis.
This includes the wrappers of:
- Oats (500gm packet per month)
- Raw peanuts (either this or peanut butter)
- Dates (about 250 gms a month)
- Flax seeds (about 60 gms a month)
- Bread (about 4 packets a month)&lt;/p&gt;
&lt;p&gt;This part is a bit tricky. I'll have to do some further research to
optimize this part (suggestions are welcome).&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;&lt;em&gt;D. Miscellaneous&lt;/em&gt;&lt;/h3&gt;
&lt;p&gt;This is the stuff that I do not buy regularly at all. All of these
are from one-time purchases for this month.&lt;/p&gt;
&lt;p&gt;This includes some biscuit wrappers, a mobile phone case wrapper, some
plastic that they use to serve food with in Bangalore.&lt;/p&gt;
&lt;p&gt;This part will be eliminated and/or changed in February.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;&lt;em&gt;E. Long term purchases&lt;/em&gt;&lt;/h3&gt;
&lt;h6&gt;p.s. not in the photo&lt;/h6&gt;
&lt;p&gt;This part will include things that are made of plastic but that also
last a long time or those that are repurposed into something else.&lt;/p&gt;
&lt;p&gt;These include things like the cup noodles I buy just because I like
the boxes and can re-purpose them into something else.&lt;/p&gt;
&lt;p&gt;My peanut butter container, detergent packet, shampoo container etc
come in this category.&lt;/p&gt;
&lt;p&gt;This part can also be optimized heavily by being very very intelligent
about what I buy.&lt;/p&gt;
&lt;h2&gt;What now ?&lt;/h2&gt;
&lt;p&gt;I will continue to collect my personal generated waste for the month of
February and March as well since I want to establish a pattern here.&lt;/p&gt;
&lt;p&gt;My next goal would be to optimize my Long Term purchases and
transition from using some unsustainable materials to sustainable
ones. This is an expensive goal. Baby steps. We will get there.&lt;/p&gt;
&lt;p&gt;Another goal would be to optimize my nutrition. I will actively
monitor my food intake during the month of Feb. More on this later.&lt;/p&gt;
&lt;p&gt;Another goal is to optimize my buying habits. More on this later as
well.&lt;/p&gt;
&lt;h2&gt;Is all of this an Exercise in Futility ?&lt;/h2&gt;
&lt;p&gt;Well, in 2019 considering the current status of Climate Change no
single human can make a difference now. Thus, you switching off the
light when not in use isn't that significant. The situation is so bad
that things will not get better unless governments, organizations,
companies etc start doing something. Its a MASSIVE issue.&lt;/p&gt;
&lt;p&gt;That being said, does this mean that we should all stop doing our
small parts ?  I think NO. (you can have your own opinion)&lt;/p&gt;
&lt;p&gt;We as consumers have more power in controlling the actions of a
company, organization or a nation. We just need to acknowledge that
and act accordingly.&lt;/p&gt;
&lt;p&gt;Alright, That's it for now. :-)&lt;/p&gt;
&lt;h6&gt;p.s. I am up for a chat if you want to talk about this/have some suggestions&lt;/h6&gt;</content><category term="Env"></category><category term="Meta"></category></entry><entry><title>Brain-Splatter for 2019</title><link href="https://signalshore.github.io/blog/Brain-Splatter-2019.html" rel="alternate"></link><published>2019-01-27T00:00:00+05:30</published><updated>2019-01-27T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2019-01-27:/blog/Brain-Splatter-2019.html</id><summary type="html">&lt;p&gt;This is going to be a brain-splatter for myself at the beginning
of 2019. I feel like that I have some of my stuff sorted out by now,
But I want to have a backup so that I can look back for
reference if shit hits the fan.&lt;/p&gt;
&lt;h3&gt;Write more â€¦&lt;/h3&gt;</summary><content type="html">&lt;p&gt;This is going to be a brain-splatter for myself at the beginning
of 2019. I feel like that I have some of my stuff sorted out by now,
But I want to have a backup so that I can look back for
reference if shit hits the fan.&lt;/p&gt;
&lt;h3&gt;Write more&lt;/h3&gt;
&lt;p&gt;I write much less than I would like to. That has to change. Writing is
the single most important thing that helps me think better (just short
of talking to myself). Also, I need to have these written things up on
my blog so that I can reference them later.&lt;/p&gt;
&lt;h3&gt;Complexity&lt;/h3&gt;
&lt;p&gt;I love complexity; I find complexity marvelous and breathtaking. I
love to think about complex interconnected systems. &lt;/p&gt;
&lt;p&gt;I can not explain this to people (yet) and I haven't figure out this
part of myself completely yet. Just that certain seemingly simple
things interest me a bit too much.&lt;/p&gt;
&lt;h3&gt;Environment is IMPORTANT&lt;/h3&gt;
&lt;p&gt;The environment is very very important. Do your best to reduce your
carbon footprint and talk to people to spread the same message. Be
annoying.&lt;/p&gt;
&lt;p&gt;At 2019 the situation is worse enough that individual choices do not
really matter; But you still want to be among those who can tell
that "Yes, I did my part".&lt;/p&gt;
&lt;h3&gt;Think deeply&lt;/h3&gt;
&lt;p&gt;Think not only about what you need to do or what you will do; but also
think about how what do you affects other things and people and
systems. &lt;/p&gt;
&lt;p&gt;You are not an isolated individual so every decision that you take has
unseen ramifications. Think about those. Try to minimize damage as
much as possible.&lt;/p&gt;
&lt;p&gt;Also, try to make environment friendly decisions.&lt;/p&gt;
&lt;h3&gt;Be Curious&lt;/h3&gt;
&lt;p&gt;There is no upper limit to how much a human being can store in his/her
head. Or even if there is, there is no scientific literature to
support that claim.&lt;/p&gt;
&lt;p&gt;So, be curious. Don't stop asking "why" until you are satisfied. And
do not be satisfied easily. Be curious about the complexity. Learn
about it. Marvel at it.&lt;/p&gt;
&lt;h3&gt;Be Skeptical&lt;/h3&gt;
&lt;p&gt;Verify EVERYTHING (well, almost everything). The internet
knows more than any single person ever could.&lt;/p&gt;
&lt;p&gt;Also read scientific papers cautiously, as scientific research can
also be biased.&lt;/p&gt;
&lt;h3&gt;Be Flexible&lt;/h3&gt;
&lt;p&gt;Don't be rigid in your beliefs. Base them on facts. If the facts
change, update your beliefs.&lt;/p&gt;
&lt;p&gt;Adopt the Bayesian methodology of thinking and reasoning about the
world.&lt;/p&gt;
&lt;h3&gt;Food&lt;/h3&gt;
&lt;p&gt;Food is generally over-rated. It's only purpose is to keep the body
healthy and not die. As long as it does that, things should be fine. &lt;/p&gt;
&lt;p&gt;Remember, eat to live; not the other way around. &lt;/p&gt;
&lt;p&gt;Vegetarian food is best. Stick to it. It's also more environment friendly.&lt;/p&gt;
&lt;p&gt;Sugar is the worst.&lt;/p&gt;
&lt;h3&gt;Optimize Everything&lt;/h3&gt;
&lt;p&gt;A lot of the things that you do on a daily basis can be optimized so
that they require less time and/or less effort.&lt;/p&gt;
&lt;p&gt;Optimize them. Often the optimizations will be different depending on
the parameter you choose to optimize on (time/effort). Be smart enough
to figure out what to use when.&lt;/p&gt;
&lt;h3&gt;Trekking&lt;/h3&gt;
&lt;p&gt;You definitely like trekking. It's okay to trek once in a while.&lt;/p&gt;
&lt;h3&gt;Reduce, Reuse, Recycle, Re-purpose, Repair&lt;/h3&gt;
&lt;p&gt;Stick to these 5R's. These are good for you and the environment.&lt;/p&gt;
&lt;h3&gt;Minimalism&lt;/h3&gt;
&lt;p&gt;Embrace minimalism. You DO NOT need as much as you think you do. &lt;/p&gt;
&lt;p&gt;Buy things that you would carry with you if you had to pack and up and
leave the city in a days time.&lt;/p&gt;
&lt;h3&gt;Moving&lt;/h3&gt;
&lt;p&gt;You will probably keep moving for some time before having a permanent
city to live in.  This will have adverse effects on everything
especially long term inter-personal relationships and owning things.&lt;/p&gt;
&lt;h3&gt;Kolkata&lt;/h3&gt;
&lt;p&gt;There is a very good chance that you are not going to be living in
Kolkata any time soon. Get used to that fact. Family will always be
more than 1500kms away. &lt;/p&gt;
&lt;h3&gt;Compound Interest&lt;/h3&gt;
&lt;p&gt;If you are reading this in your 20s, then this is for you. &lt;/p&gt;
&lt;p&gt;Do stuff in your 20s that you would not mind doing for the rest of
your life.&lt;/p&gt;
&lt;p&gt;There is very good chance that what you do during your 20s will be
what you end up doing for the rest of your life (mainly because doing
something else requires a significant amount of time investment and to
learn a new skill after 20s will become an increasingly difficult task).&lt;/p&gt;
&lt;p&gt;Also, DO NOT be stupid with money.&lt;/p&gt;
&lt;h3&gt;Run&lt;/h3&gt;
&lt;p&gt;Running is probably the most easiest way to keep fit. This is the
exercise that requires the least amount of effort to get started (in
terms of equipment and training). &lt;/p&gt;
&lt;p&gt;For the sake of staying fit anything else is potentially a waste of
time.&lt;/p&gt;
&lt;h3&gt;Buy it for life&lt;/h3&gt;
&lt;p&gt;Buy stuff that lasts a long time as opposed to stuff that is cheap. &lt;/p&gt;
&lt;p&gt;Its more economical to do so in the long run and its more environment
friendly and sustainable.&lt;/p&gt;
&lt;p&gt;Also, Before buying something figure if you NEED it or if you WANT it.&lt;/p&gt;
&lt;p&gt;It can make a lot of differences. &lt;/p&gt;</content><category term="Meta"></category></entry><entry><title>Toilets!!</title><link href="https://signalshore.github.io/blog/Toilet.html" rel="alternate"></link><published>2018-11-24T00:00:00+05:30</published><updated>2018-11-24T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2018-11-24:/blog/Toilet.html</id><summary type="html">&lt;p&gt;Ever so often you meet someone and somehow certain conversations with them
start destroying your perception of reality a small chunk at a time.
After that the only thing that you can do is to pick up the pieces of
your shattered world-view and construct a better model. I've been â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ever so often you meet someone and somehow certain conversations with them
start destroying your perception of reality a small chunk at a time.
After that the only thing that you can do is to pick up the pieces of
your shattered world-view and construct a better model. I've been
fortunate enough to meet quite a lot of these people over my arguably
short lifespan. This is about one such conversation with one such
person. The details of the person have been changed.&lt;/p&gt;
&lt;h2&gt;The Person&lt;/h2&gt;
&lt;p&gt;We will call this person Priya. Priya was born in Mumbai. Priya has an
ancestral house in Uttar Pradesh. Priya is nice and funny and smart
and intelligent and kind and all the good things. She visits her
ancestral house about once a year for 2 months. Priya knows a lot
about farming and soil and farm animals etc.&lt;/p&gt;
&lt;h2&gt;The Event&lt;/h2&gt;
&lt;p&gt;Me, Priya and another friend went for a trek. I grew up in a city all
my life so I am not used to the "village life". So during this trek I
was asking a lot of questions about village life to Priya. For some
reason that I do not recall now a mentioned that toilets were being
built in the village after Narendra Modi came to power.&lt;/p&gt;
&lt;p&gt;This took some time to register. What Priya meant was that toilets
were being &lt;em&gt;installed&lt;/em&gt; for the first time since &lt;em&gt;ever&lt;/em&gt;. I asked Priya
a bunch of questions. This is how the conversation went:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Me :&lt;/strong&gt; Toh iske pehle kya hota tha ? &lt;br&gt;
&lt;strong&gt;Priya :&lt;/strong&gt; Iske pehle sab khet me hi jate the &lt;br&gt;
&lt;strong&gt;Me :&lt;/strong&gt; Aurat e bhi ? &lt;br&gt;
&lt;strong&gt;Priya :&lt;/strong&gt; Ha, aurate generally subah suraj nikalne se pehle aur suraj doobne ke bad hi khet me jati thi &lt;br&gt;
&lt;strong&gt;Me :&lt;/strong&gt; Kisi ko din me bathroom jana hua toh ? &lt;br&gt;
&lt;strong&gt;Priya :&lt;/strong&gt; Din me generally aurate bathroom nahi jati. Koi pregnant hota hai toh wo khet me jati hai &lt;br&gt;
&lt;strong&gt;Me :&lt;/strong&gt; Tu kabhi gayi hai ? &lt;br&gt;
&lt;strong&gt;Priya :&lt;/strong&gt; Ha.. bohot bar. Saal me do mahine mai bhi subah subah mug leke chal parti. Ye log generally groups me jati hai &lt;br&gt;
&lt;strong&gt;Priya :&lt;/strong&gt; Abhi toilets banne ke bad log use hi use karte hai, dheere dheere change ho raha hai &lt;br&gt;
&lt;strong&gt;Me :&lt;/strong&gt; Experience kaisa tha ? &lt;br&gt;
&lt;strong&gt;Priya :&lt;/strong&gt; As a kid it was okay. Zyada nahi soch ti thi. But as I started growing up I became more and more insecure. But it was for a short amount of time so I didn't think about it. &lt;br&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Translations&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Me :&lt;/strong&gt; what used to happen previously ? &lt;br&gt;
&lt;strong&gt;Priya :&lt;/strong&gt; Previously everyone used to the farm land &lt;br&gt;
&lt;strong&gt;Me :&lt;/strong&gt; Even the women ? &lt;br&gt;
&lt;strong&gt;Priya :&lt;/strong&gt; Yes, the women generally use the fields before sunrise and after sunset &lt;br&gt;
&lt;strong&gt;Me :&lt;/strong&gt; What if someone needed to use the washroom ? &lt;br&gt;
&lt;strong&gt;Priya :&lt;/strong&gt; Well, generally the women do not go to the bathroo during the day. If someone is pregnant then they use the farm land &lt;br&gt;
&lt;strong&gt;Me :&lt;/strong&gt; Have you ever done this ? &lt;br&gt;
&lt;strong&gt;Priya :&lt;/strong&gt; Yup. for about two months when we used to visit during vacations. Even i used to go to the farm land with these people carrying a bucket of water warly in the morning. They generally go in groups &lt;br&gt;
&lt;strong&gt;Priya :&lt;/strong&gt; After the toilets are being built people use those. Things are gradually changing&lt;br&gt;
&lt;strong&gt;Me :&lt;/strong&gt; How was the experience ? &lt;br&gt;
&lt;strong&gt;Priya :&lt;/strong&gt; As a kid it was okay. I didn't think of it much. As I started growing up I became more and more insecure. But it was for a short period during the year so I adjusted. &lt;br&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;All this happened in like about half an hour. It took me some time to digest this.&lt;/p&gt;
&lt;p&gt;Being a city-kid i had heard about open defecation in the news and on
the internet but hearing the experience from a person who has
literally wlaked in those shoes is another experience. I think what
bothered me the most was how she spoke about it in a "matter of fact"
way, like it was not a big deal. To me its a huge deal. Even today
almost a week after the conversation I am still thinking about it. I
did some more research into this. Turns out toilet technology is
pretty cool and this problem isn't as simple as "build toilets".&lt;/p&gt;
&lt;h1&gt;Let's talk about waste disposal&lt;/h1&gt;
&lt;p&gt;Wikipedia page for Mumbai says that Mumbai has a population of 1.84 crores in 2011. 
And the average weight of a humans daily poop is about 500 gms. &lt;/p&gt;
&lt;p&gt;So Mumbai produces about 92500000 kgs of poop a
day. (this is a rough estimate because I am not accounting for personal
differences in poop weight and irregular bowel movements). So Mumbai
has to deal with that much amount of waste per day. That is a lot of
waste and that is quite a big problem to deal with.&lt;/p&gt;
&lt;p&gt;In a city all this is abstracted away from us so we do not have to
worry about the logistics of poop; all we need to do is flush the
toilet and everything goes away magically. But turns out that managing
human waste efficiently and effectively is a big and an interesting
problem.&lt;/p&gt;
&lt;p&gt;The process of human waste management is almost similar in cities and
rural areas. Both the processes involve a primary treatment facility
which is the first stage in the entire process. These are generally
septic tanks in cities. If you live in a city in an apartment
building chances are that there is a septic tank on-site. This septic
tank is the place where the &lt;a href="https://en.wikipedia.org/wiki/Fecal_sludge_management"&gt;fecal sludge&lt;/a&gt; is collected. The idea is to
separate the human from the waste. These tanks generally have a
capacity after which they have to be pumped out.&lt;/p&gt;
&lt;p&gt;In rural area the septic tank designs are much more simplified and
they are generally called a pit. The pit design depends on the type of
toilet that is used. For example if we are talking about a dry toilet
where there is no water involved in flushing the waste, the pit design
is considerably different from the ones where water is involved. But
basically the poop collects there and it sits there for some
time. Typically 2 years.&lt;/p&gt;
&lt;p&gt;This is just the beginning. There is whole another level of complexity
involved in the removal and management of fecal sludge. We wont get
into that now. There is a Wikipedia page dedicated to this. Read it if
you want to.&lt;/p&gt;
&lt;h1&gt;What is the problem ?&lt;/h1&gt;
&lt;p&gt;Before we go about fixing anything we need to identify the problem
first. This is not as simple as building a toilet in the middle of
nowhere. A proper functioning toilet needs a lot of supporting
infrastructure to function properly and most of the time the lack of
the supporting infrastructure and the cost associated with
establishing not just a toilet but also the additional infra is
huge. In a city this is a non-issue because the infrastructure already
exists. &lt;/p&gt;
&lt;p&gt;Thus it is evident that the sanitation solution that we use in cities
in not ideal for rural areas. Moreover the sanitation in cities isn't
that good either. It is highly inefficient and expensive. &lt;/p&gt;
&lt;p&gt;We need to design better sanitation solutions that can process human
waste with less electricity, less water and less money.&lt;/p&gt;
&lt;h1&gt;Why does this matter ?&lt;/h1&gt;
&lt;p&gt;Sanitation is one of the most important aspects of modern
civilization. Poor sanitation causes diseases and diseases make a
person/community under-productive. A person can not work or a child can
not go to school unless they are not healthy. &lt;/p&gt;
&lt;p&gt;Moreover, efficient sanitation is a problem that if solved once, will
affect a lot of different areas. For example, the restrictions that
apply on the &lt;em&gt;ideal&lt;/em&gt; sanitation solution are the same restrictions
that apply technically every where. &lt;/p&gt;
&lt;p&gt;Think about it. If we have a sanitation solution that is compact, uses
less electricity, uses less water and is safe then were else can we
use it ?&lt;/p&gt;
&lt;p&gt;We could use it for space travel, interplanetary travel, buses, trains
etc etc. Literally everywhere. &lt;/p&gt;
&lt;h1&gt;Reinvent the Toilet Challenge&lt;/h1&gt;
&lt;p&gt;The &lt;a href="https://www.gatesfoundation.org/"&gt;Bill and Melinda Gates
Foundation&lt;/a&gt; launched the &lt;a href="https://www.gatesfoundation.org/What-We-Do/Global-Growth-and-Opportunity/Water-Sanitation-and-Hygiene/Reinvent-the-Toilet-Challenge-and-Expo"&gt;Reinvent
the Toilet Challenge&lt;/a&gt; in 2011 to promote global innovation in better
toilet designs. &lt;/p&gt;
&lt;p&gt;They also came up with the
&lt;a href="https://en.wikipedia.org/wiki/Omni_Processor"&gt;Omniprocessor&lt;/a&gt;. This is
generally a machine that employs a group of physical, biological and
chemical processes designed to process fecal sludge. The name was
proposed by the Bill and Melinda Gates Foundation.&lt;/p&gt;
&lt;p&gt;Its called the "Omni" processor because it can process a variety of
waste stream (dry, wet etc etc) and using a variety of fuel sources.&lt;/p&gt;
&lt;p&gt;Many interesting toiler designs have flourished as a result of this
challenge. The Janicki Omni Processor is one of them. &lt;/p&gt;
&lt;h2&gt;The Janicki Omni Processor : A special mention&lt;/h2&gt;
&lt;p&gt;This processor produces drinking water, electrical energy and ash after
processing sewage sludge. This is a really really cool piece of technology. &lt;/p&gt;
&lt;p&gt;This was funded by the Bill and Melinda Gates Foundation. &lt;/p&gt;
&lt;p&gt;A pilot project of Janicki Bioenergy's Omniprocessor was installed in
Dakar, Senegal, in 2015 and can now treat the fecal sludge of
50,000-100,000 people. &lt;/p&gt;
&lt;p&gt;In fact in a
&lt;a href="https://www.youtube.com/watch?time_continue=2&amp;amp;v=bVzppWSIFU0"&gt;video&lt;/a&gt;. Bill
Gates actually drinks a glass of water produced from this same
machine.&lt;/p&gt;
&lt;p&gt;More information about this can be found in their
&lt;a href="https://www.sedron.com/janicki-omni-processor/how-it-works/"&gt;website&lt;/a&gt;.&lt;/p&gt;
&lt;h1&gt;That's about it&lt;/h1&gt;
&lt;p&gt;I'll admit that before this encounter I had never put too much thought
into this whole toilet thing. But anyway.. here we are and now I (and
you) know. &lt;/p&gt;
&lt;p&gt;I don't think that me writing about this will benefit the world too much. But I
 like talking about things that I find interesting; so, here we are!!&lt;/p&gt;</content><category term="Meta"></category></entry><entry><title>Undecidability and Incompleteness</title><link href="https://signalshore.github.io/blog/Undecideablity-And-Incompleteness.html" rel="alternate"></link><published>2018-11-07T00:00:00+05:30</published><updated>2018-11-07T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2018-11-07:/blog/Undecideablity-And-Incompleteness.html</id><summary type="html">&lt;p&gt;In the &lt;a href="https://signalshore.github.io/blog/Turing-Machine-and-Halting-Problem.html"&gt;previous post&lt;/a&gt;
we looked at a Turing Machine and the Halting problem.  A Halting
problems is type of decision problem for a Turing Machine.&lt;/p&gt;
&lt;p&gt;Recall that a Turing Machine has three final states:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Accept -&amp;gt; The machine accepts the string&lt;/li&gt;
&lt;li&gt;Reject -&amp;gt; The machine rejects the string&lt;/li&gt;
&lt;li&gt;Loop indefinitely -&amp;gt; The â€¦&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;In the &lt;a href="https://signalshore.github.io/blog/Turing-Machine-and-Halting-Problem.html"&gt;previous post&lt;/a&gt;
we looked at a Turing Machine and the Halting problem.  A Halting
problems is type of decision problem for a Turing Machine.&lt;/p&gt;
&lt;p&gt;Recall that a Turing Machine has three final states:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Accept -&amp;gt; The machine accepts the string&lt;/li&gt;
&lt;li&gt;Reject -&amp;gt; The machine rejects the string&lt;/li&gt;
&lt;li&gt;Loop indefinitely -&amp;gt; The machine neither accepts nor rejects the string; its still processing it&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now it is quite evident that in the Accept and Reject states the
Turing Machine can tell you something definite about the string that
it is processing. Thus, when a Turing Machine reaches one of these
states we say that the Turing Machine has &lt;em&gt;decided&lt;/em&gt; the language
(recall that all TM problems are represented in the form of Languages). &lt;/p&gt;
&lt;p&gt;On the other hand we have situations where the Turing Machine fails to
decide a language. In fact we have a whole class of such
languages. These languages are called undecidable languages.&lt;/p&gt;
&lt;p&gt;The Halting Problem that we looked at in the last essay is one such problem.&lt;/p&gt;
&lt;h2&gt;Undecidability and Undecidable Problems&lt;/h2&gt;
&lt;p&gt;Undecidability is one of those concepts in Theoretical Computer
Science that fascinates me in ways I can not even begin explain. &lt;/p&gt;
&lt;p&gt;There are certain types of decision-problems for which there is no
algorithm that can reliably give a yes-no answer.&lt;/p&gt;
&lt;p&gt;The implications of this are quite interesting. &lt;/p&gt;
&lt;p&gt;This means that you can not have a program that tells you whether a
program will produce an output or not (and consequently keep running
for-ever). Like how our compilers still can not tell us when we will hit
an infinite-loop. The only way to find out is to actually run the
program. This is serious research topic in computer science; designing
accurate static analyzers.&lt;/p&gt;
&lt;h2&gt;Hilbert's problems&lt;/h2&gt;
&lt;p&gt;In 1900 mathematician David Hilbert published a list of 23
problems. In 1928 he returned to the second question out of these 23
asking three fundamental questions about mathematics.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Is mathematics complete ?&lt;/li&gt;
&lt;li&gt;Is mathematics consistent ?&lt;/li&gt;
&lt;li&gt;Is mathematics decidable ?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The main reason for these questions was to establish a set of
&lt;em&gt;fundamental&lt;/em&gt; axioms about mathematics using which you could prove any
theorem in mathematics. Now, the idea was that even if all of such
axioms were not known we could find them out.&lt;/p&gt;
&lt;p&gt;Three years later in 1931 Kurt Godel published solutions to the first
two questions, these are known as Godel's incompleteness theorems.&lt;/p&gt;
&lt;p&gt;The Wikipedia page
for
&lt;a href="https://en.wikipedia.org/wiki/G%C3%B6del%27s_incompleteness_theorems"&gt;Godel's incompleteness theorem&lt;/a&gt; states
that&lt;/p&gt;
&lt;p&gt;The first incompleteness theorem:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;no consistent system
of axioms whose theorems can be listed by an effective procedure
(i.e., an algorithm) is capable of proving all truths about the
arithmetic of the natural numbers. For any such formal system, there
will always be statements about the natural numbers that are true, but
that are unprovable within the system.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The second incompleteness theorem:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;the system in question cannot demonstrate its own consistency.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;All this is fine; but what does it actually mean for mathematics and computer science ?&lt;/p&gt;
&lt;p&gt;For mathematics it means that mathematics is not complete. Hence there
is a very good possibility that certain problems exist in mathematics
which can never be proven. (For
example. the
&lt;a href="https://en.wikipedia.org/wiki/Riemann_hypothesis"&gt;Riemann hypothesis&lt;/a&gt;
etc)&lt;/p&gt;
&lt;p&gt;For Computer Science this means that there are certain programs that
are non-computable.  Yes, this basically puts a limit on the type of
programs that you can write.&lt;/p&gt;
&lt;h2&gt;Entscheidungsproblem (or the Decision problem)&lt;/h2&gt;
&lt;p&gt;This problem is referred to as
the
&lt;a href="https://en.wikipedia.org/wiki/Entscheidungsproblem"&gt;Decision problem&lt;/a&gt;
posed by David Hilbert. This problem asks for an algorithm that takes
in a logical statement statement and then says either "yes" or "no" as
to whether the statement is true or not. For the sake of simplicity
we can assume that the algorithm is aware of all the axioms (or rules)
that is needed to say "yes" or "no".&lt;/p&gt;
&lt;p&gt;The solution of this problem was given by both Alan Turing and Alonzo
Church in 1936. Alonzo Church created a method of defining functions
called the Lambda Calculus while Alan Turing created a model of
computation called the Turing Machine.&lt;/p&gt;
&lt;p&gt;The final result was the no such algorithm can exist. &lt;/p&gt;
&lt;p&gt;What does this mean for mathematics and computer science ?&lt;/p&gt;
&lt;p&gt;For mathematics it means that not only are there certain problems that
can not be solved (or proved) but there is no way for us to know
whether a problem is solvable or not without actually trying to
solve the problem.&lt;/p&gt;
&lt;p&gt;For
example
&lt;a href="https://en.wikipedia.org/wiki/Fermat%27s_Last_Theorem"&gt;Fermat's Last theorem&lt;/a&gt; was
assumed to unsolvable and it remained unsolved for about 358 years
until Andrew Wiles solved it.&lt;/p&gt;
&lt;p&gt;Similarly we have other challenging problems such as the Riemann
Hypothesis etc.&lt;/p&gt;
&lt;p&gt;For computer science it means that we can not have some program that
tells you whether your program will work or not. Lets break this in a
lil bit more.&lt;/p&gt;
&lt;h3&gt;Thinking exercise for CS people.&lt;/h3&gt;
&lt;p&gt;Sit down.&lt;/p&gt;
&lt;p&gt;Write a program that will take any other program and tell you if that
other program will stop or not.&lt;/p&gt;
&lt;h3&gt;Disclaimer&lt;/h3&gt;
&lt;p&gt;I am not expert in any of this by any stretch of the
imagination. I'm just starting out and there is a of chance that I do
not understand this fully. Maybe 20 years later I will look at these
and laugh at myself. Maybe my understanding of these is completely
wrong or misguided. &lt;/p&gt;
&lt;p&gt;But, right now I love reading about these and that i good enough for
me and honestly the the presented above are good enough. &lt;/p&gt;
&lt;p&gt;I would rather be wrong about these right now than not study waiting
for the correct time or the correct opportunity or the correct
resource to study from. I've made that error before and I do not want
to make it again. &lt;/p&gt;</content><category term="CS"></category></entry><entry><title>Turing Machine and Halting Problem</title><link href="https://signalshore.github.io/blog/Turing-Machine-and-Halting-Problem.html" rel="alternate"></link><published>2018-08-30T00:00:00+05:30</published><updated>2018-08-30T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2018-08-30:/blog/Turing-Machine-and-Halting-Problem.html</id><summary type="html">&lt;p&gt;In a &lt;a href="https://signalshore.github.io/blog/Lambda-Calculus-Part-2.html"&gt;previous
post&lt;/a&gt;
I talked briefly about Alan Turing's model of computation, called the
Turing Machine.&lt;/p&gt;
&lt;p&gt;Today we will look into this in more detail and discuss an interesting
problem called the Halting problem.&lt;/p&gt;
&lt;h2&gt;Context&lt;/h2&gt;
&lt;p&gt;Alan Turing was interested in what it meant to &lt;em&gt;compute&lt;/em&gt; something. 
To fully grasp â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;In a &lt;a href="https://signalshore.github.io/blog/Lambda-Calculus-Part-2.html"&gt;previous
post&lt;/a&gt;
I talked briefly about Alan Turing's model of computation, called the
Turing Machine.&lt;/p&gt;
&lt;p&gt;Today we will look into this in more detail and discuss an interesting
problem called the Halting problem.&lt;/p&gt;
&lt;h2&gt;Context&lt;/h2&gt;
&lt;p&gt;Alan Turing was interested in what it meant to &lt;em&gt;compute&lt;/em&gt; something. 
To fully grasp the severity of this problem we need to step back in time. &lt;/p&gt;
&lt;p&gt;This is the 1930s that we are talking about, there were no &lt;em&gt;proper&lt;/em&gt;
computers yet. Computers and the whole computer science field was not
yet born. So in this context a computer was something (or someone)
that could perform arithmetic operations. Humans who did this were
called &lt;a href="https://en.wikipedia.org/wiki/Human_computer"&gt;human computers&lt;/a&gt;
There were
mechanical
&lt;a href="https://en.wikipedia.org/wiki/Mechanical_calculator"&gt;calculators&lt;/a&gt;
that existed back then but again, they all required a human operator.&lt;/p&gt;
&lt;p&gt;So ultimately it was the operator who was responsible for making
decisions about what to do with the numbers. There was not automated
reasoning that any machine could follow.&lt;/p&gt;
&lt;p&gt;What Alan Turing was interested in; was to understand the meaning of
what it means for a task to be computable. This is one of the core
areas in Philosophy of Computer Science. However to answer this
question he needed a a formal definition of computation itself (which
did not exist at that time). &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;NOTE :&lt;/strong&gt; &lt;em&gt;As a mental exercise before doing anything else just sit back and
think about this yourself. We use computers daily but at its very
core, what does computation mean ?&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So in order to have a formal definition of computation we needed a
model for computation. This is what Alan Turing came up with and this
is what we now call the Turing Machine.&lt;/p&gt;
&lt;h2&gt;The Idea&lt;/h2&gt;
&lt;p&gt;Picture a typewriter.  The Turing Machine is heavily inspired by this
system (typewriter + operator). In the book "Alan Turing: The Enigma"
the writer Andrew Hodges tells us that Alan was fascinated by
typewriters. We can see this inspiring his work.&lt;/p&gt;
&lt;p&gt;What does a typewriter have ? A typewriter has a paper for printing, a
system that outputs characters on said paper, a mechanism for input
that tells the typewriter what to print.  Additionally the typewriter
system also has the user whose job is to tell the typewrite what to do
and it keeps track of what the typewriter has already done.&lt;/p&gt;
&lt;p&gt;Now, the Turing Machine is a hypothetical machine (or more precisely a
mathematical model); it does not exist in real life. It is a state
machine which means that the machine has a finite number of states in
which it can be. It can read information/instructions from a tape and
based on that it moves from one state to another. The number of states
is finite. It can also write data on the tape.&lt;/p&gt;
&lt;p&gt;A Turing Machine has 4 main parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The tape&lt;/li&gt;
&lt;li&gt;The head&lt;/li&gt;
&lt;li&gt;The state&lt;/li&gt;
&lt;li&gt;The transition table&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The &lt;strong&gt;tape&lt;/strong&gt; is the memory of the machine. The tape is divided into
blocks of the same width and only one symbol is present in one
block. The machine can read symbols from this tape and can write
symbols to this tape. At a given time there is only one symbol in the
machine. This symbol is referred to as the &lt;em&gt;scanned&lt;/em&gt; symbol. The
machine can be supplied with an infinitely long tape.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;head&lt;/strong&gt; is a contraption that can read symbols from the tape and can
write symbols to the tape as well. The head can also move the tape to
the left or right but by only one block at a time.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;state&lt;/strong&gt; of the Turing Machine. This state is a intriguing
concept. This &lt;em&gt;state&lt;/em&gt; is used to replace the &lt;em&gt;state of mind&lt;/em&gt; of the
typewriter operator (or any person performing any computation for that
matter). At any time the Turing Machine can be one of many finite
states.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;transition table&lt;/strong&gt; is a set of finite rules that given the current
state the machine is currently and the scanned symbol tells the Turing
Machine to write a symbol into the tape, then move the tape left or
right and finally to assume a new state (or stay in the same one).&lt;/p&gt;
&lt;p&gt;Now the Turing Machine is a model of computation, thus it must be
able to do some computation; right? So how does it do that. &lt;/p&gt;
&lt;h2&gt;Problems for a Turing Machine.&lt;/h2&gt;
&lt;p&gt;Problems in Automata Theory are generally of the form that involves
some "computer" determining if some string belongs to a set of strings
or not, based on some rules. This set of strings is called that follow
a general rule for membership is called a Language and the "computer"
involved is called an automaton which is nothing but a model of
computation. We choose to represent various computational problems as
languages because we already have established a terminology for
dealing with languages.&lt;/p&gt;
&lt;p&gt;To perform some computation in a Turing Machine we write a program
for the machine. This program is basically a set of transition rules.&lt;/p&gt;
&lt;p&gt;Given any string as input the Turing Machine can do one of three
things. It can stop and &lt;strong&gt;accept&lt;/strong&gt; the string or it can &lt;strong&gt;reject&lt;/strong&gt; the
string or it can &lt;strong&gt;loop&lt;/strong&gt; indefinitely over the input.&lt;/p&gt;
&lt;p&gt;When the TM is in either the accept or the reject state after
processing a string then we say that the TM has halted (as in stopped
running on the output). On the other hand if the TM does not halt and
instead keeps on looping indefinitely then it means that the TM will
never stop working or never halt. When a TM has halted it indicates
that the TM has decided the string (either accept or reject) on the
other hand when it does not halt then the string (or rather the
problem) is said to be undecidable.&lt;/p&gt;
&lt;p&gt;All this can get quite intense, so here is an intuitive definition of
computation by a Turing
Machine. The
&lt;a href="https://en.wikipedia.org/wiki/Church%E2%80%93Turing_thesis"&gt;Church-Turing thesis&lt;/a&gt; showed
that a Turing Machine algorithm captures &lt;strong&gt;all&lt;/strong&gt; algorithms. This
means that if for a given problem we can design a Turing Machine
algorithms then that problem is actually solvable. As we will soon
see that there are certain problems that are so complex that there
exists no algorithm that can solve them. In-fact while describing
Turing Machine algorithms we do not need to go into the implementation
level details of how the head and the tapes move; instead we can just
use English prose to describe an algorithm. The only requirement is
that an algorithm to stop in a finite number of steps (this is quite
literally the definition of an algorithm).&lt;/p&gt;
&lt;h2&gt;Universal Turing Machine&lt;/h2&gt;
&lt;p&gt;A Turing Machine is generally programmed to perform only a single type
of computation. However there is a class of Turing Machines called the
Universal Turing Machine which can perform any sort of computation. In
fact this property of this Turing Machine is what makes a Turing
Machine such a powerful model for computation. &lt;/p&gt;
&lt;p&gt;The Universal Turing Machine can simulate any arbitrary Turing machine
on any arbitrary string. It does this by reading the description of
the Turing machine and the string input from its own tape and then
processing them.&lt;/p&gt;
&lt;p&gt;This makes the Turing Machine capable of answering questions about the
behavior of other Turing machines. This model of computation is a
very accurate model of modern computers where computers have access to
a random access memory. This is the same as the tape in a Turing
Machine.&lt;/p&gt;
&lt;p&gt;Thus the problems these Turing Machines can tackle are generally of
the form where we test the behavior of some arbitrary Turing machine
on some arbitrary input.&lt;/p&gt;
&lt;h2&gt;The Halting Problem&lt;/h2&gt;
&lt;p&gt;The Halting Problem is a decision problem of determining whether any
arbitrary Turing Machine will halt on an arbitrary string input or
not. &lt;/p&gt;
&lt;p&gt;In other words lets say that we have a Language &lt;span class="math"&gt;\(H_{Lang}\)&lt;/span&gt; which is
made up of all string encoding of the form &lt;span class="math"&gt;\(&amp;lt;B,w&amp;gt;\)&lt;/span&gt; where &lt;span class="math"&gt;\(B\)&lt;/span&gt; is a
Turing Machine and &lt;span class="math"&gt;\(w\)&lt;/span&gt; is a string and &lt;span class="math"&gt;\(B\)&lt;/span&gt; halts on &lt;span class="math"&gt;\(w\)&lt;/span&gt;. We need to
show that &lt;span class="math"&gt;\(H_{Lang}\)&lt;/span&gt; is undecidable. Which means that there isn't a
single imaginable Turing Machine that can decide &lt;span class="math"&gt;\(H_{Lang}\)&lt;/span&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Which means that no one can ever design a Turing Machine that will
be able to take an arbitrary string &lt;span class="math"&gt;\(w\)&lt;/span&gt; and an arbitrary Turing
machine &lt;span class="math"&gt;\(B\)&lt;/span&gt; and tell whether &lt;span class="math"&gt;\(B\)&lt;/span&gt; will halt on &lt;span class="math"&gt;\(w\)&lt;/span&gt; or not. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now, this might seem like a fairly un-important detail but this has
some far-reaching implications as we will soon see. But before that we
will prove the above statement. This is a fun proof that illustrates
how to think about these problems in general.&lt;/p&gt;
&lt;h3&gt;Proof&lt;/h3&gt;
&lt;p&gt;Let us assume that such a machine does exist and let us call it
&lt;span class="math"&gt;\(H_{TM}\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;Construction of &lt;span class="math"&gt;\(H_{TM}\)&lt;/span&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Input :&lt;/strong&gt; String &lt;span class="math"&gt;\(&amp;lt;B,w&amp;gt;\)&lt;/span&gt;, where &lt;span class="math"&gt;\(B\)&lt;/span&gt; is a TM and &lt;span class="math"&gt;\(w\)&lt;/span&gt; is a string.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Run :&lt;/strong&gt; Simulates &lt;span class="math"&gt;\(w\)&lt;/span&gt; on &lt;span class="math"&gt;\(B\)&lt;/span&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Accepts :&lt;/strong&gt; &lt;span class="math"&gt;\(w\)&lt;/span&gt; if &lt;span class="math"&gt;\(B\)&lt;/span&gt; halts on &lt;span class="math"&gt;\(w\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rejects :&lt;/strong&gt; &lt;span class="math"&gt;\(w\)&lt;/span&gt; if &lt;span class="math"&gt;\(B\)&lt;/span&gt; does not halt on &lt;span class="math"&gt;\(w\)&lt;/span&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;This&lt;/em&gt; is the decider that we have to prove can not exist.&lt;/p&gt;
&lt;p&gt;Now, since &lt;span class="math"&gt;\(H_{TM}\)&lt;/span&gt; already exists we can use this machine to
construct another Turing Machine &lt;span class="math"&gt;\(D_{TM_H}\)&lt;/span&gt; which has &lt;span class="math"&gt;\(H_{TM}\)&lt;/span&gt; as a
subroutine (hence the sub-subscript notation).&lt;/p&gt;
&lt;p&gt;Construction of &lt;span class="math"&gt;\(D_{TM_H}\)&lt;/span&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Input :&lt;/strong&gt; String &lt;span class="math"&gt;\(&amp;lt;M&amp;gt;\)&lt;/span&gt;, where &lt;span class="math"&gt;\(M\)&lt;/span&gt; is a Turing machine&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Runs :&lt;/strong&gt; Simulates &lt;span class="math"&gt;\(&amp;lt;M, &amp;lt;M&amp;gt;&amp;gt;\)&lt;/span&gt; on &lt;span class="math"&gt;\(H_{TM}\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Accepts :&lt;/strong&gt; &lt;span class="math"&gt;\(&amp;lt;M&amp;gt;\)&lt;/span&gt; if &lt;span class="math"&gt;\(H_{TM}\)&lt;/span&gt; rejects &lt;span class="math"&gt;\(&amp;lt;M, &amp;lt;M&amp;gt;&amp;gt;\)&lt;/span&gt;, i.e. if &lt;span class="math"&gt;\(M\)&lt;/span&gt; rejects &lt;span class="math"&gt;\(&amp;lt;M&amp;gt;\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rejects :&lt;/strong&gt; &lt;span class="math"&gt;\(&amp;lt;M&amp;gt;\)&lt;/span&gt; if &lt;span class="math"&gt;\(H_{TM}\)&lt;/span&gt; accepts &lt;span class="math"&gt;\(&amp;lt;M, &amp;lt;M&amp;gt;&amp;gt;\)&lt;/span&gt;, i.e. if &lt;span class="math"&gt;\(M\)&lt;/span&gt; accepts &lt;span class="math"&gt;\(&amp;lt;M&amp;gt;\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Now, what happens if we run &lt;span class="math"&gt;\(D_{TM_H}\)&lt;/span&gt; on &lt;span class="math"&gt;\(&amp;lt;D_{TM_H}&amp;gt;\)&lt;/span&gt; ?&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;By the above Accept and Reject conditions, &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If &lt;span class="math"&gt;\(D_{TM_H}\)&lt;/span&gt; &lt;strong&gt;accepts&lt;/strong&gt; &lt;span class="math"&gt;\(&amp;lt;D_{TM_H}&amp;gt;\)&lt;/span&gt;, then it means that &lt;span class="math"&gt;\(H_{TM}\)&lt;/span&gt;
  rejected &lt;span class="math"&gt;\(&amp;lt;D_{TM_H}, &amp;lt;D_{TM_H} &amp;gt;&amp;gt;\)&lt;/span&gt; which means that &lt;span class="math"&gt;\(D_{TM_H}\)&lt;/span&gt;
  &lt;strong&gt;rejects&lt;/strong&gt; &lt;span class="math"&gt;\(&amp;lt;D_{TM_H}&amp;gt;\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;If &lt;span class="math"&gt;\(D_{TM_H}\)&lt;/span&gt; &lt;strong&gt;rejects&lt;/strong&gt; &lt;span class="math"&gt;\(&amp;lt;D_{TM_H}&amp;gt;\)&lt;/span&gt;, then it means that &lt;span class="math"&gt;\(H_{TM}\)&lt;/span&gt;
  accepted &lt;span class="math"&gt;\(&amp;lt;D_{TM_H}, &amp;lt;D_{TM_H} &amp;gt;&amp;gt;\)&lt;/span&gt; which means that &lt;span class="math"&gt;\(D_{TM_H}\)&lt;/span&gt;
  &lt;strong&gt;accepted&lt;/strong&gt; &lt;span class="math"&gt;\(&amp;lt;D_{TM_H}&amp;gt;\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is a contradiction because it implies that &lt;span class="math"&gt;\(D_{TM_H}\)&lt;/span&gt; accepts
itself if it rejects itself.&lt;/p&gt;
&lt;p&gt;Hence our initial assumption about the existence of &lt;span class="math"&gt;\(H_{TM}\)&lt;/span&gt; must be
wrong. Hence &lt;span class="math"&gt;\(H_{TM}\)&lt;/span&gt; can not exist.&lt;/p&gt;
&lt;h6&gt;There is another proof for this that uses the Cantor's diagonalisation argument&lt;/h6&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;This means that&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There does not exist a single algorithm that can us if another
algorithm will halt or not&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Static analyzers try and do solve some of these limitations but yes,
they are not 100% accurate, because they are mathematically guaranteed
to not be 100% accurate.&lt;/p&gt;
&lt;p&gt;This post is part of a series of posts that I have planned. In the
next one we will talk about Godels Incompletelness Theorems and
Hilberts Problems.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="CS"></category></entry><entry><title>Moving from Bangalore to Mumbai</title><link href="https://signalshore.github.io/blog/Bangalore-To-Mumbai.html" rel="alternate"></link><published>2018-08-06T00:00:00+05:30</published><updated>2018-08-06T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2018-08-06:/blog/Bangalore-To-Mumbai.html</id><summary type="html">&lt;p&gt;So things got really interesting in the previous month. &lt;/p&gt;
&lt;p&gt;After my degree course got over, I was supposed to join Deloitte as a
campus recruit. Before the joining I attended the training program for
campus recruits for about two weeks.&lt;/p&gt;
&lt;p&gt;In the mean time I responded to a tweet about â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;So things got really interesting in the previous month. &lt;/p&gt;
&lt;p&gt;After my degree course got over, I was supposed to join Deloitte as a
campus recruit. Before the joining I attended the training program for
campus recruits for about two weeks.&lt;/p&gt;
&lt;p&gt;In the mean time I responded to a tweet about a job position and that
tweet changed my life. That tweet let to a series of interviews which
culminated in a very generous job offer from a company in Mumbai. The
best part is that this is the most &lt;em&gt;perfect&lt;/em&gt; job that I could hope
for.  My "official" job title is Linux Administrator, but there is
more to it.&lt;/p&gt;
&lt;p&gt;&lt;img alt="that tweet" src="/assets/images/2018-08-06/twitter.png"&gt;&lt;/p&gt;
&lt;h5&gt;This is the tweet that changed everything... :-P&lt;/h5&gt;
&lt;h3&gt;Tl;Dr&lt;/h3&gt;
&lt;p&gt;I am moving to Mumbai. In fact I leave in like half an hour for my
flight. I am at my aunts place right now. This place was the first
building I walked into after I first arrived in Bangalore and I
thought it would be very poetic if this was the last building I walk
out of when I am leaving Bangalore for good (at least in near
foreseeable future). I will be visiting Bangalore from time to time
though.&lt;/p&gt;
&lt;h2&gt;So What about Bangalore ?&lt;/h2&gt;
&lt;p&gt;Bangalore would always be the place I grew the F$#&amp;amp; up; because quite
honestly in Kolkata until I left, i was used to stuff like my mother
waiting with cooked food for me and someone else taking care of my
documents and having pocket money etc. All this changed when I first
moved to Bangalore. I remember not getting dinner one day during the
first week when I feel asleep for a slightly longer time. It was a
good learning experience. Living alone hits you in the face with a
truck. But, its fun and you get used to it after a while.&lt;/p&gt;
&lt;p&gt;The down side of this is that you get so accustomed to being in-charge
that you begin to hate your family for trying to micromanage
everything from half a country away. :-P&lt;/p&gt;
&lt;p&gt;Anyway, I am moving now, maybe I will come back here (to stay) if my
works brings me.&lt;/p&gt;
&lt;h2&gt;About moving ...&lt;/h2&gt;
&lt;p&gt;To be completely honest; I am slightly excited about moving. But,
that's it &lt;em&gt;slightly&lt;/em&gt; excited. I really like to work on things that I
like and for that I am willing to move anywhere. People who have
interacted with me during these past three years know how much
obsessive I can be with my work. So as long as my work is getting
done, I don't really care where I live. (Maybe this is not an &lt;em&gt;ideal&lt;/em&gt;
thing.. but again I don't really care)&lt;/p&gt;
&lt;p&gt;Moreover, I do not own too many things, so moving for me is like a
really long vacation. My most value-able possessions are my books (SICP
and CLRS !!). I don't cook for myself yet, I generally outsource it to
the nearest shop. I think this will change in Mumbai though. Also I do
not have too items in the luggage front as well. Just three bags
(including my backpack) which is really very less for someone moving
to a different city and vacating their accommodation of three years.&lt;/p&gt;
&lt;p&gt;So technically I can literally stuff everything I own into three
bags. :-) &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;img alt="that tweet" src="/assets/images/2018-08-06/luggage.jpg"&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I have been very very fortunate to meet/know some of the people that I
know. All of them have had some impact on my life. I wanted to list
all of them here but that would be a disservice to the people not
listed. &lt;/p&gt;
&lt;p&gt;I haven't figured out a place to stay in Mumbai yet. I am going to
"wing" it. :-P&lt;/p&gt;
&lt;h2&gt;About work&lt;/h2&gt;
&lt;p&gt;THIS is the thing I am most excited about. I value my work greatly
above everything else. This job even though it is in a small company,
will give me a lot of learning experiences than Deloitte. At Deloitte
joining as a fresher I would be at the bottom of the hierarchy,
however in this company I will be part of a very small technology team
and interestingly enough I will be the second sysadmin. Thus the scope
of responsibility is great. I will also have more decision making
powers than at Deloitte. Plus they are paying my well. Moreover I will
get to work with some of the most cutting edge open source
technologies and LINUX. (keywords are open source and Linux)&lt;/p&gt;
&lt;h2&gt;About FSMK&lt;/h2&gt;
&lt;p&gt;Most of the work I do for FSMK can be done remotely, so I doubt that
it will be a problem. However I am also in the process of mentoring a
second batch of sysadmins at FSMK so that these kids can take up the
work.&lt;/p&gt;
&lt;p&gt;Apart from this I will surely miss attending/speaking at the camps and all. &lt;/p&gt;
&lt;p&gt;A good thing is that Vikram from FSMK lives in Mumbai and he lives
quite near to my office. So maybe I will get some pointers from him
about similar organizations.&lt;/p&gt;
&lt;h2&gt;SO...&lt;/h2&gt;
&lt;p&gt;So this is it. I will continue posting about Theoretical Computer
Science and scheme and everything else from Mumbai. It will take some
time. I need to get set up and get up to speed at work.&lt;/p&gt;
&lt;p&gt;so yeah.. &lt;/p&gt;
&lt;p&gt;My next post will be from Mumbai. &lt;/p&gt;
&lt;p&gt;It has been awesome Bangalore!!! &amp;lt;3&lt;/p&gt;</content><category term="Misc"></category></entry><entry><title>The Infinity - How maths can blow your mind!!</title><link href="https://signalshore.github.io/blog/The-Infinity.html" rel="alternate"></link><published>2018-07-03T00:00:00+05:30</published><updated>2018-07-03T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2018-07-03:/blog/The-Infinity.html</id><summary type="html">&lt;p&gt;I am writing this post because I am fascinated by the idea of infinity
and I think it is something that we do not talk enough about.&lt;/p&gt;
&lt;p&gt;Moreover off late I am reading about Theoretical Computer Science and
I find encountering this concept again and again. I am just beginning â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I am writing this post because I am fascinated by the idea of infinity
and I think it is something that we do not talk enough about.&lt;/p&gt;
&lt;p&gt;Moreover off late I am reading about Theoretical Computer Science and
I find encountering this concept again and again. I am just beginning
to understand the connection between Computer Science and
Mathematics.(note that I used Computer &lt;em&gt;Science&lt;/em&gt; as not Computer
&lt;em&gt;Engineering&lt;/em&gt;)&lt;/p&gt;
&lt;p&gt;To be honest infinity is a very weird and un-intuitive concept to get
your head around and I don't think I understand it fully at this point
and I don't I ever will. However, here goes nothing.&lt;/p&gt;
&lt;p&gt;Let's begin.&lt;/p&gt;
&lt;h2&gt;What is Infinity ?&lt;/h2&gt;
&lt;p&gt;Infinity is a concept that describes the of never-ending-ness of
something. If I were to say that something is infinite it means that
that &lt;em&gt;something&lt;/em&gt; is never ending. It is never-ending no matter what we
take away from it or add to it. &lt;/p&gt;
&lt;p&gt;This concept can be illustrated in the famous hotel called the &lt;a href="https://en.wikipedia.org/wiki/Hilbert's_paradox_of_the_Grand_Hotel"&gt;Hilbert's Hotel&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This hotel has an interesting property - it has an infinite number of
rooms which are all occupied.  &lt;/p&gt;
&lt;p&gt;So if they are all occupied then how do they accommodate new customers
?&lt;/p&gt;
&lt;p&gt;In Hilbert's hotel, whenever a new customer comes into the hotel
management shifts all the other customers to the next room and the new
customer is allotted the first room.&lt;/p&gt;
&lt;p&gt;Thus this hotel can accommodate an infinite number of people.&lt;/p&gt;
&lt;h2&gt;Infinities in Mathematics&lt;/h2&gt;
&lt;p&gt;There are a whole lot of things to talk about infinity, however
neither am I qualified enough nor do we want a post of infinite
length. So we will focus on two infinite sets in mathematics.&lt;/p&gt;
&lt;p&gt;The set of whole numbers in Mathematics. This set is a set of all
positive integers beginning from 0 and this is an infinite set. This
is the famous set &lt;span class="math"&gt;\(\mathbb{N}\)&lt;/span&gt; and the set of all Real numbers. This
set consists of any number that can be represented on a number
line. This is the famous set &lt;span class="math"&gt;\(\mathbb{R}\)&lt;/span&gt;.&lt;/p&gt;
&lt;h2&gt;Are all infinities equal ?&lt;/h2&gt;
&lt;p&gt;That is a loaded question!! It sounds simple doesn't it?  If infinity
means that something is never ending then all infinities must be
equal; right ?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;WRONG !!&lt;/strong&gt; Turns out there are different kinds of
infinities. Countable Infinities and Un-countable infinities.&lt;/p&gt;
&lt;p&gt;Let's unpack this argument from the beginning and in the end we will
compare the two sets we talked about before (&lt;span class="math"&gt;\(\mathbb{N}\)&lt;/span&gt; and
&lt;span class="math"&gt;\(\mathbb{R}\)&lt;/span&gt;)&lt;/p&gt;
&lt;p&gt;Two sets P and Q are said to be equal sets if they have the same
number of elements (or they sets have the same cardinality). Now the
question arises that if two sets are infinite then how do we compare
if they have the same number of elements or not.&lt;/p&gt;
&lt;p&gt;This is the brilliance of it all. To establish the equality between &lt;span class="math"&gt;\(P\)&lt;/span&gt;
and &lt;span class="math"&gt;\(Q\)&lt;/span&gt; we do not need to and we can not count the number of elements in
each set and show that they are equal, we just need to show that &lt;em&gt;if&lt;/em&gt;
counting the number of elements were possible then the sets would be
equal. We do this by showing
a
&lt;a href="https://en.wikipedia.org/wiki/Bijection"&gt;one-to-one correspondence (Bijection)&lt;/a&gt; between
the elements of the two sets. This, is a fancy way to say that we have
to show that we can pair every element of the first set with an
element of the second set.&lt;/p&gt;
&lt;p&gt;Comparing the two sets (&lt;span class="math"&gt;\(\mathbb{N}\)&lt;/span&gt; and &lt;span class="math"&gt;\(\mathbb{R}\)&lt;/span&gt;) will make this
idea more clear.  Set &lt;span class="math"&gt;\(\mathbb{N}\)&lt;/span&gt; is the set of Natural numbers and
set &lt;span class="math"&gt;\(\mathbb{R}\)&lt;/span&gt; is the set of Real numbers. For this experiment we
will only consider the numbers between 0 and 1 from the set
&lt;span class="math"&gt;\(\mathbb{R}\)&lt;/span&gt;. Thus this small interval will include numbers like 
&lt;span class="math"&gt;\(0.01, 0.0001, 0.00235421, ...)\)&lt;/span&gt;. Now, let us select such numbers from
this interval in ascending order and pair them up with each element
from the set &lt;span class="math"&gt;\(\mathbb{N}\)&lt;/span&gt;. &lt;/p&gt;
&lt;p&gt;Soon, we will run out of numbers from &lt;span class="math"&gt;\(\mathbb{N}\)&lt;/span&gt;. This happens
because no matter how you choose, you &lt;strong&gt;can not&lt;/strong&gt; choose numbers in
ascending order (or any order for that matter) from set &lt;span class="math"&gt;\(\mathbb{R}\)&lt;/span&gt;.
Say you choose &lt;span class="math"&gt;\(0.01\)&lt;/span&gt; and the next number you choose is &lt;em&gt;0.02&lt;/em&gt;,
however there are still numbers like &lt;span class="math"&gt;\(0.001\)&lt;/span&gt; and &lt;span class="math"&gt;\(0.000001\)&lt;/span&gt; and so on.
In fact, there are infinitely many numbers between any two numbers from
the set &lt;span class="math"&gt;\(\mathbb{R}\)&lt;/span&gt;. &lt;/p&gt;
&lt;p&gt;You can image this as having numbers on a number line and you can just
&lt;em&gt;zoom&lt;/em&gt; into the line indefinitely and all you would do is just
increase the granularity of the numbers. The numbers would &lt;strong&gt;never&lt;/strong&gt; end.&lt;/p&gt;
&lt;p&gt;Thus the set &lt;span class="math"&gt;\(\mathbb{N}\)&lt;/span&gt; is a countably-infinite set while the set
&lt;span class="math"&gt;\(\mathbb{R}\)&lt;/span&gt; is uncountably-infinite.&lt;/p&gt;
&lt;h2&gt;Another WILD idea ...&lt;/h2&gt;
&lt;p&gt;Take the set of all Natural numbers. This set contains all numbers
from 1 to infinity.  Take another set containing all the even numbers
from &lt;span class="math"&gt;\(2\)&lt;/span&gt; to infinity.&lt;/p&gt;
&lt;p&gt;So now we have two different sets. What is the size of each of these sets ? &lt;/p&gt;
&lt;p&gt;Basic intuition suggests that the set of all natural numbers will be
twice as large as the set of all even numbers. But, that is not the
case. Both the sets are of infinite length. In fact both of these sets
have exactly the same number of elements.&lt;/p&gt;
&lt;p&gt;This suggests some weird arithmetic. 
If you add infinity with a number; you get back infinity.
If you remove a number from a infinity; you get back infinity.
If you divide infinity by a number; you get back infinity.
If you multiply infinity by a number; you get back infinity.&lt;/p&gt;
&lt;h5&gt;&lt;em&gt;Crazy isn't it ?? :-P&lt;/em&gt;&lt;/h5&gt;
&lt;h2&gt;Stretch your brains a bit more&lt;/h2&gt;
&lt;p&gt;If the last section didn't rattle your brains enough, then let us look
at something more bizarre.&lt;/p&gt;
&lt;p&gt;This is a thought experiment. Let us imagine a circle with radius
&lt;span class="math"&gt;\(r\)&lt;/span&gt;. Thus the circumference of this circle is &lt;span class="math"&gt;\(2 \pi r\)&lt;/span&gt;. Thus the
circumference of a circle is not rational. It is however a Real
Number.&lt;/p&gt;
&lt;p&gt;Now, if you start from point &lt;span class="math"&gt;\(A\)&lt;/span&gt; on the circumference of this circle
and you take &lt;span class="math"&gt;\(\pi\)&lt;/span&gt; steps every time then you will never reach the same
point &lt;span class="math"&gt;\(A\)&lt;/span&gt; ever again. &lt;/p&gt;
&lt;p&gt;This happens because of the irrationality of the circumference. You
can imagine the circumference of the circle as two points marked on
the Real number line at &lt;span class="math"&gt;\(0\)&lt;/span&gt; and at &lt;span class="math"&gt;\(2 \pi r\)&lt;/span&gt;. As we have seen
previously there can be infinitely many numbers between any two
numbers on the real number line. Now if we were to remove the original
point &lt;span class="math"&gt;\(A\)&lt;/span&gt; the circle would remain as it is and the "gap" in its
position will be replaced by some other point since we have an
infinite supply of points. &lt;/p&gt;
&lt;p&gt;There is also an incredible paradox called
the
&lt;a href="https://en.wikipedia.org/wiki/Banach%E2%80%93Tarski_paradox"&gt;Banach-Tarski Paradox&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The non-mathematical version of this paradox can be paraphrased that
&lt;em&gt;there are certain methods in which a sphere can be decomposed (broken
down or taken apart) into a finite number of subsets such that these
subsets can be recombined to form two exact copies of the original
sphere&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;If this were true is the physical world then it would mean that we
could take an orange and turn that into two oranges. However, the
physical world is different from the mathematical one in a way that
the physical world is bound by the laws of physics, while the
mathematical world is not. Hence the fun sphere in the mathematical
world does not follow
the
&lt;a href="https://en.wikipedia.org/wiki/Conservation_of_mass"&gt;&lt;strong&gt;law of conservation of mass&lt;/strong&gt;&lt;/a&gt; while
the poor sphere in the physical world needs to follow it. This is why
we can not create infinite oranges and we can not have a circle form
which you can remove a point and the size of the circle will still
remain the same.&lt;/p&gt;
&lt;p&gt;Bummer right!! :-P (I KNOW!!!)&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I first read about the Banach-Tarski paradox in a video and I was blown
away by it. The idea was so revolting, but at the same time it made so
much sense. &lt;/p&gt;
&lt;p&gt;If this blog post scratched &lt;em&gt;that&lt;/em&gt; part of your brain that says
"wait-a-minute-but-how" then please go ahead and read about infinity! &lt;/p&gt;
&lt;p&gt;It's amazing. &lt;/p&gt;
&lt;p&gt;And finally a huge thanks to Vasauce for &lt;a href="https://www.youtube.com/watch?v=s86-Z-CbaHA"&gt;this video&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This post was primarily inspired by that video!! :-)&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="Misc"></category><category term="Math"></category></entry><entry><title>CO2 trends between India and USA</title><link href="https://signalshore.github.io/blog/CO2-trends-between-India-and-USA.html" rel="alternate"></link><published>2018-06-21T00:00:00+05:30</published><updated>2018-06-21T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2018-06-21:/blog/CO2-trends-between-India-and-USA.html</id><summary type="html">&lt;h1&gt;Disclaimer and Introduction&lt;/h1&gt;
&lt;p&gt;I am by no means an expert in Data Science. I am just starting to
explore the vast field of data science because of a lot of other cool
things that I like reading about rely heavily on Data Analystics.&lt;/p&gt;
&lt;p&gt;I was kind of stupid to ignore â€¦&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Disclaimer and Introduction&lt;/h1&gt;
&lt;p&gt;I am by no means an expert in Data Science. I am just starting to
explore the vast field of data science because of a lot of other cool
things that I like reading about rely heavily on Data Analystics.&lt;/p&gt;
&lt;p&gt;I was kind of stupid to ignore the field of data science because
somehow I believed that the &lt;em&gt;data&lt;/em&gt; in data science comes from humans
using applications that do not respect our privacy and the &lt;em&gt;analytics&lt;/em&gt;
in data analytics is only used to train recommendation algorithms
which we call Artificial Intelligence.&lt;/p&gt;
&lt;p&gt;I was stupid, I admit it. Turns out AI and recommendation algorithms
are just a small subset of Data Science. Here is a list of vast fields
within Computer Science that rely heavily on data science.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Computational modeling (computerized drug simulations, weather
  forecasting, computational fluid dynamics etc)&lt;/li&gt;
&lt;li&gt;Astrophysics (radio telescopes, etc)&lt;/li&gt;
&lt;li&gt;High-energy physics (cool stuff at CERN et. al.)&lt;/li&gt;
&lt;li&gt;Medical Imaging (fMRI, MRI etc)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of these activities generate some amount of data and later this
data is processed by computers to create all sorts of cool results
like false color images (yeah... the images of the Galaxy that we see
are false color images), graphs etc etc.&lt;/p&gt;
&lt;p&gt;With all this in mind I started a course on edX. It is called
the
&lt;a href="https://courses.edx.org/courses/course-v1:UCSanDiegoX+DSE200x+1T2018/course/"&gt;Python for Data Science&lt;/a&gt;.
It is brilliant and if you are into Data Science then I suggest that
you should take this course.&lt;/p&gt;
&lt;h2&gt;So let's talk about this thingy..&lt;/h2&gt;
&lt;p&gt;As a part of this course we have to do a small project using a data-set
that we have used in the course itself. Since I am very much
interested in the environment and the preservation of the environment
I decided to use the World Development Indicators data-set released by
the World Bank and I started to explore the CO2 emissions of India.&lt;/p&gt;
&lt;p&gt;The data-set included all sorts of fun data including data on what
percentage of the CO2 emissions came form which type of economic
activities (like electricity and heating, manufacturing,
transportation etc)&lt;/p&gt;
&lt;p&gt;Exploring the data of India was not too much fun especially since I do
not have any background in this field. So, I did a comparative study
between the CO2 trends in India and the USA and the results are
really very shocking (maybe I was expecting something else :-P)&lt;/p&gt;
&lt;h2&gt;Results&lt;/h2&gt;
&lt;h3&gt;Correlation between CO2 per capita and GDP per capita for INDIA&lt;/h3&gt;
&lt;p&gt;Here is the graph that shows the CO2 emissions per capita from 1960 to 2011.
&lt;img alt="India CO2 per capita" src="/assets/images/2018-06-21/indiaCo2.png"&gt;&lt;/p&gt;
&lt;p&gt;Next, let us see the GDP from 1960 to 2014.
&lt;img alt="India GDP per capita" src="/assets/images/2018-06-21/indiaGdp.png"&gt;&lt;/p&gt;
&lt;p&gt;Now we will use a scatter plot to look at the correlation.
&lt;img alt="India correlation" src="/assets/images/2018-06-21/indiaCor.png"&gt;&lt;/p&gt;
&lt;p&gt;We have calculated a correlation value of 0.967 using the
the
&lt;a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.corrcoef.html"&gt;numpy.corrcoef&lt;/a&gt; method. This
method returns
the
&lt;a href="https://en.wikipedia.org/wiki/Pearson_correlation_coefficient"&gt;Pearson correlation coefficient&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Correlation between CO2 per Capita and GDP per capita for USA&lt;/h3&gt;
&lt;p&gt;Here is the graph that shows the CO2 emissions per capita from 1960 to 2011.
&lt;img alt="USA CO2 per capita" src="/assets/images/2018-06-21/usaCo2.png"&gt;&lt;/p&gt;
&lt;p&gt;Next, let us see the GDP from 1960 to 2014.
&lt;img alt="USA GDP per capita" src="/assets/images/2018-06-21/usaGdp.png"&gt;&lt;/p&gt;
&lt;p&gt;Now we will use a scatter plot to look at the correlation.
&lt;img alt="USA correlation" src="/assets/images/2018-06-21/usaCor.png"&gt;&lt;/p&gt;
&lt;p&gt;We have calculated a correlation value of 0.067 which is almost negligible.&lt;/p&gt;
&lt;p&gt;NOTE: Can we take a moment here and just marvel at the staggering difference in the Y-axis vales for the CO2 emissions per capita and the GDP per capita vales for India and USA.&lt;/p&gt;
&lt;p&gt;For India the range of the Y-axis of the CO2 emissions is 0-2.0 metric tons per capita while the same range is 0-25 metric tons per capita or the USA.&lt;/p&gt;
&lt;p&gt;Similarly the range of the Y-axis of GDP per capita is 0-1200 US for India while the same range is 0-50000 US$ for the USA. &lt;/p&gt;
&lt;h3&gt;CO2 emissions by fuel types in India and USA&lt;/h3&gt;
&lt;p&gt;&lt;img alt="India State" src="/assets/images/2018-06-21/indiaState.png"&gt;&lt;/p&gt;
&lt;p&gt;In this we can see that most of CO2 emissions in India are due to solid fuels. &lt;/p&gt;
&lt;p&gt;&lt;img alt="USA State" src="/assets/images/2018-06-21/usaState.png"&gt;
In USA the major source of CO2 emission is from the combustion of liquid forms of fuel. &lt;/p&gt;
&lt;h3&gt;CO2 emissions by economic activities&lt;/h3&gt;
&lt;p&gt;Now in this graph we show the different sets of economic activities that are responsible for CO2 emissions.&lt;/p&gt;
&lt;p&gt;&lt;img alt="India per" src="/assets/images/2018-06-21/indiaPer.png"&gt;&lt;/p&gt;
&lt;p&gt;As we can see that the major contributor of CO2 emissions in India is
the production of Electricity and Heating, followed by the
Manufacturing and Construction related activities.&lt;/p&gt;
&lt;p&gt;Now, let us look at the graph for the USA.
&lt;img alt="USA per" src="/assets/images/2018-06-21/usaPer.png"&gt;&lt;/p&gt;
&lt;p&gt;These two graphs are more or less similar in nature with one major
difference. In the USA the Transportation sector is th second largest
contributor to CO2 emissions unlike in India where the Manufacturing
and construction sector is the second largest contributor.&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;I just think that this was very fun. 
I used Python for all the work (Python is really amazing!! :-))&lt;/p&gt;
&lt;p&gt;All the code is available as
a
&lt;a href="https://www.kaggle.com/data83/comparative-study-of-co2-trends-in-india-and-usa"&gt;Kaggle Kernel&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;This is my first kernel. I will keep writing more cool kernels. &lt;/p&gt;
&lt;p&gt;The data-set was also obtained from &lt;a href="https://kaggle.com"&gt;Kaggle&lt;/a&gt; and it is the &lt;a href="https://www.kaggle.com/worldbank/world-development-indicators"&gt;World development Indicators&lt;/a&gt; by the World Bank. &lt;/p&gt;
&lt;p&gt;Its a HUGE data-set and I have not even managed to explore even 1% of
it. A LOT of domain knowledge is needed to do some actual data
science. :-P&lt;/p&gt;
&lt;p&gt;Anyway, this was my Hello-World and I am happy!! :-)&lt;/p&gt;
&lt;p&gt;p.s. Check out my &lt;a href="https://kaggle.com/data83"&gt;Kaggle profile&lt;/a&gt;&lt;/p&gt;</content><category term="Env"></category><category term="Data"></category></entry><entry><title>Planet List</title><link href="https://signalshore.github.io/blog/Planet-List.html" rel="alternate"></link><published>2018-06-13T00:00:00+05:30</published><updated>2018-06-13T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2018-06-13:/blog/Planet-List.html</id><summary type="html">&lt;p&gt;I am an environmentalist. I have been an environmentalist for as long
as I can remember, however recently (like for the past year or so) I
am slowly transitioning from an arm-chair environmentalist to a vocal
environmentalist.&lt;/p&gt;
&lt;p&gt;As a part of this transitioning phase I have decided to learn about â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I am an environmentalist. I have been an environmentalist for as long
as I can remember, however recently (like for the past year or so) I
am slowly transitioning from an arm-chair environmentalist to a vocal
environmentalist.&lt;/p&gt;
&lt;p&gt;As a part of this transitioning phase I have decided to learn about
the issues in greater detail and to talk about them with my peers. It
is very surprising to see that people can care about issues like
Feminism and Online Privacy while at the same time being completely
ignorant to the issues that plague the environment. Personally I
believe that Climate Change is one of the biggest issues humanity is
facing and it deserves some attention. &lt;/p&gt;
&lt;p&gt;Through this blog I mainly write about things that I care about and
that is what I plan to do about the environmental issues as well. I
will need to do some research on these myself for them to be
blog-worthy.&lt;/p&gt;
&lt;p&gt;I was an arm-chair environmentalist for a long time and it wasn't
doing anyone any good. So I feel that it's time that I started talking
about this. &lt;/p&gt;
&lt;h2&gt;What is the Planet List ?&lt;/h2&gt;
&lt;p&gt;The Planet List is a list of rules/guidelines that I follow during my
everyday living.&lt;/p&gt;
&lt;p&gt;My friends know that most of my decision are based on some
environmental factor, no matter how small they are. I am to be as less
wasteful as possible. I am going to share them today hoping that I can
inspire at least one person.&lt;/p&gt;
&lt;p&gt;I will try to make this list as exhaustive as possible and I will keep
adding things to this list as I learn them. &lt;/p&gt;
&lt;p&gt;The main goal of the &lt;strong&gt;rules&lt;/strong&gt; in this list is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To reduce the waste that I am introducing into the world&lt;/li&gt;
&lt;li&gt;To reduce my personal &lt;a href="https://en.wikipedia.org/wiki/Carbon_footprint"&gt;carbon footprint&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;To reduce the environmental impact of my actions&lt;/li&gt;
&lt;li&gt;To transition into a sustainable form of living&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There is no free lunch. Every decision you make sets of series of
chain reactions that ultimately screw over some unfortunate life-form
on this planet for no fault of theirs.&lt;/p&gt;
&lt;h2&gt;The List&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Getting from point A to point B (aka transportation)&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Walk if the destination is less than 3kms from the source.&lt;/li&gt;
&lt;li&gt;Ride a bicycle is the destination is less than 10kms from the source.&lt;/li&gt;
&lt;li&gt;Use public modes of transport. ALWAYS.&lt;/li&gt;
&lt;li&gt;Use the Metro or other mass rapid transit system. (it probably
   runs on electricity)&lt;/li&gt;
&lt;li&gt;Avoid personal vehicles at all costs whenever possible.&lt;/li&gt;
&lt;li&gt;Optimize your daily schedule around public transport peak
   timings so that you can avail the system&lt;/li&gt;
&lt;li&gt;Optimize your vehicle. (i.e. take a two-wheeler to office if you
   are the only one traveling, cause this way you waste one seat
   while in a 4-seat-er car the other 3 seats are wasted.)&lt;/li&gt;
&lt;li&gt;Optimize your travel. Schedule things in such a way that you do
   not need to travel to the same area multiple times a day to
   get some job done.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Eating Stuff&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;s&gt;Go vegetarian&lt;/s&gt;. Well this is not quite true. The problem is with beef and not any other form of meat. Beef production takes a huge toll on the environment. &lt;a href="https://www.washingtonpost.com/news/wonk/wp/2015/12/18/being-a-vegetarian-might-make-you-feel-environmentally-superior-why-that-may-be-wrong/?noredirect=on&amp;amp;utm_term=.af44bcb67180"&gt;Washington Post article&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;DO NOT accept take-out/parcel containers if they are made of
   plastic&lt;/li&gt;
&lt;li&gt;Carry your own containers if you want to get take-out/parcel&lt;/li&gt;
&lt;li&gt;Buy from the local market as much as possible instead of some
  supermarket chains. This is good for the local vegetable sellers
  as you will give him business and for the environment since the
  local markets have limited inventory so there is less wastage
  when things are not sold. Large supermarkets are super-wasteful
  from procurement of the resources to the final selling.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Clothing&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Stay away from synthetic material as much as possible. When
   synthetic material is washed they release tiny micro-filaments
   which then filter their way down to the ocean and accumulate in
   marine
   life. &lt;a href="https://www.theguardian.com/environment/2016/jun/20/microfibers-plastic-pollution-oceans-patagonia-synthetic-clothes-microbeads"&gt;guardian article&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Do not buy clothing online. This single move will reduce the
   amount of waste you generate. Packing of articles bought online
   is almost always useless and it can be easily avoided if we
   just buy clothes from physical shops.&lt;/li&gt;
&lt;li&gt;Buy clothing made from/using sustainable techniques and
   sourcing options.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;DO NOT BUY&lt;/em&gt; clothing. Most of the time when people think
   they need a new article of clothing they probably do not need
   it, they just &lt;em&gt;want&lt;/em&gt; it. Think very hard about if you actually
   need that thing before buying it.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Lifestyle&lt;ol&gt;
&lt;li&gt;Optimize your daily routine so that you can utilize the
   maximum hours of sunlight. &lt;/li&gt;
&lt;li&gt;Switch to energy efficient lighting and cooling solutions&lt;/li&gt;
&lt;li&gt;Avoid the air-conditioner as much as possible&lt;/li&gt;
&lt;li&gt;Avoid plastic/Styrofoam single-use cutlery (spoons, forks
   etc). Buy metal cutlery, they are better and last a long time.&lt;/li&gt;
&lt;li&gt;Avoid Use-And-Throw pens. Instead buy pens that will last a
   long time and are refill-able. If you the kind of person who
   keeps on losing pens then you should aim towards being more
   responsible. I recently purchased a Parker Jotter Steel. It is
   the most expensive pen I own, but I am confident that this pen
   will last me at least 5 years.&lt;/li&gt;
&lt;li&gt;Carry a pen always. Its better than buying one when you need it
   and in some situations you can use a pen as a self-defense
   tool.&lt;/li&gt;
&lt;li&gt;Switch from paper receipts to digital ones.&lt;/li&gt;
&lt;li&gt;You do not need to upgrade your phone that often. &lt;/li&gt;
&lt;li&gt;Bathing everyday is not required.&lt;/li&gt;
&lt;li&gt;Buy things offline as much as possible. This reduces waste in the form of packing material&lt;/li&gt;
&lt;li&gt;Buy shoes based on use and functionality and not design and other superficial qualities.&lt;/li&gt;
&lt;li&gt;Dispose off single use plastics responsibly. Throwing them
    away here and there leads to them filtering down to the oceans
    and messing up the ecological balance in the marine ecosystems
    not to mention cause grievous damage to marine
    life. &lt;a href="https://en.wikipedia.org/wiki/Great_Pacific_garbage_patch"&gt;wiki link&lt;/a&gt;,
    &lt;a href="https://plasticoceans.org/the-facts/"&gt;facts&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Carry a reusable water bottle. &lt;/li&gt;
&lt;li&gt;Stop using sanitary napkins. Sanitary napkins are
     non-biodegradable and are very difficult to dispose off
     properly. Instead switch to reusable cloth pads or menstrual
     cups. Check out &lt;a href="http://www.boondh.co/"&gt;BOONDH&lt;/a&gt; for
     information about menstrual cups.&lt;/li&gt;
&lt;li&gt;If you have kids stop using conventional diapers. There are
     very difficult to dispose off properly and are
     non-biodegradable. Instead start using cloth reusable
     nappies.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;That should be it for now. I will add to this whenever I can.&lt;/h3&gt;
&lt;p&gt;This is a very exhaustive list and I will admit that following
everyone of them to the final word is very very difficult and
sometimes the circumstances are just not right, it is okay to
compromise during such scenarios.&lt;/p&gt;
&lt;p&gt;Even though it is hard, there are some communities might be helpful.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/climatechange/"&gt;Reddit Climate Change&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.reddit.com/r/ZeroWaste/"&gt;Reddit Zero Waste&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.elephantpodcast.org/"&gt;The Elephant Podcast&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Updated on 18th, Aug, 2018&lt;/p&gt;</content><category term="Env"></category><category term="Meta"></category></entry><entry><title>Lambda Calculus - Part 2 - Computation and Lambda Calculus</title><link href="https://signalshore.github.io/blog/Lambda-Calculus-Part-2.html" rel="alternate"></link><published>2018-05-08T00:00:00+05:30</published><updated>2018-05-08T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2018-05-08:/blog/Lambda-Calculus-Part-2.html</id><summary type="html">&lt;h3&gt;Prologue&lt;/h3&gt;
&lt;p&gt;This is the second part of my Lambda Calculus
series. The
&lt;a href="https://signalshore.github.io/blog/Lambda-Calculus-Part-1.html"&gt;first part&lt;/a&gt; can
be found here. I strongly recommend reading it first before starting off with
this one.&lt;/p&gt;
&lt;h3&gt;What is Computation ?&lt;/h3&gt;
&lt;p&gt;Lambda calculus is formal system for representing computation in
Mathematical Logic. Sit and think about the phrase â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Prologue&lt;/h3&gt;
&lt;p&gt;This is the second part of my Lambda Calculus
series. The
&lt;a href="https://signalshore.github.io/blog/Lambda-Calculus-Part-1.html"&gt;first part&lt;/a&gt; can
be found here. I strongly recommend reading it first before starting off with
this one.&lt;/p&gt;
&lt;h3&gt;What is Computation ?&lt;/h3&gt;
&lt;p&gt;Lambda calculus is formal system for representing computation in
Mathematical Logic. Sit and think about the phrase &lt;em&gt;representing
computation&lt;/em&gt; for a moment.&lt;/p&gt;
&lt;p&gt;What does it mean for something to be computable ?&lt;/p&gt;
&lt;p&gt;Everyday in out lives we use a computer in one form or another,
i.e. computation takes place every single day in numerous ways, but
do we know what computation really is ? &lt;/p&gt;
&lt;p&gt;Gerald Jay Sussman said in SICP (Structure and Interpretation of Computer Programs) and I might be paraphrasing him a bit here:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It's always harder in computer science to talk about what something
means than to go about and do it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When a computer computes something, what does it actually do ?&lt;/p&gt;
&lt;p&gt;I am sure that we could answer this question with some electronics
based answer and that would in fact be accurate; but, that is not what
we are concerned with here. We are more concerned about the logical
meaning of computation.&lt;/p&gt;
&lt;p&gt;Alan Turing invented the Turing machine which is one of the most
robust models of computation. When we talk about &lt;em&gt;models of
computation&lt;/em&gt; we abstract away all the boring details (like time
complexity and space complexity etc :-P ) and try to deal with the
meaning of computation at a much abstract level.  Alan Turing's Turing
Machine captures the idea of computation in a mechanical sense.&lt;/p&gt;
&lt;p&gt;At the same time (actually before Alan Turing) the logician Alonzo
Church came up with Lambda Calculus to capture the very same thing but in a mathematically formal manner. &lt;/p&gt;
&lt;h3&gt;What is Lambda Calculus&lt;/h3&gt;
&lt;p&gt;Lambda Calculus syntax is very simple. It mainly consists of
expressions (we call them Lambda Expressions), variables, constants
and combinations of all these.&lt;/p&gt;
&lt;p&gt;We will look at the syntax in  CFG form (Context Free Grammar)&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(expr \thinspace\)&lt;/span&gt; &lt;span class="math"&gt;\(:=\)&lt;/span&gt; &lt;span class="math"&gt;\(\thinspace constant\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\qquad \qquad\)&lt;/span&gt; &lt;span class="math"&gt;\(|\)&lt;/span&gt; &lt;span class="math"&gt;\(variable\)&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\qquad \qquad\)&lt;/span&gt; &lt;span class="math"&gt;\(|\)&lt;/span&gt; &lt;span class="math"&gt;\((expr \space expr)\)&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\qquad \qquad\)&lt;/span&gt; &lt;span class="math"&gt;\(|\)&lt;/span&gt; &lt;span class="math"&gt;\(( \lambda \thinspace variable.expr)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Now that we have the CFG down. Let us break it down a little bit.
Writing the syntax in the form of a CFG is very beneficial because this
format allows us to define the evaluation of a &lt;span class="math"&gt;\(\lambda\)&lt;/span&gt;-calculus
expression in terms of derivations of the CFG. We will see that in a
bit.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The first rule states that any &lt;span class="math"&gt;\(\lambda\)&lt;/span&gt;-calculus expression can be
replaced with a constant. Constants can be anything; from numbers like
&lt;strong&gt;0&lt;/strong&gt; or &lt;strong&gt;1&lt;/strong&gt; to even other &lt;strong&gt;functions&lt;/strong&gt; (yeah!!)&lt;/li&gt;
&lt;li&gt;The second rule states that &lt;span class="math"&gt;\(\lambda\)&lt;/span&gt;-calculus expression can be
  replaced with a variable. A variable are names like &lt;strong&gt;x&lt;/strong&gt; or &lt;strong&gt;y&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;The third rule allows us to apply one expression to another
  expression. This rule capture the idea of function application.&lt;/li&gt;
&lt;li&gt;The fourth and the final rules gives is the &lt;strong&gt;Lambda notation&lt;/strong&gt;. This is notation that allows us to bind variables to expression (the variables names in rule 2 work because of this)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;strong&gt;Observation&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Rule 3 allows us to apply one expression to another expression &lt;strong&gt;only&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Rule 4 allows use to define functions that have &lt;em&gt;only&lt;/em&gt; one variable.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;A very simple  &lt;span class="math"&gt;\(\lambda\)&lt;/span&gt;-expression&lt;/h3&gt;
&lt;p&gt;Let us consider the lambda expression &lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\lambda x . ((+ 1) x)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;This is quite a tedious form of writing this expression and we can simplify this quite a lot. The simplified version looks like this.&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\lambda x . (+ 1 \thinspace x )\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Observe&lt;/strong&gt; that in the second form we have one function &lt;em&gt;+&lt;/em&gt; applied to two arguments - &lt;em&gt;1&lt;/em&gt; and &lt;em&gt;x&lt;/em&gt;. This is not actually allowed according to the rules but they mean the the same things. &lt;/p&gt;
&lt;p&gt;Evaluating this expression we perform simple substitutions according to the rules of the CFG (for this we will use leftmost derivations).&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(expr \Rightarrow (\lambda variable . expr)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(expr \Rightarrow (\lambda x . expr)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(expr \Rightarrow (\lambda x . (expr \space expr))\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(expr \Rightarrow (\lambda x . ((expr \space expr) \space expr))\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(expr \Rightarrow (\lambda x . ((constant \space expr) \space expr))\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(expr \Rightarrow (\lambda x . ((constant \space constant) \space expr))\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(expr \Rightarrow (\lambda x . ((+ \space 1) \space expr))\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(expr \Rightarrow (\lambda x . ((+ \space 1) \space variable))\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(expr \Rightarrow (\lambda x . ((+ \space 1) \space x))\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Observe&lt;/strong&gt; that the derivation that the $\lambda&amp;amp; expression returns is actually a &lt;em&gt;function&lt;/em&gt;. This function needs to applied to a variable to get something useful happening out of it. &lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\((\lambda x . (+ 1 x )5) := (+ \space 1 \space 5) := 6\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;In Scheme this would be something like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="k"&gt;lambda &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;+ &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;The Abstraction Operator&lt;/h3&gt;
&lt;p&gt;The &lt;span class="math"&gt;\(\lambda\)&lt;/span&gt; (lambda) is the abstraction operator used in Lambda Calculus.&lt;/p&gt;
&lt;p&gt;In any &lt;span class="math"&gt;\(\lambda\)&lt;/span&gt;-expression there are two kinds of variables. &lt;strong&gt;Free&lt;/strong&gt; and &lt;strong&gt;Bound&lt;/strong&gt; variables.&lt;/p&gt;
&lt;p&gt;Consider the following expression&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\((\lambda x. (+ \space x \space y \space y \space x))\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(x\)&lt;/span&gt; is a bound variable and &lt;span class="math"&gt;\(y\)&lt;/span&gt; is a free variable. &lt;/p&gt;
&lt;p&gt;The abstraction operator binds a variable with the body of the
abstraction. Thus a variable that falls within the scope of the
abstraction is called a &lt;em&gt;bound&lt;/em&gt; variable. All other variables are
&lt;em&gt;free&lt;/em&gt; variables.&lt;/p&gt;
&lt;p&gt;In the given example variable &lt;span class="math"&gt;\(x\)&lt;/span&gt; is bound to the expression &lt;span class="math"&gt;\((+
\space x \space y \space y \space x)\)&lt;/span&gt;. Thus when this function is
being evaluated with an argument then all the occurrences of &lt;span class="math"&gt;\(x\)&lt;/span&gt; in the
expression will be replaced by the argument.&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(((\lambda x. (+ \space x \space y \space y \space x)) 5) = (+ \space 5 \space y \space  y \space 5)\)&lt;/span&gt;&lt;/p&gt;
&lt;h3&gt;Currying&lt;/h3&gt;
&lt;p&gt;Rule 4 states that we can have function definitions only in the form of &lt;span class="math"&gt;\(expr := (\lambda variable . expr)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Thus this means that in the lambda calculus model we can have
functions with only one variable. However, as we will see that this is
not a limitation, in fact it is quite the opposite as it opens up new
possibilities about what you can do with your programming language.&lt;/p&gt;
&lt;p&gt;Currying is a technique that lets us translate functions that take
multiple arguments to a sequence of functions that accept only a
single argument. This is useful in &lt;span class="math"&gt;\(\lambda\)&lt;/span&gt;-calculus because this
allows us to define complex functions that take multiple arguments and
still not disturb the 4th Rule.&lt;/p&gt;
&lt;p&gt;For example, consider the expression &lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(expr := (\lambda x \thinspace y. \thinspace (+ \thinspace x \thinspace y))\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;This function will take two arguments &lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(expr := ((\lambda x \thinspace y. \thinspace (+ \thinspace x \thinspace y))3 \thinspace 5)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;In this expression the abstraction operator will take the first variable (i.e. &lt;span class="math"&gt;\(x\)&lt;/span&gt;) and substitute all the occurrences of &lt;span class="math"&gt;\(x\)&lt;/span&gt; in the expression with the value of the first argument (i.e. &lt;span class="math"&gt;\(3\)&lt;/span&gt;). This will also happen for the second variable and we will have the expression &lt;span class="math"&gt;\((+ \thinspace 3 \thinspace 5)\)&lt;/span&gt;. &lt;/p&gt;
&lt;p&gt;Actually the expression &lt;span class="math"&gt;\(expr := ((\lambda x \thinspace y. \thinspace
(+ \thinspace x \thinspace y))3 \thinspace 5)\)&lt;/span&gt; is just the curried
version of the expression;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(expr := ((\lambda x (\lambda y. \thinspace (+ \thinspace x \thinspace y))3 )\thinspace 5)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The derivation of this expression,&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(expr := ((\lambda x (+ \thinspace x \thinspace 3)\thinspace 5)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(expr := (+ \thinspace 5 \thinspace 3)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Currying is not just a technique used in Lambda Calculus. It is used
in a lot of different fields of mathematics logic. Just have a look at
the Wikipedia page
for &lt;a href="https://en.wikipedia.org/wiki/Currying"&gt;Currying&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Currying is named after Haskell Curry. (The Haskell programming languages is also named after him)&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="CS"></category></entry><entry><title>Savandurga Trek</title><link href="https://signalshore.github.io/blog/Savandurga-Trek.html" rel="alternate"></link><published>2018-04-10T00:00:00+05:30</published><updated>2018-04-10T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2018-04-10:/blog/Savandurga-Trek.html</id><summary type="html">&lt;p&gt;I came to know about Savandurga Hill a couple of weeks back when me and my friend went there for a casual ride (motorcycle). When we went there the trekking part of the hill was already closed. This was okay since both of us did not plan on trekking anyway â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I came to know about Savandurga Hill a couple of weeks back when me and my friend went there for a casual ride (motorcycle). When we went there the trekking part of the hill was already closed. This was okay since both of us did not plan on trekking anyway. &lt;/p&gt;
&lt;p&gt;However I was hooked by the moment I saw the hill. It is mind-blowing. So after I returned I tried to convince my friends to come along with me, but that did not happen. So I decided to ride to Savandurga and come back. &lt;/p&gt;
&lt;p&gt;This turned out to be an amazing idea.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;The Route&lt;/h2&gt;
&lt;p&gt;My initial route plan was to just ride to Savandurga Hill on the Magdi road and come back via the same route as well. However while researching for the route and I came across this page. This page is a route information by the IISc Randonneurs group. Though group does not organize any events anymore the page still exists. &lt;/p&gt;
&lt;p&gt;So my effective route would be :&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Home&lt;/li&gt;
&lt;li&gt;T.G. Halli Reservoir (33 km)&lt;/li&gt;
&lt;li&gt;Savandurga Hill (29 km)&lt;/li&gt;
&lt;li&gt;Manchanbele Dam (13 km)&lt;/li&gt;
&lt;li&gt;ISRO Deep Space Network (6 km) &lt;/li&gt;
&lt;li&gt;Dodda Alada Mara (4 km)&lt;/li&gt;
&lt;li&gt;Home (26 km)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Total Distance: 111 km &lt;/p&gt;
&lt;p&gt;I have divided the trip into three parts.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Part A - Going to Savandurga&lt;/li&gt;
&lt;li&gt;Part B - Trekking &lt;/li&gt;
&lt;li&gt;Part C - Returning&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2&gt;Part A - Going to Savandurga&lt;/h2&gt;
&lt;p&gt;This part was fairly straightforward. I left home at about 6:30. I started late because I wanted to not-cycle during the 4 hour intense heat window from 1100 hrs to 1500 hrs. &lt;/p&gt;
&lt;p&gt;After riding on the outer ring road for some time I had to take some detour because I had missed my entry to Magdi Road. Once I was on Magdi Road it was okay-ish. Magdi Road is narrow but at least the road is smooth to ride on. &lt;/p&gt;
&lt;p&gt;Once you start approaching the T.G. Halli reservoir the road begins to get really nice with curves and its just amazing to ride in these roads. Also traffic is very less.&lt;/p&gt;
&lt;p&gt;I stopped on the way many times to click photos. &lt;/p&gt;
&lt;p&gt;I reached Savandurga around 0930 hrs. This was just over 3 hours of continuous cycling. &lt;/p&gt;
&lt;p&gt;Surprisingly I met a bunch of classmates from college who were having some family festival at a temple right in the foot of the hill. They invited me to have lunch with them when I come back and also allowed to keep my bicycle in their house. This was a welcome change to the trip plan. :-)&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;Some photos&lt;/h4&gt;
&lt;p&gt;&lt;img alt="somewhere on Magdi Road" src="/assets/images/2018-04-10/A1.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="somewhere on Magdi Road" src="/assets/images/2018-04-10/A2.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="somewhere on Magdi Road" src="/assets/images/2018-04-10/A3.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Part B - Trekking&lt;/h2&gt;
&lt;p&gt;This was my first time to Savandurga so I had no idea about what to expect and what not to expect. So with a clear head I approached the base of the hill. To my surprise the hill is marked with white arrows that show you the way around the hill to the top. Even though the route was marked around the hill the climb was in no way easier. &lt;/p&gt;
&lt;p&gt;In some places the climb was as easy as walking on an inclined plane, however in some places the hill was so steep that they had to chisel away footholds on the rock so that climbing was easier. &lt;/p&gt;
&lt;p&gt;I reached the top at 1200 hrs after about 2 hours of trekking. The Manchanbele Dam reservoir was always visible in the background while climbing. The view from top was just amazing. I took a lot of photos (I wish I had a better camera :-P) from different heights while climbing. I drank a bottle of ORS and a pack of biscuits (free carbs) and some bananas during the climb. &lt;/p&gt;
&lt;p&gt;I also asked a bunch of strangers to click photos of myself (I think a total of three people and 6 photos). Meeting new people is always fun :-)&lt;/p&gt;
&lt;p&gt;During the climb I was surprised to see the local people climbing the hill barefoot. I was inspired by that and I tried climbing the hill barefoot too. It was interesting and different and painful. Once I reached the top the quickly put on my shoes for the descent back.&lt;/p&gt;
&lt;p&gt;In the top there was this woman who had come with her family and she was scared that I would jump from the edge. I heard her scream at me "come back from the edge" when I was standing a bit too close to the edge. She even asked me if I had come by myself or not. I guess people are not used to seeing people coming to Savandurga all by themselves and not jumping off the top of the hill. &lt;/p&gt;
&lt;p&gt;I stayed on top for about half an hour and started my descent back at 1230 hrs reaching the base around 1330 hours. &lt;/p&gt;
&lt;p&gt;Before starting the next leg of the trip I waited at my friends place for about 2 hours and had a delicious lunch. &lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;Some photos&lt;/h4&gt;
&lt;p&gt;&lt;img alt="on the hill" src="/assets/images/2018-04-10/B1.jpg"&gt;&lt;/p&gt;
&lt;h6&gt;This is me at the bottom of the hill. :-)&lt;/h6&gt;
&lt;p&gt;&lt;img alt="on the hill" src="/assets/images/2018-04-10/B2.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="on the hill" src="/assets/images/2018-04-10/B3.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="on the hill" src="/assets/images/2018-04-10/B4.jpg"&gt;
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4&gt;These are from the very top of the hill. :-)&lt;/h4&gt;
&lt;p&gt;&lt;img alt="on the hill" src="/assets/images/2018-04-10/Btop1.jpg"&gt;&lt;/p&gt;
&lt;h6&gt;That is the temple on the top of the hill&lt;/h6&gt;
&lt;p&gt;&lt;img alt="on the hill" src="/assets/images/2018-04-10/Btop2.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="on the hill" src="/assets/images/2018-04-10/Btop3.jpg"&gt;&lt;/p&gt;
&lt;h6&gt;That is the Manchanbele Dam reservoir in the distance&lt;/h6&gt;
&lt;hr&gt;
&lt;h2&gt;Part C - Returning&lt;/h2&gt;
&lt;p&gt;I left Savandurga around 1530 hrs and I cycled for about half an hour before I reached Manchanbele Dam. The road from Savandurga to Manchanbele dam is a very narrow single lane road with dense forests on both sides. This is by far the best road I have ever ridden on. &lt;/p&gt;
&lt;p&gt;Due to some reason the dam was not open that day, however I could still get some photos of the dam and spillway. &lt;/p&gt;
&lt;p&gt;The Dam was the lowest point of the trip and while returning and it took a lot of energy to climb back up. Sometimes I stopped and pushed the cycle up a hill (this is not cheating since there are no rules :-P ).&lt;/p&gt;
&lt;p&gt;I was enjoying the riding so I decided to skip the IDSN and Dodda Alada Mara and cycle directly to the Outer Ring Road and then follow the Outer Ring Road to my home. This is fairly uneventful but at least the road was nice. I stopped in the way to have tender coconut. These are really great fruits. :-)&lt;/p&gt;
&lt;p&gt;I reached my home at about 1800 hrs. &lt;/p&gt;
&lt;p&gt;&lt;br&gt;
&lt;img alt="on the way to Manchanbele" src="/assets/images/2018-04-10/C1.jpg"&gt;&lt;/p&gt;
&lt;h6&gt;The narrow twisty road to Manchanbele Dam. (it was really blissful)&lt;/h6&gt;
&lt;p&gt;&lt;img alt="the dam itself" src="/assets/images/2018-04-10/C2.jpg"&gt;&lt;/p&gt;
&lt;h6&gt;The Dam itself!!&lt;/h6&gt;
&lt;p&gt;&lt;img alt="the reservoir" src="/assets/images/2018-04-10/C3.jpg"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;Aftermath&lt;/h2&gt;
&lt;p&gt;Even though the trip covered somewhat less distance than my previous trips, I think this trip was lot more straining than the previous ones. &lt;/p&gt;
&lt;p&gt;I think I injured my right leg somewhere, I can not put too much pressure on it and it hurts every time I try to lift it. 
Other than that my shoulders hurt and my back hurts too. &lt;/p&gt;
&lt;p&gt;Other than this.. the trip was amazing. :-)&lt;/p&gt;</content><category term="Cycling"></category><category term="Travel"></category><category term="Trek"></category></entry><entry><title>GNU Guix - Part 1</title><link href="https://signalshore.github.io/blog/GUIX-Part-1.html" rel="alternate"></link><published>2018-03-19T00:00:00+05:30</published><updated>2018-03-19T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2018-03-19:/blog/GUIX-Part-1.html</id><summary type="html">&lt;p&gt;I was considering the idea of moving to GNU GuixSD as my full time operating system for a long time. I tried GuixSD for some time but I gave up because I was frustrated with the config system. (I was un-doubtedly stupid back then)&lt;/p&gt;
&lt;h2&gt;That was then, This is now â€¦&lt;/h2&gt;</summary><content type="html">&lt;p&gt;I was considering the idea of moving to GNU GuixSD as my full time operating system for a long time. I tried GuixSD for some time but I gave up because I was frustrated with the config system. (I was un-doubtedly stupid back then)&lt;/p&gt;
&lt;h2&gt;That was then, This is now&lt;/h2&gt;
&lt;p&gt;I have finally transitioned to using Guix full time. In fact this essay is from my GUIX system itself. In this essay I will outline &lt;strong&gt;couple&lt;/strong&gt; of things that I found to be a bit difficult for an absolute beginner and a &lt;strong&gt;lot&lt;/strong&gt; of things that I find totally awesome and exciting about GNU Guix. &lt;/p&gt;
&lt;h3&gt;What is GNU Guix ?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.gnu.org/software/guix/"&gt;GNU Guix&lt;/a&gt; is a package manager. But, make no mistake, it is not a traditional package manager. It is a package manager on steroids. I will explain what I mean by &lt;em&gt;on steroids&lt;/em&gt;. &lt;/p&gt;
&lt;p&gt;Some of the most important and most powerful features of the Guix package manager IMHO are ...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The gnu store (&lt;code&gt;/gnu/store/&lt;/code&gt;)&lt;/strong&gt; is heart of the Guix package manager. This is the directory where all the packages and profile are stored in Guix. Unlike traditional package managers where the packages are stored in either &lt;code&gt;/bin&lt;/code&gt; or &lt;code&gt;/usr/bin/&lt;/code&gt; or anything, in Guix all the packages that are installed are installed under the &lt;code&gt;/gnu/store/&lt;/code&gt; directory and the entire system is a web of symbolic links.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Per-user profiles&lt;/strong&gt; In guix packages are not installed globally. Traditionally in GNU/Linux when some package is installed it is available for use by everyone in the system with no exceptions. This makes sense because traditionally the packages are installed in the file-system itself, so there is no way of separating which user has which package. &lt;/p&gt;
&lt;p&gt;Things are quite different on the Guix Land (I apologize to the community for using &lt;em&gt;Guix Land&lt;/em&gt;(I couldn't help myself)). In Guix, packages are managed using per-user profiles. This means that every user on the system has their own profile which makes sure that they have the packages that they want to use and nothing else. This also means that in guix installing packages does not need superuser privileges, since everyone can have authority over which packages they want to use. How Guix accomplishes this by using a series of symbolic links the actual binaries which reside in the Gnu Store. So if two users have different packages then it means that they just have different symbolic links pointing to the actual binaries in the gnu store. Same goes for different users having different versions of the same package.&lt;/p&gt;
&lt;p&gt;The per-user-profiles are stored under the directory &lt;code&gt;~/.guix-profile&lt;/code&gt; &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Purely Functional&lt;/strong&gt; approach to package management. A &lt;a href="https://en.wikipedia.org/wiki/Pure_function"&gt;pure function&lt;/a&gt; is a function that produces the same output &lt;em&gt;every-time&lt;/em&gt; given the same set of arguments. Guix embraces this idea. Every package build in guix is treated as a function in which the inputs are the compiler, libraries, build scripts, etc and the output is the built package. This along with isolated build environment (I don't know much about it as I haven't had time to explore it yet) ensures that built packages are bit-identical even when they are built on different machines.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Transactional Upgrades and Rollbacks&lt;/strong&gt; Guix package upgrades are transactional in nature, this means that either the entire upgrade takes place or nothing gets upgraded so in case of a power-failure during upgrade, your system will not be left in a corrupt state. &lt;/p&gt;
&lt;p&gt;Also package upgrades, installs etc can be rolled back (yes! just like in git!!)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Guile&lt;/strong&gt; Guix is completely written in GNU Guile which is a dialect of LISP. &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There are lots of more fun stuff that I could write about but &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I haven't explored the system enough to talk about it in detail and I do not want to speculate at this point&lt;/li&gt;
&lt;li&gt;Things will get really long.. really fast&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;What is GuixSD ?&lt;/h2&gt;
&lt;p&gt;&lt;s&gt;GuixSD is the Linux Based Operating system built around the GUIX package manager.&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.gnu.org/software/guix/"&gt;GuixSD&lt;/a&gt; or the Guix System Distribution is an advanced distribution of the GNU operating system developed by the GNU Projectâ€”which respects the freedom of computer users. &lt;/p&gt;
&lt;p&gt;That is what it says on their main website. I don't know much but the core idea of GuixSD is that there should be a configuration file in which users will be able to specify the &lt;em&gt;final&lt;/em&gt; state the installed system and the installer should be intelligent enough to figure out how to do that. &lt;/p&gt;
&lt;p&gt;This is in addition to the philosophies of the GNU community and Free and Open Source Software. GuixSD runs the Libre Linux Kernel.&lt;/p&gt;
&lt;h2&gt;Installing Guix&lt;/h2&gt;
&lt;p&gt;You can follow
the
&lt;a href="https://www.gnu.org/software/guix/manual/html_node/System-Installation.html#System-Installation"&gt;instructions&lt;/a&gt; on
the main Guix page. They are quite good. Over here I will highlight
certain key ideas.&lt;/p&gt;
&lt;p&gt;The installation was quite simple actually involving 3 major steps&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Setting up Networking :&lt;/strong&gt; Once you boot into the live USB you are required to set up networking because the installation process will download the required files over the internet.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Disk Partitioning :&lt;/strong&gt; This part is actually quite tricky to get right especially if you are using a UEFI system. 
    During this step one is required to mount the target file system under /mnt and then mount the other related file-systems relative to &lt;code&gt;/mnt&lt;/code&gt;. This means that if you want to have a custom boot dir then you would have to mount it at &lt;code&gt;/mnt/boot&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;On the contrary if you are using a UEFI system then you are required to have an esp (efi system partition) and you have to mount it at &lt;code&gt;/boot/efi&lt;/code&gt;. This mount point should &lt;strong&gt;not&lt;/strong&gt; be relative. i.e. you should not mount the esp at &lt;code&gt;/mnt/boot/efi&lt;/code&gt; but instead at &lt;code&gt;/boot/efi&lt;/code&gt;. This was weird for me and this caused a lot of trouble for me.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Final installation&lt;/strong&gt; In this step we configure our system and install it.
    The guix &lt;a href="https://www.gnu.org/software/guix/manual/html_node/Using-the-Configuration-System.html#Using-the-Configuration-System"&gt;System Configuration&lt;/a&gt; is the most important thing to get right while installing Guix. This file is responsible for setting up the entire system including users, groups, and services (guix uses &lt;a href="https://www.gnu.org/software/shepherd/"&gt;Gnu Shepherd&lt;/a&gt; as the service manager)&lt;/p&gt;
&lt;p&gt;This config file is nothing but a Scheme file which is read by the Guix package manager when you are installing the system. &lt;/p&gt;
&lt;p&gt;The
&lt;a href="https://www.gnu.org/software/guix/manual/html_node/Using-the-Configuration-System.html#Using-the-Configuration-System"&gt;default configurations&lt;/a&gt; that
are provided are quite good for normal everyday use. If however you
need to use a more complex configuration you can refer
to
&lt;a href="https://gitlab.com/83bytes/guix/blob/master/myConfig.scm"&gt;my configuration&lt;/a&gt; (my
config is a dual-booted uefi setup with Arch Linux)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; In Guix if you are dual-booting please make sure that the bootloader is installed properly since if it is not, you &lt;strong&gt;CAN NOT&lt;/strong&gt; use the traditional fixes that we are used to (like bootrepair, or grub reinstall etc) because of how the GuixSD system is structured internally.&lt;/p&gt;
&lt;h2&gt;After Installation&lt;/h2&gt;
&lt;p&gt;So, installation is only half the trouble. After installation comes the important part of actually using the system. 
In this section I have put together a list of things that should be essential to a smooth start.&lt;/p&gt;
&lt;h3&gt;Per-User profile&lt;/h3&gt;
&lt;p&gt;In the previous section we talked about how you guix maintain packages on a per-user basis. One easy method to maintain per user profiles is to create a manifest file. A manifest file is a scheme file that contains all the packages for a specific user. This way you can specify only the packages that you want to be available globally in the system configuration file and other packages can be installed on a per-user basis using the manifest file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#bash&lt;/span&gt;
&lt;span class="err"&gt;$&lt;/span&gt; &lt;span class="n"&gt;guix&lt;/span&gt; &lt;span class="n"&gt;package&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;profile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;scm&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will tell guix package to install the packages from that file. &lt;/p&gt;
&lt;p&gt;Manifest file syntax:&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;use-package-modules&lt;/span&gt; &lt;span class="nv"&gt;&amp;amp;lt&lt;/span&gt;&lt;span class="c1"&gt;;module1&amp;amp;gt; &amp;amp;lt;module2&amp;amp;gt;)&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;package-&amp;amp;gt&lt;/span&gt;&lt;span class="c1"&gt;;manifest&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;list &lt;/span&gt;&lt;span class="nv"&gt;package1&lt;/span&gt;
          &lt;span class="nv"&gt;package2&lt;/span&gt;
          &lt;span class="nv"&gt;package3&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Package modules are the basically the scheme files within which each of the packages are defined. 
You can find out which package module a given package belongs to by running the &lt;code&gt;guix package -s &amp;lt;package-name&amp;gt;&lt;/code&gt; command and looking at the &lt;em&gt;location&lt;/em&gt; field.&lt;/p&gt;
&lt;p&gt;Here is &lt;a href="https://gitlab.com/83bytes/guix/blob/master/myConfig.scm"&gt;my Profile.&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;For example: this is the output of the command &lt;code&gt;guix package -s emacs-neotree&lt;/code&gt;&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;guix package -s emacs-neotree
name: emacs-neotree
version: 0.5.2
outputs: out
systems: x86_64-linux i686-linux armhf-linux aarch64-linux mips64el-linux
dependencies: 
location: gnu/packages/emacs.scm:4474:2
homepage: https://github.com/jaypei/emacs-neotree
license: GPL 3+
synopsis: Folder tree view &lt;span class="k"&gt;for &lt;/span&gt;Emacs  
description: This Emacs package provides a folder tree view.
relevance: 4
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;The file under &lt;em&gt;gnu/packages/&lt;/em&gt; is the module name.&lt;/p&gt;
&lt;h3&gt;Updating and maintaining&lt;/h3&gt;
&lt;p&gt;Updating the GuixSD done through the command &lt;code&gt;guix pull&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;guix pull will result in Guix pulling all the new changes from the repo and building them locally. This generally takes a long time. &lt;/p&gt;
&lt;p&gt;Once this is done then we can run &lt;code&gt;guix system reconfigure &amp;lt;config file&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Running &lt;code&gt;guix pull&lt;/code&gt; as a normal user will NOT habe any effect on running &lt;code&gt;guix system reconfigure&lt;/code&gt; as root&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;guix pull&lt;/code&gt; can be run as a non root user. However &lt;code&gt;guix system reconfigure&lt;/code&gt; must be run as root. Hence when you want to upgrade the system, run &lt;code&gt;guix pull&lt;/code&gt; and &lt;code&gt;guix system reconfigure&lt;/code&gt; as root. This will ensure that the whole system is upgraded at once.&lt;/p&gt;
&lt;p&gt;This command will again take the config file and reset Guix to the state described in the config file. &lt;/p&gt;
&lt;p&gt;After this we can again use &lt;code&gt;guix package -m &amp;lt;profile file&amp;gt;&lt;/code&gt; to get the updated packages into the user profile.&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;That should be it for now. I know I am not posting regularly. I was very busy recently. However things are clearing up and I think I will write another essay about Lambda Calculus and Internals of Guix very soon (not &lt;em&gt;so&lt;/em&gt; soon!!)!! &lt;/p&gt;
&lt;p&gt;:-)&lt;/p&gt;</content><category term="CS"></category><category term="Tech"></category><category term="Linux"></category></entry><entry><title>Lambda Calculus - Part 1</title><link href="https://signalshore.github.io/blog/Lambda-Calculus-Part-1.html" rel="alternate"></link><published>2018-02-17T00:00:00+05:30</published><updated>2018-02-17T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2018-02-17:/blog/Lambda-Calculus-Part-1.html</id><summary type="html">&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Lambda_calculus"&gt;Lambda Calculus&lt;/a&gt; is a beautiful thing in Computer Science. &lt;/p&gt;
&lt;p&gt;With this post I will try to motivate and inspire the beauty of Lambda Calculus and impress upon the reader the implications of it.&lt;/p&gt;
&lt;p&gt;This will just be a very very basic overview of Lambda Calculus. I can not write an â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Lambda_calculus"&gt;Lambda Calculus&lt;/a&gt; is a beautiful thing in Computer Science. &lt;/p&gt;
&lt;p&gt;With this post I will try to motivate and inspire the beauty of Lambda Calculus and impress upon the reader the implications of it.&lt;/p&gt;
&lt;p&gt;This will just be a very very basic overview of Lambda Calculus. I can not write an in-depth post because firstly I want to motivate the inspiration in the reader and secondly I have not completely understood some of the greater intricacies of Lambda Calculus.&lt;/p&gt;
&lt;h2&gt;Introduction - Lambda Calculus&lt;/h2&gt;
&lt;p&gt;To put in simply Lambda Calculus is the worlds smallest, universal programming language.&lt;/p&gt;
&lt;p&gt;Lambda Calculus is a formal system of mathematical logic that is used for expressing computation. This is a universal model of computation that can be used to encode any Turing Machine algorithm. It was first established by logician &lt;a href="https://en.wikipedia.org/wiki/Alonzo_Church"&gt;Alonzo Church&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Alan_Turing"&gt;Alan Turing&lt;/a&gt; and Alonzo Church showed that a Turing Machine and Lambda Calculus model are equally powerful models of computation. This is the famous &lt;a href="https://en.wikipedia.org/wiki/Church%E2%80%93Turing_thesis"&gt;Church-Turing thesis&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let us learn about Lambda Calculus by describing it as a programming Language that we are designing.&lt;/p&gt;
&lt;h2&gt;Building Blocks of lambda calculus.&lt;/h2&gt;
&lt;p&gt;All valid Lambda Calculus Expressions are called Lambda terms. Any valid Lambda Calculus expression can be constructed using just three building blocks. &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Variables&lt;/strong&gt; - The smallest independent entity that one can think of. This has to be valid lambda term.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;x,y,x etc are all valid Variables. A Variable does not need to mean anything. Currently the variables x,y,z mean nothing.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Method of Abstraction&lt;/strong&gt; - A way to bind lambda expression to names, so that they can be referred to easily. Lambda Calculus allows us to bind variables to expressions. This allows us to create functions in Lambda calculus. The &lt;span class="math"&gt;\(\lambda\)&lt;/span&gt; (lambda) and the /./ (dot) symbols are used to create abstraction.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\lambda\)&lt;/span&gt; x.E&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In this example the expression &lt;span class="math"&gt;\(E\)&lt;/span&gt; is bound to &lt;span class="math"&gt;\(x\)&lt;/span&gt;. This allows us apply these functions to arguments. &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Method of Application&lt;/strong&gt; - Now that we can create functions, what else can we do with them ? We can apply them. Lambda calculus allows us to apply functions to other expressions. The &lt;span class="math"&gt;\(()\)&lt;/span&gt; symbols are used to indicate applications of functions. &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://en.wikipedia.org/wiki/Lambda_calculus_definition"&gt;Mathematically&lt;/a&gt;&lt;/strong&gt;, Lambda Expressions are composed of &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;variables&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;abstraction symbols &lt;span class="math"&gt;\(\lambda\)&lt;/span&gt; and &lt;em&gt;.&lt;/em&gt; (dot)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;parenthesis &lt;span class="math"&gt;\(()\)&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A set of valid Lambda Expressions &lt;span class="math"&gt;\(\Lambda\)&lt;/span&gt; can be defined recursively as..&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;If &lt;span class="math"&gt;\(x\)&lt;/span&gt; is a variable, then &lt;span class="math"&gt;\(x \in \Lambda\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;If &lt;span class="math"&gt;\(x\)&lt;/span&gt; is a variable and &lt;span class="math"&gt;\(M \in \Lambda\)&lt;/span&gt;, then &lt;span class="math"&gt;\(( \lambda x. M ) \in \Lambda\)&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;If  &lt;span class="math"&gt;\(M, N \in \Lambda\)&lt;/span&gt;, then &lt;span class="math"&gt;\((M N) \in \Lambda\)&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Rule 2&lt;/strong&gt; represents the idea of abstraction and is called &lt;strong&gt;Lambda-abstraction&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Rule 3&lt;/strong&gt; represents the idea of application and is called &lt;strong&gt;application&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The lambda abstraction &lt;span class="math"&gt;\(\lambda x.M\)&lt;/span&gt; defines an anonymous function that takes &lt;span class="math"&gt;\(x\)&lt;/span&gt; as input argument and maps it to &lt;span class="math"&gt;\(M\)&lt;/span&gt;. Thus the function &lt;span class="math"&gt;\(f(x) = x + 1\)&lt;/span&gt; is &lt;span class="math"&gt;\(\lambda x . x + 1\)&lt;/span&gt;, where &lt;span class="math"&gt;\(M\)&lt;/span&gt; is &lt;span class="math"&gt;\(x+1\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;The application is equivalent to calling function &lt;span class="math"&gt;\(M\)&lt;/span&gt; on input &lt;span class="math"&gt;\(N\)&lt;/span&gt; i.e. &lt;span class="math"&gt;\(M(N)\)&lt;/span&gt;&lt;/p&gt;
&lt;h2&gt;How to run Lambda Calculus programs ?&lt;/h2&gt;
&lt;p&gt;Now we have seen how Lambda calculus expressions can be formed. In this section we will see how Lambda calculus expressions can be reduced. This is also equivalent to saying "How can we run lambda calculus programs ?"&lt;/p&gt;
&lt;p&gt;There are multiple reduction rules, but the most important and the most relevant one is the &lt;span class="math"&gt;\(\beta\)&lt;/span&gt;-reduction. &lt;span class="math"&gt;\(\beta\)&lt;/span&gt;-reduction is defined in terms of substitution rules. This rule captures the idea of function application. &lt;/p&gt;
&lt;p&gt;The &lt;span class="math"&gt;\(\beta\)&lt;/span&gt; reduction rule states that in an expression of the form &lt;span class="math"&gt;\((\lambda x.t)v\)&lt;/span&gt; we replace all the occurrences of &lt;span class="math"&gt;\(x\)&lt;/span&gt; in &lt;span class="math"&gt;\(t\)&lt;/span&gt; with &lt;span class="math"&gt;\(v\)&lt;/span&gt;.&lt;/p&gt;
&lt;h4&gt;Examples&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class="math"&gt;\((\lambda  x. x^2)5 \thinspace := \thinspace 5^2 \thinspace := \thinspace 25\)&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class="math"&gt;\(((\lambda x. \lambda y. x + y)\thinspace 5 \thinspace 4) \thinspace:= \thinspace 5 + 4 \thinspace := \thinspace 9\)&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Church Encoding&lt;/h2&gt;
&lt;p&gt;Now that we have a working programming language that allows us to define functions and apply functions what else can we do with this language ?&lt;/p&gt;
&lt;p&gt;We realize that to do any sort of meaningful work with this language we need to define numbers and arithmetic operations in this language.&lt;/p&gt;
&lt;p&gt;This is where Church Encoding comes into play. It is a method of encoding numbers and operations in the Lambda calculus. It is meant to illustrate that you can have mathematical operations purely in terms of functions and abstractions without defining any mathematical primitives.&lt;/p&gt;
&lt;p&gt;Under Church Encoding we have a bunch of different formats. Over here we will be discussing only two of them.&lt;/p&gt;
&lt;h2&gt;Church Numerals&lt;/h2&gt;
&lt;p&gt;The basic idea of church numerals is to use multiple applications of a function to represent numbers and the number of times the function is applied is equal the number that the lambda expression represents.&lt;/p&gt;
&lt;p&gt;Starting with the number &lt;span class="math"&gt;\(0\)&lt;/span&gt; where the function is not applied even once. We define zero as &lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(0\thinspace := \thinspace  \lambda \thinspace f. \thinspace \lambda x.\thinspace x\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(1\thinspace := \thinspace \lambda \thinspace f. \thinspace \lambda x. fx\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(2\thinspace := \thinspace \lambda \thinspace f. \thinspace \lambda x. f(fx)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;Successor Function&lt;/h3&gt;
&lt;p&gt;We define the successor function as &lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(S := \lambda n. \thinspace \lambda f.\thinspace \lambda x.\thinspace f \thinspace ( \thinspace n \thinspace f \thinspace x \thinspace )\)&lt;/span&gt; &lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;Application&lt;/h3&gt;
&lt;p&gt;Now, we can confirm the working of this setup by applying the successor function to the definition of &lt;span class="math"&gt;\(0\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(S0 := (\lambda n. \lambda f. \lambda x. f \thinspace (n \thinspace f \thinspace x))( \lambda f. \lambda x. \thinspace x)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(S0 := \lambda f. \lambda x. \thinspace f(( \lambda f. \lambda x. x) f x)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(S0 := \lambda f. \lambda x. fx\)&lt;/span&gt;, which is &lt;span class="math"&gt;\(1\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Similarly, we can define &lt;span class="math"&gt;\(2\)&lt;/span&gt; by applying the successor function to &lt;span class="math"&gt;\(0\)&lt;/span&gt; twice &lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(S2 := S(S0)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(S2 := (\lambda n. \lambda f. \lambda x. f \thinspace (n \thinspace f \thinspace x))( \lambda f. \lambda x. f \thinspace x)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(S2 := \lambda f. \lambda x. f((\lambda f. \lambda x. fx)fx)\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(S2 := \lambda f. \lambda x. f(fx)\)&lt;/span&gt;, which is &lt;span class="math"&gt;\(2\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;So, right now in this programming language we have the ability to use numbers.&lt;/p&gt;
&lt;h2&gt;Church Boolean&lt;/h2&gt;
&lt;p&gt;We can define Boolean values (True and False) quite simple using church Encoding. The way these Boolean values are defines is very intriguing.&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(T := \lambda x. \lambda y. x\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(F := \lambda x. \lambda y. y\)&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;Basically, &lt;span class="math"&gt;\(T\)&lt;/span&gt; is defined as a function that takes in two arguments and returns the first one and &lt;span class="math"&gt;\(F\)&lt;/span&gt; is defined as a function that takes in two arguments and returns the second one.&lt;/p&gt;
&lt;p&gt;What is surprising is that we can define all logical operations using a clever combination of these functions.    &lt;/p&gt;
&lt;h3&gt;Boolean Operations&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\wedge := \lambda x. \lambda y. x y (\lambda u. \lambda v. v) := \lambda x. \lambda y. x y F\)&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\wedge M N := (\lambda x. \lambda y. x y F) M N := M N F\)&lt;/span&gt;
&lt;hr&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\vee := \lambda x. \lambda y. x (\lambda u. \lambda v. u) y := \lambda x. \lambda y. x T y\)&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\vee M N := (\lambda x. \lambda y. x T y) M N := M T N\)&lt;/span&gt;
&lt;hr&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;span class="math"&gt;\(\neg := \lambda x. x (\lambda u. \lambda v. v) (\lambda p. \lambda q. p) := \lambda x. x F T\)&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class="math"&gt;\(\neg M := (\lambda x. x F T)M := M F T\)&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;br&gt;
In the previous equations replace &lt;span class="math"&gt;\(M\)&lt;/span&gt; and &lt;span class="math"&gt;\(N\)&lt;/span&gt; with any Boolean you want (either &lt;span class="math"&gt;\(T\)&lt;/span&gt; or &lt;span class="math"&gt;\(F\)&lt;/span&gt;) and then evaluate the resulting expression. &lt;/p&gt;
&lt;p&gt;For Example for the equation 1. we can have &lt;span class="math"&gt;\(M = T\)&lt;/span&gt; and &lt;span class="math"&gt;\(N = F\)&lt;/span&gt;, which makes the equation&lt;/p&gt;
&lt;p&gt;&lt;span class="math"&gt;\(M N F := T F F := (\lambda x. \lambda y. x) F F := F\)&lt;/span&gt; &lt;em&gt;(because T takes in two inputs and chooses the first one)&lt;/em&gt; &lt;/p&gt;
&lt;p&gt;Thus an &lt;span class="math"&gt;\(AND\)&lt;/span&gt; operation on &lt;span class="math"&gt;\(T\)&lt;/span&gt; and &lt;span class="math"&gt;\(F\)&lt;/span&gt; is &lt;span class="math"&gt;\(F\)&lt;/span&gt;. &lt;/p&gt;
&lt;p&gt;The same can be shows for the rest also.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;New posts should be up &lt;em&gt;not-so-shortly&lt;/em&gt;. In that I will explore each aspect of Lambda Calculus in more detail.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="CS"></category></entry><entry><title>FSMK Winter Camp, Hassan</title><link href="https://signalshore.github.io/blog/FSMK-Winter-Camp.html" rel="alternate"></link><published>2018-02-16T00:00:00+05:30</published><updated>2018-02-16T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2018-02-16:/blog/FSMK-Winter-Camp.html</id><summary type="html">&lt;p&gt;&lt;a href="https://fsmk.org/"&gt;Free Software Movement Karnataka (FSMK)&lt;/a&gt; conducted
a winter camp
at &lt;a href="http://rithassan.org/"&gt;Rajeev Institute of Technology&lt;/a&gt;, Hassan
from 22nd January to 27th January.&lt;/p&gt;
&lt;p&gt;It was a 6 day camp for the the participants with 2 days dedicated to
volunteer training before the camp. In this camp we had three
different areas of â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://fsmk.org/"&gt;Free Software Movement Karnataka (FSMK)&lt;/a&gt; conducted
a winter camp
at &lt;a href="http://rithassan.org/"&gt;Rajeev Institute of Technology&lt;/a&gt;, Hassan
from 22nd January to 27th January.&lt;/p&gt;
&lt;p&gt;It was a 6 day camp for the the participants with 2 days dedicated to
volunteer training before the camp. In this camp we had three
different areas of CS that we were focusing on viz. Web Development
using Ruby on Rails, Android Development and IoT. This camp was
organized by the Hassan level regional glugs of FSMK.&lt;/p&gt;
&lt;p&gt;I volunteered for IoT track because I have no interest in Web
Development and Android Development. Apart from this the main speaker
for the hardware track
was &lt;a href="https://cosmobird.github.io"&gt;Ganesh (cosmobird)&lt;/a&gt;. He has been a
great source of inspiration to me ever since I met him for the first
time in camp 2016. Moreover hardware and electronics are something
that I love to read about but I was never too &lt;em&gt;hands-on&lt;/em&gt; with and I
wanted o remedy that.&lt;/p&gt;
&lt;h2&gt;The IoT track&lt;/h2&gt;
&lt;p&gt;The IoT track was mind-blowing. We were using NodeMCU chips as the
basic hardware for this track. The main syllabus of the track focused
on creating a weather station along with Mesh Networks and Software
Defined Radio. In fact Ganesh and his friends (Niranjan and Mugilan)
gave the participants a live demonstration of Software Defined Radio
with an RTL-SDR chip.&lt;/p&gt;
&lt;p&gt;Fun-Fact: I was given the responsibility (read: volunteered) to
procure some of the hardware for the IoT participant kits that we were
supposed to give to the students. We had ordered 45 Kits. Apart from
getting the equipment it was also my responsibility to check if all
the NodeMCUs were working or not. This was the most fun part of the
whole exercise. I ended up making a temporary production line sort of
thing so as to optimize my testing and packing routine. :-P&lt;/p&gt;
&lt;p&gt;&lt;img alt="Iot" src="/assets/images/2018-02-16/iot.jpg"&gt;&lt;/p&gt;
&lt;h6&gt;Iot team (some are missing, some are extra)&lt;/h6&gt;
&lt;h2&gt;Being a speaker&lt;/h2&gt;
&lt;p&gt;I was a speaker at this camp. This was the most scary part for me. I
had never spoken at such an event before.&lt;/p&gt;
&lt;p&gt;Being a speaker in this camp was admittedly a new, scary and
profoundly educational experience for me. &lt;/p&gt;
&lt;p&gt;My session was the introductory session (the &lt;em&gt;hello-world&lt;/em&gt; into
NodeMCU programming).  The &lt;em&gt;hello-world&lt;/em&gt; involved getting the
participants' laptops to boot with the LIVE OS (Fedora) and then
connecting the NodeMCU and the pushing the first code into it.&lt;/p&gt;
&lt;p&gt;Just to keep things a bit funny and interesting I threw in an arduino
joke.  While introducing the participants about the function
&lt;em&gt;digitalWrite(PIN, MODE)&lt;/em&gt;. I said&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;With digitalWrite you can set a specific pin to be either HIGH or sober.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h6&gt;did you see what I did there ?? :-P&lt;/h6&gt;
&lt;p&gt;This cracked up all the stoners in the group. &lt;/p&gt;
&lt;p&gt;Being a speaker I realized that I do like teaching and that I am quite
good at it. Even though I was very scared of taking the session I was
surprised when people started to tell me that I was a good speaker and
that they enjoyed my session very much. This gave me a much needed
boost.&lt;/p&gt;
&lt;p&gt;Other than that I was also a volunteer every volunteer was assigned a
group of 5 people. My group was amazing. My group was self-sufficient
in a way, other than any super-complicated issue the group had learnt
to help themselves out. This often meant that someone in the group who
had the problem figured out would help out the rest pf the people. I
am so proud of them. :')&lt;/p&gt;
&lt;h2&gt;Getting out of my comfort zone&lt;/h2&gt;
&lt;p&gt;I DO NOT dance, because I am terrible at it and I do not want to kill
a human being who witnesses that. But, in this camp I did something
that I do no think I would have ever done. During the &lt;em&gt;Ethnic Day&lt;/em&gt; at
camp we had a cultural program and I along with some other friends
went up to the stage during a weird flash-mob kind of scenario and
danced (those who were present will tell you that I was just moving
back and forth with a very low frequency but I call it
dancing. :-P). This was the first time I did something like this and
it was an interesting experience.&lt;/p&gt;
&lt;h2&gt;The power of the community&lt;/h2&gt;
&lt;p&gt;Sometime during the culturals the power went out in the auditorium
went out during a dance performance by some of the participants. What
happened next was that the entire audience broke out their mobile
phones and switched on their flashlights and pointed it towards the
stage. It was a beautiful moment. It made me realize that as long as
we are united, we can do anything we want to and nothing is
impossible.&lt;/p&gt;
&lt;p&gt;&lt;img alt="lights!!" src="/assets/images/2018-02-16/light.jpg"&gt;&lt;/p&gt;
&lt;h6&gt;People holding up lights!!&lt;/h6&gt;
&lt;h2&gt;Meeting new people&lt;/h2&gt;
&lt;p&gt;Meeting new people is always fun and I really enjoy meeting new
people. This was something that I was actively looking forward to
during this camp.&lt;/p&gt;
&lt;p&gt;Compared to camp 2016 I have grown up a lot; from being a person who
used to be shit-scared of meeting new people I have become this person
who actually enjoys meeting new people and is also a fun person to be
around(I've been told that I should stop the dead-baby jokes though!
:-P).&lt;/p&gt;
&lt;p&gt;In camp I also met two people who said that they liked my blog. This
&lt;strong&gt;was&lt;/strong&gt; so amazing to hear. I gave me such intense happiness to know
that someone actually reads what I like and that they also enjoy it
and have been motivated by it.&lt;/p&gt;
&lt;p&gt;I also met Nithin who is also into the same topics of CS that I am
into viz. Functional Programming, Programming Language Theory and
Category Theory. Me and him, we talked a lot about Functional
Programming and Compiler Designs. Also Nithin is working with a team
that designs a compiler at National Instruments. So, meeting Nithin
was really awesome because I got to meet a real-life compiler
designer.  :-)&lt;/p&gt;
&lt;p&gt;I met a bunch of people from the Open-Hardware
GLUG &lt;a href="geon.fsmk.org"&gt;GEON&lt;/a&gt;. This the Government Engineering College
Glug. I am not too good with the details. However, these people are
really good with hardware and localization. They have done some amazing &lt;a href="https://geongech.wordpress.com/2017/11/15/not-a-days-work/"&gt;work on localization&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Since I mentioned localization I think I should mention the work Rizma
and her team did with respect
to &lt;a href="https://gitlab.com/Frogster/Namma-Fedora"&gt;Namma-Fedora&lt;/a&gt;. In this
project they have localized most of the Fedora Xfce Desktop
environment. I have seen it running and its amazing.&lt;/p&gt;
&lt;p&gt;Meeting new people is always inspiring.&lt;/p&gt;
&lt;h2&gt;Food&lt;/h2&gt;
&lt;p&gt;Anyone who knows me knows that I do not care much about food. I am a
flexitarian, which means that I really don't care about the food as
long as it is edible.&lt;/p&gt;
&lt;p&gt;I really enjoy serving food in these community
events and so even in this camp I took up the responsibility of
serving food whenever I could. I like doing this because this means
that I can interact with everyone even if it is for a short time. I
also threw in some weird pleasantries like "happy lunching" and so
on! :-P&lt;/p&gt;
&lt;p&gt;&lt;img alt="people serving breakfast" src="/assets/images/2018-02-16/food.jpg"&gt;&lt;/p&gt;
&lt;h6&gt;People serving breakfast&lt;/h6&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;I think I have covered everything that I wanted to. If not I think I
will add/edit something later on.&lt;/p&gt;
&lt;p&gt;Group photo at the end of the camp.
&lt;img alt="group pic" src="/assets/images/2018-02-16/group.jpg"&gt;&lt;/p&gt;</content><category term="Misc"></category><category term="Work"></category></entry><entry><title>Scheme - Part 4 - Higher Order Procedures (contd.)</title><link href="https://signalshore.github.io/blog/Scheme-Part-4.html" rel="alternate"></link><published>2018-02-06T00:00:00+05:30</published><updated>2018-02-06T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2018-02-06:/blog/Scheme-Part-4.html</id><summary type="html">&lt;h4&gt;Recap&lt;/h4&gt;
&lt;p&gt;In the previous post we talked about the first part of what it means to be a Higher-Order Function.&lt;/p&gt;
&lt;p&gt;In this post we will talk about the second part of that idea. And, we will explore Higher-Order functions and First Class Functions/Citizens. &lt;/p&gt;
&lt;h3&gt;Procedures as returned values&lt;/h3&gt;
&lt;p&gt;In Scheme â€¦&lt;/p&gt;</summary><content type="html">&lt;h4&gt;Recap&lt;/h4&gt;
&lt;p&gt;In the previous post we talked about the first part of what it means to be a Higher-Order Function.&lt;/p&gt;
&lt;p&gt;In this post we will talk about the second part of that idea. And, we will explore Higher-Order functions and First Class Functions/Citizens. &lt;/p&gt;
&lt;h3&gt;Procedures as returned values&lt;/h3&gt;
&lt;p&gt;In Scheme procedures can be returned from other procedures. In the
world of procedures that can manipulate other procedures this is the
other side of the same coin. If we have procedures that can accept
other procedures as arguments; then it makes logical sense to have
procedures that can return other procedures as well. &lt;/p&gt;
&lt;p&gt;In Scheme we can have procedures that return other procedures as their output. This has very interesting effects both from a programming language perspective and a mathematical perspective. &lt;/p&gt;
&lt;p&gt;We will look at them, But before that we need to read a bit of literature.&lt;/p&gt;
&lt;h3&gt;First Class Functions and Higher Order Function&lt;/h3&gt;
&lt;p&gt;The term First Class Functions is used only in a programming language context.&lt;/p&gt;
&lt;p&gt;A programming language supports first class functions if it treats
functions
as
&lt;a href="https://en.wikipedia.org/wiki/First-class_citizen"&gt;first class citizens&lt;/a&gt;. First
class citizens are those entities that supports all the operations
generally available to other entities in that programming
language. These operations typically include being passed as a
variable, being returned from a function, being assigned to a
variable, etc.&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;What does this mean for programming languages ?&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;This means that for a programming language to support &lt;a href="https://en.wikipedia.org/wiki/First-class_function"&gt;first class functions&lt;/a&gt; it should allow functions to be passed as arguments to other functions, functions to be returned from other functions and functions to be stored in variables or any suitable data-structures.&lt;/p&gt;
&lt;p&gt;It should be noted that First-class function is not an attribute of any function in a language. Rather, it the attribute of the programming language itself.&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;What is the deal with Higher-Order Functions ?&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Higher-order_function"&gt;Higher-Order functions&lt;/a&gt; are not limited to programming languages. This concept covers functions in a much more general and mathematical sense. The idea is that Higher-Order Functions accepts other functions as arguments, and can returns functions as results. &lt;/p&gt;
&lt;p&gt;The differential function in mathematics is an example of Higher-Order Function. It accepts a function as its input and returns the derivative of that function which is also a function. &lt;/p&gt;
&lt;div class="math"&gt;$$ d(f(x)) / dx = f'(x)$$&lt;/div&gt;
&lt;p&gt;In this equation the differential operator accepts the function &lt;span class="math"&gt;\(f(x)\)&lt;/span&gt; as an argument and the result of the operation is &lt;span class="math"&gt;\(f'(x)\)&lt;/span&gt;. &lt;/p&gt;
&lt;p&gt;From a programming language perspective we can see multiple examples of higher order functions. A very common example is the &lt;code&gt;map&lt;/code&gt; function in python.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;lists&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;sqrr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="nb"&gt;list&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sqrr&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;lists&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;&lt;em&gt;&lt;a href="https://docs.python.org/3.5/library/functions.html#map"&gt;map&lt;/a&gt;&lt;/em&gt; takes a function and a list of elements and it returns a list with the function applied to all the elements of the input list.&lt;/p&gt;
&lt;p&gt;Alright now that we have covered some literature, let's dive in...&lt;/p&gt;
&lt;h3&gt;Let's Dive In&lt;/h3&gt;
&lt;h3&gt;&lt;strong&gt;Lambdas&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;Scheme offers a special form that allows us to create procedures. Lambdas in Scheme lets us create anonymous procedures i.e. procedures without any names. This might not seem like a very big and special thing, but this is exactly what gives Scheme (and other similar programming languages)so much power.&lt;/p&gt;
&lt;p&gt;To illustrate this concept we will write some procedures. Recall that procedures in Scheme are written using &lt;code&gt;define&lt;/code&gt;.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;summ-old&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="nv"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;+ &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="nv"&gt;y&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;summ-old&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;This same procedure can be written using lambdas like so ...&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="nv"&gt;summ&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;x&lt;/span&gt; &lt;span class="nv"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;+ &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="nv"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;summ&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Basically a lambda is used to create procedures the same way define is used, but with lambda no name of the procedure is mentioned. 
The syntax of lambdas is &lt;/p&gt;
&lt;p&gt;&lt;code&gt;(lambda (&amp;lt;formal_parameters) (body))&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;These are very useful in cases where we do not require naming a procedure because that procedure will be used only once. 
Such a definition looks like this ..&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="k"&gt;lambda &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;x&lt;/span&gt; &lt;span class="nv"&gt;y&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;+ &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="nv"&gt;y&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; 
  &lt;span class="mi"&gt;3&lt;/span&gt;
  &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h4&gt;&lt;strong&gt;Returning Procedures&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;In Scheme we can use lambdas to create procedures that return other procedures.&lt;/p&gt;
&lt;p&gt;Let us illustrate this idea with some examples.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;adder&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;+ &lt;/span&gt;&lt;span class="nv"&gt;m&lt;/span&gt;  &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;In this example we have a procedure &lt;em&gt;adder&lt;/em&gt; that accepts an argument and returns another procedure (that is what the lambda does) that accepts another parameter and returns the sum of the two numbers.&lt;/p&gt;
&lt;p&gt;We can eliminate the first parameter altogether also. Such a function would look like this&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="nv"&gt;adder-2&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;lambda &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;m&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;+ &lt;/span&gt;&lt;span class="nv"&gt;m&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;The procedure &lt;em&gt;adder-2&lt;/em&gt; returns a procedure that accepts an argument and returns another procedure that accepts an argument and returns the sum of these two arguments.&lt;/p&gt;
&lt;p&gt;If all this sounds too complex do not worry! How we go about applying these two procedures to operands should make things a lot clearer.&lt;/p&gt;
&lt;p&gt;For applying &lt;em&gt;adder&lt;/em&gt; the thing that we should keep in mind is that &lt;em&gt;adder&lt;/em&gt;  returns a function that needs an argument. &lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nf"&gt;adder&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;It is quite easy to see what is going on here. Let us assume that the inner set of parenthesis is evaluated to a procedure &lt;em&gt;f&lt;/em&gt; so after the first set of evaluation the statement should look like this &lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;f&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;and the resulting output should be 15. &lt;/p&gt;
&lt;p&gt;This is also true for the &lt;em&gt;adder-2&lt;/em&gt; procedure. &lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nf"&gt;adder-2&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;The &lt;em&gt;adder-2&lt;/em&gt; procedure returns a procedure that accepts 5 as an argument and then returns a procedure that accepts 10 as an argument.&lt;/p&gt;
&lt;p&gt;This lets us do all sorts of interesting things with these functions. For example we can chain them together to add more than two numbers.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nf"&gt;adder&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nf"&gt;adder&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nf"&gt;adder-2&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="nf"&gt;adder-2&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Both of these procedures return 15.&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;Some practical uses of lambdas&lt;/strong&gt;&lt;/h4&gt;
&lt;p&gt;Lambdas can be very useful when you need to write a procedure but there is no need to name the procedure. Situations where you will not be calling the procedure suing the name in any scenario whatsoever. &lt;/p&gt;
&lt;p&gt;Personally I have a lambda function written in my Emacs config file that opens my To-Do list everytime I press F6 on my keyboard. I did not write this function; I just copied it from some answer on Stack Overflow, but nevertheless it is a good start.&lt;/p&gt;
&lt;p&gt;This is the function.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;global-set-key&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;kbd&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;amp;lt;f6&amp;amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;lambda&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;interactive&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="nf"&gt;find-file&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;path/to/file.org&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;h3&gt;now ...&lt;/h3&gt;
&lt;p&gt;This marks the end of the first chapter of the book. I will continue with more posts when I find something interesting (which should be often :-P).&lt;/p&gt;
&lt;p&gt;Apart from that I have planned to write about Lambda Calculus and that should be up within this month.&lt;/p&gt;
&lt;p&gt;This is my last semester in college so things are a bit hectic, so delays should be expected. &lt;/p&gt;
&lt;p&gt;I went to FSMK camp 2018 last week and I met a couple of my readers. That was fun. :-) (and cheers to you people!!)&lt;/p&gt;
&lt;p&gt;That is it!! (for now)&lt;/p&gt;
&lt;p&gt;p.s. The code for this post can be found &lt;a href="/assets/files/scheme-4.scm"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="CS"></category><category term="Scheme"></category></entry><entry><title>Open Access</title><link href="https://signalshore.github.io/blog/Open-Access.html" rel="alternate"></link><published>2018-02-01T00:00:00+05:30</published><updated>2018-02-01T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2018-02-01:/blog/Open-Access.html</id><summary type="html">&lt;h2&gt;What is Open Access ?&lt;/h2&gt;
&lt;p&gt;According to &lt;a href="https://en.wikipedia.org/wiki/Open_access"&gt;Wikipedia&lt;/a&gt;
Open access refers to online research outputs that are free of all
restrictions on access (e.g. access tolls) and free of many
restrictions on use. &lt;/p&gt;
&lt;p&gt;In simple terms Open Access means free information for all. It means
that anyone irrespective of their â€¦&lt;/p&gt;</summary><content type="html">&lt;h2&gt;What is Open Access ?&lt;/h2&gt;
&lt;p&gt;According to &lt;a href="https://en.wikipedia.org/wiki/Open_access"&gt;Wikipedia&lt;/a&gt;
Open access refers to online research outputs that are free of all
restrictions on access (e.g. access tolls) and free of many
restrictions on use. &lt;/p&gt;
&lt;p&gt;In simple terms Open Access means free information for all. It means
that anyone irrespective of their circumstances can have access to
knowledge in the form of high quality peer-reviewed research papers.&lt;/p&gt;
&lt;p&gt;I think that scientific research should be in the public domain, that
anyone should be able to look up the results of any scientific
research they want to. Scientific research is not meant to be locked
up, it is meant to be free. Locking up scientific research only serves
the financial interests of the organizations that benefit from their sales.&lt;/p&gt;
&lt;h2&gt;Why it matters ?&lt;/h2&gt;
&lt;p&gt;It matters because information should be free for all. It should not
come with prerequisite conditions for access (which in this case
happens to be money). Also in this system it is the financially weak
who are denied the access to information. Is that the kind of world we
are building ? A world where information belongs to those who can
afford to pay for it. Personally I am not okay with that kind of a
system.&lt;/p&gt;
&lt;p&gt;There have been people better than myself who have laid the
foundations. I will point in their direction and hope that someone
reading this blog will be enlightened.&lt;/p&gt;
&lt;p&gt;How about we read two such brilliant pieces by them...&lt;/p&gt;
&lt;h1&gt;1. &lt;a href="https://en.wikisource.org/wiki/Guerilla_Open_Access_Manifesto"&gt;The Guerilla Open Access Manifesto&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;em&gt;Information is power. But like all power, there are those who want to keep it for themselves. The world's entire scientific and cultural heritage, published over centuries in books and journals, is increasingly being digitized and locked up by a handful of private corporations. Want to read the papers featuring the most famous results of the sciences? You'll need to send enormous amounts to publishers like Reed Elsevier.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;There are those struggling to change this. The Open Access Movement has fought valiantly to ensure that scientists do not sign their copyrights away but instead ensure their work is published on the Internet, under terms that allow anyone to access it. But even under the best scenarios, their work will only apply to things published in the future. Everything up until now will have been lost.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;That is too high a price to pay. Forcing academics to pay money to read the work of their colleagues? Scanning entire libraries but only allowing the folks at Google to read them? Providing scientific articles to those at elite universities in the First World, but not to children in the Global South? It's outrageous and unacceptable.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;"I agree," many say, "but what can we do? The companies hold the copyrights, they make enormous amounts of money by charging for access, and it's perfectly legal â€” there's nothing we can do to stop them." But there is something we can, something that's already being done: we can fight back.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Those with access to these resources â€” students, librarians, scientists â€” you have been given a privilege. You get to feed at this banquet of knowledge while the rest of the world is locked out. But you need not â€” indeed, morally, you cannot â€” keep this privilege for yourselves. You have a duty to share it with the world. And you have: trading passwords with colleagues, filling download requests for friends.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Meanwhile, those who have been locked out are not standing idly by. You have been sneaking through holes and climbing over fences, liberating the information locked up by the publishers and sharing them with your friends.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;But all of this action goes on in the dark, hidden underground. It's called stealing or piracy, as if sharing a wealth of knowledge were the moral equivalent of plundering a ship and murdering its crew. But sharing isn't immoral â€” it's a moral imperative. Only those blinded by greed would refuse to let a friend make a copy.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Large corporations, of course, are blinded by greed. The laws under which they operate require it â€” their shareholders would revolt at anything less. And the politicians they have bought off back them, passing laws giving them the exclusive power to decide who can make copies.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;There is no justice in following unjust laws. It's time to come into the light and, in the grand tradition of civil disobedience, declare our opposition to this private theft of public culture.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We need to take information, wherever it is stored, make our copies and share them with the world. We need to take stuff that's out of copyright and add it to the archive. We need to buy secret databases and put them on the Web. We need to download scientific journals and upload them to file sharing networks. We need to fight for Guerilla Open Access.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;With enough of us, around the world, we'll not just send a strong message opposing the privatization of knowledge â€” we'll make it a thing of the past. Will you join us?&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Aaron Swartz&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;July 2008, Eremo, Italy&lt;/em&gt;&lt;/p&gt;
&lt;h1&gt;2. &lt;a href="http://custodians.online/"&gt;Custodians Online&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;In solidarity with &lt;a href="http://libgen.io/"&gt;Library Genesis&lt;/a&gt; and Sci-Hub.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;In Antoine de Saint ExupÃ©ry's tale the Little Prince meets a businessman who accumulates stars with the sole purpose of being able to buy more stars. The Little Prince is perplexed. He owns only a flower, which he waters every day. Three volcanoes, which he cleans every week. "It is of some use to my volcanoes, and it is of some use to my flower, that I own them," he says, "but you are of no use to the stars that you own".&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;There are many businessmen who own knowledge today. Consider Elsevier, the largest scholarly publisher, whose 37% profit margin1 stands in sharp contrast to the rising fees, expanding student loan debt and poverty-level wages for adjunct faculty. Elsevier owns some of the largest databases of academic material, which are licensed at prices so scandalously high that even Harvard, the richest university of the global north, has complained that it cannot afford them any longer. Robert Darnton, the past director of Harvard Library, says "We faculty do the research, write the papers, referee papers by other researchers, serve on editorial boards, all of it for free â€¦ and then we buy back the results of our labour at outrageous prices."2 For all the work supported by public money benefiting scholarly publishers, particularly the peer review that grounds their legitimacy, journal articles are priced such that they prohibit access to science to many academics - and all non-academics - across the world, and render it a token of privilege.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Elsevier has recently filed a copyright infringement suit in New York against Science Hub and Library Genesis claiming millions of dollars in damages. This has come as a big blow, not just to the administrators of the websites but also to thousands of researchers around the world for whom these sites are the only viable source of academic materials. The social media, mailing lists and IRC channels have been filled with their distress messages, desperately seeking articles and publications.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Even as the New York District Court was delivering its injunction, news came of the entire editorial board of highly-esteemed journal Lingua handing in their collective resignation, citing as their reason the refusal by Elsevier to go open access and give up on the high fees it charges to authors and their academic institutions. As we write these lines, a petition is doing the rounds demanding that Taylor &amp;amp; Francis doesn't shut down Ashgate, a formerly independent humanities publisher that it acquired earlier in 2015. It is threatened to go the way of other small publishers that are being rolled over by the growing monopoly and concentration in the publishing market. These are just some of the signs that the system is broken. It devalues us, authors, editors and readers alike. It parasites on our labor, it thwarts our service to the public, it denies us access.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We have the means and methods to make knowledge accessible to everyone, with no economic barrier to access and at a much lower cost to society. But closed accessâ€™s monopoly over academic publishing, its spectacular profits and its central role in the allocation of academic prestige trump the public interest. Commercial publishers effectively impede open access, criminalize us, prosecute our heroes and heroines, and destroy our libraries, again and again. Before Science Hub and Library Genesis there was Library.nu or Gigapedia; before Gigapedia there was textz.com; before textz.com there was little; and before there was little there was nothing. That's what they want: to reduce most of us back to nothing. And they have the full support of the courts and law to do exactly that.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;In Elsevier's case against Sci-Hub and Library Genesis, the judge said: "simply making copyrighted content available for free via a foreign website, disserves the public interest"8. Alexandra Elbakyan's original plea put the stakes much higher: "If Elsevier manages to shut down our projects or force them into the darknet, that will demonstrate an important idea: that the public does not have the right to knowledge."&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We demonstrate daily, and on a massive scale, that the system is broken. We share our writing secretly behind the backs of our publishers, circumvent paywalls to access articles and publications, digitize and upload books to libraries. This is the other side of 37% profit margins: our knowledge commons grows in the fault lines of a broken system. We are all custodians of knowledge, custodians of the same infrastructures that we depend on for producing knowledge, custodians of our fertile but fragile commons. To be a custodian is, de facto, to download, to share, to read, to write, to review, to edit, to digitize, to archive, to maintain libraries, to make them accessible. It is to be of use to, not to make property of, our knowledge commons.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;More than seven years ago Aaron Swartz, who spared no risk in standing up for what we here urge you to stand up for too, wrote: "We need to take information, wherever it is stored, make our copies and share them with the world. We need to take stuff that's out of copyright and add it to the archive. We need to buy secret databases and put them on the Web. We need to download scientific journals and upload them to file sharing networks. We need to fight for Guerilla Open Access. With enough of us, around the world, we'll not just send a strong message opposing the privatization of knowledge â€” we'll make it a thing of the past. Will you join us?"&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;We find ourselves at a decisive moment. This is the time to recognize that the very existence of our massive knowledge commons is an act of collective civil disobedience. It is the time to emerge from hiding and put our names behind this act of resistance. You may feel isolated, but there are many of us. The anger, desperation and fear of losing our library infrastructures, voiced across the internet, tell us that. This is the time for us custodians, being dogs, humans or cyborgs, with our names, nicknames and pseudonyms, to raise our voices.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Share this letter - read it in public - leave it in the printer. Share your writing - digitize a book - upload your files. Don't let our knowledge be crushed. Care for the libraries - care for the metadata - care for the backup. Water the flowers - clean the volcanoes.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;30 November 2015&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;DuÅ¡an Barok, Josephine Berry, BodÃ³ BalÃ¡zs, Sean Dockray, Kenneth Goldsmith, Anthony Iles, Lawrence Liang, Sebastian LÃ¼tgert, Pauline van Mourik Broekman, Marcell Mars, spideralex, Tomislav Medak, Dubravka SekuliÄ‡, Femke Snelting...&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;If you need to download a Scientific Paper; visit &lt;a href="http://sci-hub.hk"&gt;Sci-Hub&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you need books, visit &lt;a href="http://bookfi.net"&gt;BookFI&lt;/a&gt; and &lt;a href="http://libgen.io"&gt;libgen&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;If you come across a book that is not on libgen, digitize it and upload it on libgen.&lt;/p&gt;
&lt;p&gt;Watch the movie &lt;a href="http://www.imdb.com/title/tt3268458/"&gt;The Internet's Own Boy: The Story of Aaron Swartz&lt;/a&gt;. Download it and keep sharing it. &lt;/p&gt;
&lt;p&gt;Read the Open Access Manifesto in University gatherings.&lt;/p&gt;
&lt;p&gt;Spread the love.&lt;/p&gt;
&lt;p&gt;Knowledge should be free.&lt;/p&gt;
&lt;p&gt;Let's keep it that way!!&lt;/p&gt;</content><category term="Activism"></category></entry><entry><title>The Emacs Way</title><link href="https://signalshore.github.io/blog/Emacs.html" rel="alternate"></link><published>2018-01-17T00:00:00+05:30</published><updated>2018-01-17T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2018-01-17:/blog/Emacs.html</id><summary type="html">&lt;h3&gt;Starting out with Emacs&lt;/h3&gt;
&lt;p&gt;Like any other person who uses Linux I too started out by using vim as
my default text editor. This was a time when I did not know the
amazing world of vim plugins. It was a good journey for a while and
over time my â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Starting out with Emacs&lt;/h3&gt;
&lt;p&gt;Like any other person who uses Linux I too started out by using vim as
my default text editor. This was a time when I did not know the
amazing world of vim plugins. It was a good journey for a while and
over time my vim config grew up to a point where it was the perfect
setup.&lt;/p&gt;
&lt;p&gt;Then, I discovered Emacs and I moved to Emacs. In the previous
sentence using the work "discovered" is wrong because I did not
"discover" it in the strictest sense of the word. I started using
Emacs because someone (this person is an Emacs and Scheme veteran
(actually a LISP)) told me that the best IDE for learning Scheme is to
use Emacs. Over time I found Emacs to be the most perfect piece of
software that you could possibly want.&lt;/p&gt;
&lt;h3&gt;What is Emacs ?&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://www.gnu.org/software/emacs/"&gt;Emacs&lt;/a&gt; is
marketed as a Text Editor which is a huge oversimplification of what
Emacs actually is.&lt;/p&gt;
&lt;p&gt;Let me tell you what Emacs really is. The standard version of Emacs
&lt;em&gt;without&lt;/em&gt; any extra plugins comes with a text-editor, an interpreter
(for Emacs-Lisp), a package manager (for Emacs), a Planner (org-mode),
a Calendar, a File manager, and a mail/news reader all rolled into one
eco-system. At a fundamental level Emacs is an interpreter for
Emacs-Lisp, all of these goodness comes from the awesomeness of LISP
(or eLISP in this case).&lt;/p&gt;
&lt;p&gt;I am unable to form sentences about stuff I wanna say and I really
like lists. So, I will list out stuff and go on explaining them.&lt;/p&gt;
&lt;p&gt;This is a list of the reasons why I like Emacs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Config&lt;/strong&gt; : The Emacs config is just a eLisp script. This enables
  it to be loaded dynamically and the changes also reflect dynamically
  without having to restart the application. A configuration written
  in eLisp means that you do not have to learn some weird brain-dead
  language just to configure a text editor (I'm looking
  at
  &lt;a href="https://en.wikipedia.org/wiki/Vim_(text_editor)#Vim_script"&gt;Vim script&lt;/a&gt;).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://en.wikipedia.org/wiki/Literate_programming"&gt;Literate Programming&lt;/a&gt;&lt;/strong&gt; :
  By default the Emacs configuration file &lt;em&gt;init.el&lt;/em&gt; to store the Emacs
  config. This becomes messy as after some time you end up with a
  mess. Thus I decided that it would be a good idea to store the user
  config is a separate file and have Emacs generate the actual
  configuration from it . So I write my config in an Org-mode file and
  I let Emacs handle the
  rest. &lt;a href="https://gitlab.com/83bytes/emacs-config"&gt;This&lt;/a&gt; is where I
  have uploaded my Emacs config. The file &lt;em&gt;init.el&lt;/em&gt; is the default
  Emacs config file. I write my config in the &lt;em&gt;config.org&lt;/em&gt; file and
  Emacs generates the file &lt;em&gt;config.el&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.emacswiki.org/emacs/Evil"&gt;Evil&lt;/a&gt;&lt;/strong&gt; : This mode allows me
  to use vim key-bindings. Thus I did not have to retrain the muscle
  memory to learn Emacs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://magit.vc/"&gt;Magit&lt;/a&gt;&lt;/strong&gt; : Used to manage git repos. Magit is
  a Git porcelain. It exposes a lot of gits high level functionality
  through a very easy to use interface. The best thing that magit did
  for me was that it got in the habit of staging only certain files or
  sometimes even parts of a file really easily. Also magit logs are so
  much better than git log&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://orgmode.org/"&gt;Org-mode&lt;/a&gt;&lt;/strong&gt; : This mode is just
  phenomenal. It is a mode where Emacs does incredibly amazing things
  with just text files. Before using org-mode I had struggled a lot
  with to-do lists. The first thing that org-mode did for me was to
  remove that problem from my life. After using it for sometime I
  wanted to configure org-mode for myself and it was very easy to do
  so. So at this point I have a configure-able to-do list
  application. But there are other uses more fascinating than the
  to-do list thingy. Org-mode files being just text files are
  incredibly easy to read even if you do not have Emacs. Thus you are
  not dependent on Emacs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Open-ness&lt;/strong&gt; : The documentation part of Emacs is like the Cherry on
  top. Emacs is like the truly Free and Open Source software. Since
  it is written in LISP which is not compiled, we can view every
  source code that is used in Emacs. In-fact most of the plugins that
  are installed are just big elisp files. Thus, technically it is very
  much possible for a user to change the code of Emacs while it is
  running. In-fact this is exactly what we do when we change the config
  file and load it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Documentation&lt;/strong&gt; : Emacs embraces documentation like a boss. With
  Emacs you have complete transparency. Using the help menu you can
  see anything you want about emacs' internals. This includes
  variables that are defined within Emacs, definition/descriptions of
  proceudres (yes!! you can type a procedure name and Emacs would pull
  up the procedure description, if you want then you could visit the
  file where the procedure is defined and change it and the changes
  would be reflected dynamically (you would still have to eval the
  file(s) that you have changed)). Apart from that you can also query
  keybindgins and Emacs will tell you which functions is that key
  bound to. This is particularly very useful when you want to figure
  out what a key-binding is doing (look at the procedure definiton and
  so on!!). IMHO no other editor even comes close to this
  feature. This self-documenting feature was a life saver for me when
  I was starting out with Emacs.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Writing Documents&lt;/strong&gt; : I really hate using a word-processor and
  honestly sometimes using LibreOffice is not so much fun. With
  org-mode I can just write a file in org-mode and then export it to
  any desired format. And this export is not a shitty export. Org-Mode
  actually creates a hierarchical index based on the highlights in
  org-mode. Moreover Org-mode can export the three main formats that I
  need the most - odt, pdf, md (the markdown looks beautiful)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Dired&lt;/strong&gt; : The Emacs file manager. Dired is the file manager that
  comes with Emacs. Now how many of you have tried to install a file
  browser in vim because that makes it easier to navigate the source
  code directory ?... Yeah.. Emacs has that built-in. Which means that
  it was much well integrated with the rest of the stuff and also that
  you do not have to put yourself through the agony of installing a
  new plugin&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Package System&lt;/strong&gt; : Emacs has its own package manager and its own
  repositories. This means that installing a new package is as simple
  as 'M-x package-install &lt;RET&gt; package-name &lt;RET&gt;'. Emacs will find
  the package, download it, compile it and do the necessary things on
  its own. Configuring the packages requires some more work but that
  is also taken care of by the configuration system&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.emacswiki.org/emacs/Helm"&gt;Helm-mode&lt;/a&gt;&lt;/strong&gt; :  This is  a
  framework  that  enables  you  to  quickly  access  anything  within
  Emacs. This  means that  with its  fuzzy matching,  it can  fish for
  commands even before you have finished typing your command. Thus you
  can look  for Emacs commands and  files very fast. It  uses an async
  library in the back-end that makes it this fast.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;LISP&lt;/strong&gt; : Emacs is the best possible IDE for learning
  LISP. With &lt;a href="http://www.nongnu.org/geiser/"&gt;Geiser&lt;/a&gt; I can now run a
  scheme REPL inside Emacs while I write code and then execute them
  from the file itself. This is just seamless and amazing.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href="https://www.gnu.org/software/emacs/manual/html_node/emacs/Emacs-Server.html"&gt;Server mode&lt;/a&gt;&lt;/strong&gt; :
  Emacs is quite heavy, so it takes some time to startup. This means
  that the typical workflow which I used to have with vim would never
  work here. With vim i would just open a new instance of vim wherever
  I needed it. Vim is small and fast. But with Emacs it doesn't make
  sense to open a new instance of Emacs for editing a new file. The
  solution is to us the Emacs Server Mode. In this mode Emacs runs a
  server daemon and we can use the program 'emacsclient' to connect to
  the server. Emacsclient does not create a new instance of Emacs,
  instead it connects to the Emacs server and merely opens a new frame
  or it sends that file to the already opened frame. After editing the
  file we can close that file and it will be saved normally. Thus now
  I can edit a file from anywhere I want within this system. Also
  editing the desktop entry to Emacs enabled me to add a code snippet
  that will call emacsclient whenever I try to open any text file from
  the File Manager.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Other Cool stuff&lt;/h2&gt;
&lt;p&gt;Here are some other interesting things that you can do with Emacs that
I want to try out.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href="https://github.com/skeeto/elfeed"&gt;elfeed&lt;/a&gt;&lt;/strong&gt; : This is a client
  that reads RSS and ATOM feeds.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;mail client&lt;/strong&gt; : Some of my friends use Emacs as their email client. I
  haven't gotten around to doing it yet.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;EXWM&lt;/strong&gt; : This is a window manager that uses Emacs. Its called Emacs
  Window Manager. I have used it briefly but I have not switched to it
  yet.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Emacs is great! 
Vim is great too. (I also use vim when I am working on a server)&lt;/p&gt;
&lt;p&gt;Emacs is a religion.&lt;/p&gt;</content><category term="CS"></category><category term="Linux"></category></entry><entry><title>New Setup (I moved to Pelican)</title><link href="https://signalshore.github.io/blog/New-Setup.html" rel="alternate"></link><published>2018-01-04T00:00:00+05:30</published><updated>2018-01-04T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2018-01-04:/blog/New-Setup.html</id><summary type="html">&lt;p&gt;Can you spot something new ?&lt;/p&gt;
&lt;p&gt;I decided last week that I wanted to use Pelican for building my blog
instead of Jekyll. I have just switched in the last two days and this
is the first post that I am writing from the Pelican built site.&lt;/p&gt;
&lt;p&gt;There are a lot â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Can you spot something new ?&lt;/p&gt;
&lt;p&gt;I decided last week that I wanted to use Pelican for building my blog
instead of Jekyll. I have just switched in the last two days and this
is the first post that I am writing from the Pelican built site.&lt;/p&gt;
&lt;p&gt;There are a lot of reasons why I switched to &lt;a href="https://blog.getpelican.com/"&gt;Pelican&lt;/a&gt; from Jekyll.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I want to use GUIX SD as my primary Operating System instead of arch and Jekyll is not available on GUIX SD.&lt;/li&gt;
&lt;li&gt;I am more comfortable with Python rather than Ruby&lt;/li&gt;
&lt;li&gt;Jekyll build time increases as the number of posts increase&lt;/li&gt;
&lt;li&gt;Pelican offers the true &lt;code&gt;themes&lt;/code&gt; experience instead of Jekyll. &lt;/li&gt;
&lt;li&gt;Pelican takes care of a lot of things for me (like atom feed generation, pagination etc)&lt;/li&gt;
&lt;li&gt;Pelican plugins are easier to understand and maintain&lt;/li&gt;
&lt;li&gt;There is no weird &lt;code&gt;bundle ...&lt;/code&gt; mess anywhere. Everything is self contained.&lt;/li&gt;
&lt;li&gt;Pelican is better than Jekyll&lt;/li&gt;
&lt;li&gt;Emacs has a pelican mode (oh yeah!! I use emacs!!)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So this is probably one of the biggest changes that has happened to this blog. 
Apart form this there have been a number of smaller changes to this blog.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I removed the Navigation links from the top of the blog to the bottom&lt;/li&gt;
&lt;li&gt;I have a better footer on this blog than the previous one&lt;/li&gt;
&lt;li&gt;The "publishing a post" workflow is a bit complicated than a Jekyll hosted site&lt;/li&gt;
&lt;li&gt;I also removed some of the Signal and Sohom weirdness from the about page.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So that's about it...&lt;/p&gt;</content><category term="Meta"></category><category term="CS"></category></entry><entry><title>Scheme - Part 3 - Higher Order Procedures (intro)</title><link href="https://signalshore.github.io/blog/Scheme-Part-3.html" rel="alternate"></link><published>2017-12-20T00:00:00+05:30</published><updated>2017-12-20T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2017-12-20:/blog/Scheme-Part-3.html</id><summary type="html">&lt;h3&gt;Higher Order procedures&lt;/h3&gt;
&lt;p&gt;&lt;s&gt;Lisp is a functional programming language&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;Lisp is a &lt;a href="https://en.wikipedia.org/wiki/Metaprogramming"&gt;Metaprogramming Language&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Actually, I really don't know what Lisp is myself and I'm just trying
to figure it out; so the answer to the question "What programming
paradigm does Lisp fall into ?" will have to wait for some â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Higher Order procedures&lt;/h3&gt;
&lt;p&gt;&lt;s&gt;Lisp is a functional programming language&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;Lisp is a &lt;a href="https://en.wikipedia.org/wiki/Metaprogramming"&gt;Metaprogramming Language&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Actually, I really don't know what Lisp is myself and I'm just trying
to figure it out; so the answer to the question "What programming
paradigm does Lisp fall into ?" will have to wait for some time. I'm
sure that I can quote some website or blog but I want to figure it out
myself. I used to think that Lisp was a functional programming
language but turns out it's not according to the strictest definitions
of functional programming and some other reasons that I do not yet
understand fully.&lt;/p&gt;
&lt;p&gt;It's slow but I'm getting there. :-)&lt;/p&gt;
&lt;p&gt;Anyway for this post we need to know that in Lisp we
have
&lt;a href="https://en.wikipedia.org/wiki/First-class_function"&gt;first class functions&lt;/a&gt;,
which is basically functions being treated
as
&lt;a href="https://en.wikipedia.org/wiki/First-class_citizen"&gt;first class citizens&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In Scheme this is achieved using Higher Order procedures.&lt;/p&gt;
&lt;p&gt;In this post I am using functions and procedures interchangeably
because in this context (lisp) everything is a function and there is
not much difference, however the meanings may vary depending on which
programming language family you are talking about, for example in
Pascal procedures and functions are distance and have different
 meanings. In the book functions refer to mathematical functions and
procedures mean Lisp procedures.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/Higher-order_function"&gt;Wikipedia&lt;/a&gt;
defines higher order functions as something that does at least one of
the following&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Take one or more functions as arguments&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Return a function as its result&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;From the SICP book Page 57 defines higher order procedures as&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;procedures that manipulate other procedures&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We will look at the first point in this post today. The topics are too
dense for a single post.&lt;/p&gt;
&lt;h3&gt;Procedures as arguments&lt;/h3&gt;
&lt;p&gt;Instead of just jumping right in, allow me to use an example that will
inspire the idea of procedures that take procedures as arguments.&lt;/p&gt;
&lt;p&gt;Let us look at this mathematical expression and write a procedure for it.&lt;/p&gt;
&lt;div class="math"&gt;$$ Sum = 1 + 2 + 3 + 4 + \dots +  \infty $$&lt;/div&gt;
&lt;p&gt;The Lisp procedure to compute this would be like &lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;sum-integers&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;&amp;amp;gt&lt;/span&gt;&lt;span class="c1"&gt;; a b)&lt;/span&gt;
        &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;+ &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;sum-integers&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;+ &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;sum-integers&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;;; prints 15&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Now let us look at this expression &lt;/p&gt;
&lt;div class="math"&gt;$$ Sum = 1^3 + 2^3 + 3^3 + \dots + \infty $$&lt;/div&gt;
&lt;p&gt;This is a series of the sum of cubes. The procedure would look like this&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;sum-cubes&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;&amp;amp;gt&lt;/span&gt;&lt;span class="c1"&gt;; a b )&lt;/span&gt;
        &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;+ &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;cube&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;sum-cubes&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;+ &lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;If we observer closely we can see that there is an uncanny similarity
between the two procedures and such a similarity indicates that there
is some abstraction that needs further investigation. If you think
about it, in both the previous examples we are computing the sum of
different terms. If we can capture the idea of &lt;code&gt;summing&lt;/code&gt; in a
procedure then that would give us the required
abstraction. Mathematicians have done this using the &lt;span class="math"&gt;\(\Sigma\)&lt;/span&gt;
notation. The Sigma notation captures the idea of the summation
without knowing what we are summing. Thus the above two expressions
can be rewritten as :&lt;/p&gt;
&lt;div class="math"&gt;$$ \sum_{n=1}^\infty n = 1 + 2 + 3 + \dots + \infty $$&lt;/div&gt;
&lt;p&gt;and &lt;/p&gt;
&lt;div class="math"&gt;$$ \sum_{n=1}^\infty n^3 = 1^3 + 2^3 + 3^3 + \dots + \infty $$&lt;/div&gt;
&lt;p&gt;This lets us capture the idea of summation in the Sigma notation like &lt;/p&gt;
&lt;div class="math"&gt;$$ \sum_{n=a}^b f(n) = f(a) + \dots + f(b) $$&lt;/div&gt;
&lt;p&gt;and we can use that idea to write a procedure; like so..&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;sum&lt;/span&gt; &lt;span class="nv"&gt;term&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;next&lt;/span&gt; &lt;span class="nv"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;&amp;amp;gt&lt;/span&gt;&lt;span class="c1"&gt;; a b)&lt;/span&gt;
        &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;+ &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;term&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;sum&lt;/span&gt; &lt;span class="nv"&gt;term&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;next&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;next&lt;/span&gt; &lt;span class="nv"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt; &lt;span class="c1"&gt;;; (next a) updates the a&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;In the above procedure "term" and "next" are procedures too.  Term is
a procedure that computes the value of each term. This procedure is
the Lisp equivalent of the function &lt;span class="math"&gt;\(f(x)\)&lt;/span&gt; in the mathematical
Sigma notation. Next is a procedure that determines how the function
will iterate.&lt;/p&gt;
&lt;p&gt;Thus for &lt;span class="math"&gt;\(\sum_{n=1}^\infty n^3 = 1^3 + 2^3 + 3^3 + \dots + \infty\)&lt;/span&gt;
the Lisp procedure would be&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;cube&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;* &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;next&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;+ &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;sum-cube&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;sum&lt;/span&gt; &lt;span class="nv"&gt;cube&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;next&lt;/span&gt; &lt;span class="nv"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;;; sum is defined above&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;This is not the end. We can use this idea to create multiple such abstractions. &lt;/p&gt;
&lt;p&gt;For example the multiplication procedure &lt;span class="math"&gt;\(\coprod_{n=a}^b f(n) = f(a) * \dots * f(b)\)&lt;/span&gt; can be coded like&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;product&lt;/span&gt; &lt;span class="nv"&gt;term&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;next&lt;/span&gt; &lt;span class="nv"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;&amp;amp;gt&lt;/span&gt;&lt;span class="c1"&gt;; a b)&lt;/span&gt;
        &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;+ &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;term&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
           &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;product&lt;/span&gt; &lt;span class="nv"&gt;term&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;next&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;next&lt;/span&gt; &lt;span class="nv"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;We can use the multiplication abstraction to calculate factorials.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;factorial&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;product&lt;/span&gt; &lt;span class="nv"&gt;identity&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;next&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="c1"&gt;;;defined above&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;factorial&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;                  &lt;span class="c1"&gt;;; prints 120&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Now we can see another uncanny similarity between this procedure and
the summation procedure. Thus we can define another procedure called
the &lt;code&gt;accumulate&lt;/code&gt; and abstract away the idea of summation and
multiplication into two different methods of doing the same thing;
accumulating.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt; 1
 2
 3
 4
 5
 6
 7
 8
 9
10
11
12&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;accumulate&lt;/span&gt; &lt;span class="nv"&gt;combiner&lt;/span&gt; &lt;span class="nv"&gt;null-value&lt;/span&gt; &lt;span class="nv"&gt;term&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt; &lt;span class="nv"&gt;next&lt;/span&gt; &lt;span class="nv"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;&amp;amp;gt&lt;/span&gt;&lt;span class="c1"&gt;; a b)&lt;/span&gt;
    &lt;span class="nv"&gt;null-value&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;combiner&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;term&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;accumulate&lt;/span&gt; &lt;span class="nv"&gt;combiner&lt;/span&gt; &lt;span class="nv"&gt;null-value&lt;/span&gt; &lt;span class="nv"&gt;term&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;next&lt;/span&gt; &lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;next&lt;/span&gt; &lt;span class="nv"&gt;b&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;indentity&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;next&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;+ &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;accumulate&lt;/span&gt; &lt;span class="nv"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="nv"&gt;identity&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;next&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;;; prints 15&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;accumulate&lt;/span&gt; &lt;span class="nv"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;identity&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="nv"&gt;next&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="c1"&gt;;; prints 120&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;The &lt;code&gt;combiner&lt;/code&gt; in the above procedure is a procedure that takes in two inputs and combines them. For addition this is &lt;code&gt;+&lt;/code&gt; and for multiplication this is &lt;code&gt;*&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;null-value&lt;/code&gt; is the value to be used when the range runs out. This is same the the value used the &lt;code&gt;(&amp;gt; a b)&lt;/code&gt; evaluates to false.&lt;/p&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;This is the beginning of the chapter in the book that deals with this stuff
&lt;a href="https://mitpress.mit.edu/sicp/full-text/book/book-Z-H-12.html#%_sec_1.3"&gt;Book&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This post turned out to be bigger than I anticipated. In the next post
we will look at procedures returning procedures as the result. &lt;/p&gt;
&lt;p&gt;p.s. this implies that higher order procedures can program programs in
some sense. ;-)&lt;/p&gt;
&lt;p&gt;p.p.s This was mighty amazing. I took about 1 minute
to write the accumulate procedure. I took about 2 weeks to fully
understand the sum procedure. I think I am getting a hang of this
thing!!!&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.3/latest.js?config=TeX-AMS-MML_HTMLorMML';

    var configscript = document.createElement('script');
    configscript.type = 'text/x-mathjax-config';
    configscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'none' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        availableFonts: ['STIX', 'TeX']," +
        "        preferredFont: 'STIX'," +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";

    (document.body || document.getElementsByTagName('head')[0]).appendChild(configscript);
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</content><category term="CS"></category><category term="Scheme"></category></entry><entry><title>Scheme - Part 2 - Expressions and Evaluations</title><link href="https://signalshore.github.io/blog/Scheme-Part-2.html" rel="alternate"></link><published>2017-11-30T00:00:00+05:30</published><updated>2017-11-30T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2017-11-30:/blog/Scheme-Part-2.html</id><summary type="html">&lt;h3&gt;S-expressions&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/S-expression"&gt;S-expressions&lt;/a&gt; or Sexprs or Symbolic Expressions are used to
represented list like data. This was invented for and popularized by
LISP. Lisp stands for LISt Processing. &lt;/p&gt;
&lt;p&gt;A list looks like this &lt;code&gt;(x y ... z)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A list can be made up of other lists as well. Like so &lt;code&gt;(x (a â€¦&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;h3&gt;S-expressions&lt;/h3&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/S-expression"&gt;S-expressions&lt;/a&gt; or Sexprs or Symbolic Expressions are used to
represented list like data. This was invented for and popularized by
LISP. Lisp stands for LISt Processing. &lt;/p&gt;
&lt;p&gt;A list looks like this &lt;code&gt;(x y ... z)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;A list can be made up of other lists as well. Like so &lt;code&gt;(x (a b c) (d e f))&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;In Lisp (and any other lisps) every program is a represented as a
list. In-fact this is the one and only style of writing programs in
LISP and this leads to some very interesting properties of lisp
programs.
1. Data and instructions (that work on the data) have similar
   representation within the program structure.
2. You have to pay close attention to evaluation models or how each
   list is evaluated.
3. The whole program can be represented as a tree.&lt;/p&gt;
&lt;h3&gt;Program Structure of Lisp&lt;/h3&gt;
&lt;p&gt;If we look at the structure of a LISP program we will notice that
there is not proper structure to the code other than the usual LIST
structure and everything within that language (from variables to
procedure calls) are represented with the same structure. This is
interesting because this is directly related to the kind of computing
model this language is based on. Lisp is based on a model of computing
called &lt;a href="https://en.wikipedia.org/wiki/Lambda_calculus"&gt;Lambda Calculus&lt;/a&gt;. It was invented by &lt;a href="https://en.wikipedia.org/wiki/Alonzo_Church"&gt;Alonzo Church&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;On the other hand procedural and object oriented languages are based
on a model of computing called the &lt;a href="https://en.wikipedia.org/wiki/Turing_machine"&gt;Turing Machine&lt;/a&gt;. In these
languages there is some structure that lets us differentiate between
what is code and what is data, but that is not the case in
Lisp. Infact in Lisp code is treated as data in the form of &lt;a href="https://en.wikipedia.org/wiki/Higher-order_function"&gt;higher
order procedures&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Lisp programs are trees. In other words the lists can be represented
as tree such that
- Every list within a pair of &lt;em&gt;(&lt;/em&gt;  &lt;em&gt;)&lt;/em&gt; is treat as a node in the tree
- The very first element of every list is the first child of that node
  in the tree. This is the operator.
- Every other element of that list is a child of that node and are the
  operators for that operand.&lt;/p&gt;
&lt;p&gt;The tree of the expression &lt;code&gt;(+ 2 3)&lt;/code&gt; will look like this&lt;/p&gt;
&lt;p&gt;&lt;img alt="single tree" src="/assets/images/2017-11-30/single.jpg"&gt;&lt;/p&gt;
&lt;p&gt;A LISP program is very easily parse-able by a computer as Trees do
not need complicated rules for traversal and other operations. In-fact
this sounds almost similar to the parse-tree of a
&lt;a href="https://en.wikipedia.org/wiki/Context-free_grammar"&gt;Context-Free Grammar&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;blue&gt;The Substitution Model&lt;/blue&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;This is probably one of the most simplest models of evaluation. It is
also very powerful. It is also recursive in nature. Let us write a
basic definition of the Evaluator.&lt;/p&gt;
&lt;p&gt;Let the Evaluator be &lt;code&gt;E&lt;/code&gt;. It accepts an expression as input and
evaluates it. Let the expression be &lt;code&gt;expr&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;On receiving an expression &lt;em&gt;expr&lt;/em&gt; evaluate the sub-expressions (using
  the same model; so this is a recursive call to &lt;em&gt;&lt;code&gt;E(sub_expr)&lt;/code&gt;&lt;/em&gt; where
  &lt;em&gt;sub_expr&lt;/em&gt; is the sub expression)&lt;/li&gt;
&lt;li&gt;Apply the results of the sub-lists as operands to the operator of this list.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In list the first element of any List is treated as the operator while
the rest are treated as the operands.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;&amp;amp;gt&lt;/span&gt;&lt;span class="c1"&gt;; (+ 2 3 4) ;; + is the operator and 2, 3, 4 are the operands&lt;/span&gt;
&lt;span class="nv"&gt;&amp;amp;gt&lt;/span&gt;&lt;span class="c1"&gt;; 9&lt;/span&gt;
&lt;span class="nv"&gt;&amp;amp;gt&lt;/span&gt;&lt;span class="c1"&gt;; (* 2 3 4) ;; * is the operator and 2, 3, 4 are the operands&lt;/span&gt;
&lt;span class="nv"&gt;&amp;amp;gt&lt;/span&gt;&lt;span class="c1"&gt;; 24&lt;/span&gt;
&lt;span class="nv"&gt;&amp;amp;gt&lt;/span&gt;&lt;span class="c1"&gt;; (&amp;amp;gt; 2 3)   ;; &amp;amp;gt; is the operator; this is equivalent to 2 &amp;amp;gt; 3 &lt;/span&gt;
&lt;span class="nv"&gt;&amp;amp;gt&lt;/span&gt;&lt;span class="c1"&gt;; f&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;This also applied for lists that have other lists in them. Let's have
a look!&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;&amp;amp;gt&lt;/span&gt;&lt;span class="c1"&gt;; (+ 2 3 (+ 2 2))&lt;/span&gt;
&lt;span class="nv"&gt;&amp;amp;gt&lt;/span&gt;&lt;span class="c1"&gt;; 9&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;Let us trace what happens here.  First the evaluator receives the
expression &lt;code&gt;(+ 2 4 (+ 2 2))&lt;/code&gt; and then it evaluates the internal list
first. Which is &lt;code&gt;(+ 2 2)&lt;/code&gt;. This expression evaluates to &lt;code&gt;4&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In the tree form this is how the above expression would look&lt;/p&gt;
&lt;p&gt;&lt;img alt="double" src="/assets/images/2017-11-30/double.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Then the evaluator &lt;em&gt;substitutes&lt;/em&gt; that result to the actual expression
before continuing on with the evaluation. So now the expression looks
like this &lt;code&gt;(+ 2 4 4)&lt;/code&gt; and then we get the final answer.&lt;/p&gt;
&lt;h3&gt;Evaluation Strategies&lt;/h3&gt;
&lt;p&gt;Lisp uses an &lt;a href="https://en.wikipedia.org/wiki/Evaluation_strategy#Applicative_order"&gt;Eager evaluation&lt;/a&gt; strategy. This is also known as Strict
Evaluation or Applicative evaluation. In this strategy all the
operands are evaluated first before applying them to the function.&lt;/p&gt;
&lt;p&gt;In lisp this is the only structure that we have. So conditional
branching (if-else, case). The if-construct in LISP looks like this.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;(if (expression) (expression1) (expression2))&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now the &lt;em&gt;if&lt;/em&gt; macro is special because it does not follow the normal
evaluation strategy i.e. all the three expressions &lt;em&gt;expression&lt;/em&gt;,
&lt;em&gt;expression1&lt;/em&gt; and &lt;em&gt;expression2&lt;/em&gt; are not evaluated before the procedure
is applied. In this macro only the first expression (&lt;em&gt;expression&lt;/em&gt;) is
evaluated first and if it evaluates to be true (&lt;em&gt;#t&lt;/em&gt;) then
&lt;em&gt;expression1&lt;/em&gt; will be evaluated. Otherwise &lt;em&gt;expression2&lt;/em&gt; will be
evaluated.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;recursive&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;if &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;= &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;recursive&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;- &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;recursive&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;What happens when we evaluate the last expression ? Nothing
spectacular. We just get the value &lt;code&gt;0&lt;/code&gt; which is what it is supposed to
do. We get this answer only because LISP uses normal order evaluation
(lazy evaluation) for the &lt;em&gt;if&lt;/em&gt; construct. If like the default strategy
it used applicative order evaluation then both the &lt;code&gt;0&lt;/code&gt; and the &lt;code&gt;(recursive
(- x 1))&lt;/code&gt; would be evaluated before calling the procedure and that
would lead to an infinite loop. But the if-constructs uses &lt;a href="https://en.wikipedia.org/wiki/Evaluation_strategy#Non-strict_evaluation"&gt;Normal order&lt;/a&gt; evaluation or non-strict evaluation.&lt;/p&gt;
&lt;p&gt;My next program will illustrate this. For that we will define a
&lt;code&gt;new-if&lt;/code&gt; procedure that will do exactly what &lt;code&gt;if&lt;/code&gt; does.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;new-if&lt;/span&gt; &lt;span class="nv"&gt;predicate&lt;/span&gt; &lt;span class="nv"&gt;exp1&lt;/span&gt; &lt;span class="nv"&gt;exp2&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; 
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;cond &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;predicate&lt;/span&gt; &lt;span class="nv"&gt;exp1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;else &lt;/span&gt;&lt;span class="nv"&gt;exp2&lt;/span&gt;&lt;span class="p"&gt;)))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;This is the &lt;em&gt;new-if&lt;/em&gt; procedure. Let us use this in our previous program.&lt;/p&gt;
&lt;table class="highlighttable"&gt;&lt;tr&gt;&lt;td class="linenos"&gt;&lt;div class="linenodiv"&gt;&lt;pre&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class="code"&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;define &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;recursive-new&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;new-if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;= &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;recursive-new&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;- &lt;/span&gt;&lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;))))&lt;/span&gt;

&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nf"&gt;recursive-new&lt;/span&gt; &lt;span class="nv"&gt;x&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;

&lt;p&gt;What happens now ? &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;NOW&lt;/strong&gt; the thing goes into a spectacular infinite loop. That is
because the &lt;em&gt;new-if&lt;/em&gt; procedure will be evaluated using the applicative
order strategy. Thus all the operands will be evaluated before the
&lt;em&gt;new-if&lt;/em&gt; procedure is called; and &lt;em&gt;recursive-new&lt;/em&gt; has a call to
itself. So in the end it all splatters exceptionally well.&lt;/p&gt;
&lt;p&gt;P.S. I have written this post based on my own
experience which is a very very limited one. I do not claim that what
I have just said is the ultimate truth or the &lt;em&gt;only&lt;/em&gt; thing out
there. My short life and my shorter experience with LISP is not nearly
enough to cover the full depth and breadth of LISP&lt;/p&gt;</content><category term="CS"></category><category term="Scheme"></category></entry><entry><title>Scheme - Part 1 - Wishful Thinking and Abstraction</title><link href="https://signalshore.github.io/blog/Scheme-Part-1.html" rel="alternate"></link><published>2017-11-20T00:00:00+05:30</published><updated>2017-11-20T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2017-11-20:/blog/Scheme-Part-1.html</id><summary type="html">&lt;h3&gt;Prologue&lt;/h3&gt;
&lt;p&gt;I started
learning
&lt;a href="https://en.wikipedia.org/wiki/Lisp_(programming_language)"&gt;LISP&lt;/a&gt;
(actually a dialect of LISP
called
&lt;a href="https://en.wikipedia.org/wiki/Scheme_(programming_language)"&gt;Scheme&lt;/a&gt;)
sometime back. The inspiration for learning Scheme was that it is
a completely new programming paradigm
i.e. &lt;a href="https://en.wikipedia.org/wiki/Functional_programming"&gt;functional programming&lt;/a&gt; language
and I wanted to learn a non-Object-Oriented programming
language. Anyway, so I looked
at
&lt;a href="https://en.wikipedia.org/wiki/Haskell_(programming_language)"&gt;Haskell&lt;/a&gt;
as its â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Prologue&lt;/h3&gt;
&lt;p&gt;I started
learning
&lt;a href="https://en.wikipedia.org/wiki/Lisp_(programming_language)"&gt;LISP&lt;/a&gt;
(actually a dialect of LISP
called
&lt;a href="https://en.wikipedia.org/wiki/Scheme_(programming_language)"&gt;Scheme&lt;/a&gt;)
sometime back. The inspiration for learning Scheme was that it is
a completely new programming paradigm
i.e. &lt;a href="https://en.wikipedia.org/wiki/Functional_programming"&gt;functional programming&lt;/a&gt; language
and I wanted to learn a non-Object-Oriented programming
language. Anyway, so I looked
at
&lt;a href="https://en.wikipedia.org/wiki/Haskell_(programming_language)"&gt;Haskell&lt;/a&gt;
as its a purely functional programming language, but I picked Scheme
because of the
book
&lt;a href="https://mitpress.mit.edu/sicp/full-text/book/book.html"&gt;Structure and Interpretation of Computer Programs&lt;/a&gt; (referred
to as SICP hereafter).&lt;/p&gt;
&lt;h3&gt;What is this ?&lt;/h3&gt;
&lt;p&gt;Even though I started about 1 year back I did not make much progress
and I realized that one of the main reasons was that I was not doing
the exercises with enough rigor. Thinking about a solution is very
different than writing an actual program. So I decided that I would do
the exercises and put them
on &lt;a href="https://gitlab.com/83bytes"&gt;Gitlab&lt;/a&gt; and then write about
them. Furthermore during this course of learning Scheme I've come
across a lot of cool stuff that completely changed the way how I
approached computer science and programming in general. I want to
share those.&lt;/p&gt;
&lt;h3&gt;Lets start&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Let us write a program&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="sum pic" src="/assets/images/2017-11-20/sum.png"&gt;&lt;/p&gt;
&lt;p&gt;(these are cropped screen-shots of Emacs)&lt;/p&gt;
&lt;p&gt;This program takes three numbers and adds them. This is also how the
scheme syntax looks. Scheme syntax is
just &lt;a href="https://en.wikipedia.org/wiki/S-expression"&gt;S-expressions&lt;/a&gt; or
symbolic expressions.&lt;/p&gt;
&lt;p&gt;Thinking about S-expressions is easy. 
- Starting from the first "(" the first element is the operator
- Everything that comes after the first operator are the operands
- The end is the closing bracket ")"&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;How about a procedure (scheme word for functions)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In scheme we use the "define" keyword to define a procedure.&lt;/p&gt;
&lt;p&gt;Its syntax is like this &lt;code&gt;(define (&amp;lt;name&amp;gt; &amp;lt;formal parameters) (&amp;lt;body&amp;gt;))&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Let us define a procedure&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="sumProcedure" src="/assets/images/2017-11-20/procedureSum.png"&gt;&lt;/p&gt;
&lt;p&gt;This is how the procedure looks. The name of the procedure is "sum" and it takes in two numbers and produces their sum.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Let us write something a bit complicated&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="sumOfSquare" src="/assets/images/2017-11-20/sumOfSquares.png"&gt;&lt;/p&gt;
&lt;p&gt;This procedure uses the previous "sum" procedure to compute the sum of
the square of two numbers. I this process you should see another
procedure that we have defined which is called "square". This is an
accessory procedure. We could have no used it and it wouldn't have
mattered too much. &lt;/p&gt;
&lt;p&gt;&lt;em&gt;NOW!! here is the kicker! :-P&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Imagine for a second that you did
not know how addition, multiplication, division etc worked. You could
still define the procedure "sumOfSquares" knowing that you have
procedures called "sum" and "square" that will take care of the
internal operations for you.&lt;/p&gt;
&lt;p&gt;What this enables you to do is do a top down design approach to
things.  While designing apps (nothing too big) in C++ I found myself
being too worried about what were all the small parts the should make
up the program, But after starting to read this book apart from
learning scheme I also learned this model of thinking.&lt;/p&gt;
&lt;p&gt;The writers call this "wishful thinking"; as in you wish that
something existed and then used it as if it existed. Then you tried to
figure out if it did exist in the first place or not. If it does exist
then fine; otherwise you design one.&lt;/p&gt;
&lt;p&gt;Which means that if at any point while designing a software you are
un-sure about all sub-modules that will be required to make that
module work then you do not start designing the sub-modules and build
up from there. Instead you design the current module and then design
the sub-modules to match the requirement set up by the module. This is
top-down design approach.&lt;/p&gt;
&lt;p&gt;For example when designing "sumOfSquares" you need not think about how
you will implement it. You can just write the code and then you can
sit down and figure out how "sum" and "square" would work. At the time
of writing the sumOfSquare you do not know if &lt;em&gt;sum&lt;/em&gt; and &lt;em&gt;square&lt;/em&gt;
exist. You just use them as if they did existed.&lt;/p&gt;
&lt;p&gt;This also means that while wiring the sumOfSquare procedure you need
not bother about how &lt;em&gt;sum&lt;/em&gt; and &lt;em&gt;square&lt;/em&gt; will be implemented. You can
just use them as it is.&lt;/p&gt;
&lt;p&gt;This brings me to my next point. &lt;/p&gt;
&lt;h3&gt;Abstraction&lt;/h3&gt;
&lt;p&gt;Every procedure is like a layer of abstraction that is telling you to
not worry about how it works and instead focus on the task at hand.
This idea is immensely helpful. Its so simple. If you don't know how
to do something; just write a procedure that does it; then worry about
the procedure later.&lt;/p&gt;
&lt;p&gt;I didn't think much about this until recently when I started doing
the exercises in the book more seriously. Its great once you get the
hang of it.&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;This is not the I have more things to share. Hopefully I will be able
to write about them soon. :-P&lt;/p&gt;
&lt;p&gt;&lt;a href="https://gitlab.com/83bytes/sicp"&gt;Here&lt;/a&gt; is the Gitlab Repo where I will keep uploading my SICP exercises.&lt;/p&gt;</content><category term="CS"></category><category term="Scheme"></category></entry><entry><title>My First 100km Bicycle Ride</title><link href="https://signalshore.github.io/blog/My-First-100-km-Bicycle-Ride.html" rel="alternate"></link><published>2017-11-08T00:00:00+05:30</published><updated>2017-11-08T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2017-11-08:/blog/My-First-100-km-Bicycle-Ride.html</id><summary type="html">&lt;p&gt;Last Thursday (2 November, 2017) I completed my longest cycling ride
(yet!). It was tiring and awesome at the same time. It took 7 hours to
complete that too with multiple stops in the middle of the ride.&lt;/p&gt;
&lt;h3&gt;The Motivation&lt;/h3&gt;
&lt;p&gt;I've been planning to do a 100k ride for a â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Last Thursday (2 November, 2017) I completed my longest cycling ride
(yet!). It was tiring and awesome at the same time. It took 7 hours to
complete that too with multiple stops in the middle of the ride.&lt;/p&gt;
&lt;h3&gt;The Motivation&lt;/h3&gt;
&lt;p&gt;I've been planning to do a 100k ride for a long time but I didn't
really got to it because something or the other always came up and I
was being very very lazy. However a lot of things changed in the last
week and most importantly me and my brother(who also happens to be an
avid bicycling fan based in Kolkata) are planning to go riding when I
visit my hometown in Kolkata. Thus I thought that it would be a good
idea to get some miles under my belt.&lt;/p&gt;
&lt;h3&gt;The Planning&lt;/h3&gt;
&lt;p&gt;This was the easiest part to decide. I was very sure that I did not
want to do a 50 km ride; I wanted something bigger. So i decided to do
a 100+ km ride. The destination was Tumkur because that was the only
town near to Bangalore with a perfect distance for this ride. Tumkur
is 60kms from Bangalore (this distance is from my hostel which happens
to be on the border of Bangalore (so to speak)).&lt;/p&gt;
&lt;p&gt;I could've chosen a route inside Bangalore but I did not do that
because
- Being within the city is like a safety net. There is always the
  possibility of taking an auto and calling it a day.
- Bangalore streets are very shitty to ride on. Its the weird
  combination of the condition of the roads and the multitude of
  moronic motorists.
- Whenever I try something new and bold I like not having any easy
  backup options as I have found that this combination of "no easy
  backups" and "difficult task" are very good and they help me
  grow. :-)&lt;/p&gt;
&lt;p&gt;The road to Tumkur is a National Highway and is very very
straight. Thus there was nothing that could go spectacularly wrong
other than myself getting killed on the Highway. Honestly I think that
the chances of me getting hit by a car and killed is way more in the
city than on the Highway. Also there was no issue of getting lost on
the way and I was very prepared for any punctures and other equipment
related hiccups.&lt;/p&gt;
&lt;h3&gt;The Nutrition&lt;/h3&gt;
&lt;p&gt;I carried peanut brittle because its made of peanuts which is mighty
healthy and it also had jaggery which is a better form of consuming
sucrose as the rate of absorption of sucrose into the body is
regulated in jaggery since it has fiber. So I figured that with each
peanut Brittle I would get a steady and sustainable flow of glucose
(sucrose breaks down into glucose and fructose). (this is not based on
any scientific research. This is just based on what I have learned
about refined and unrefined sugar and 2+2=4 )&lt;/p&gt;
&lt;p&gt;I also had a jam-bread when I reached tumkur. &lt;/p&gt;
&lt;p&gt;I also had a coconut water on the way. It was very very refreshing
especially after sweating and all. I feel that this was very important
as it helped replenish a lot of depleted electrolytes.&lt;/p&gt;
&lt;p&gt;I ate two bananas before starting because I couldn't resist the
temptation. :-P&lt;/p&gt;
&lt;h3&gt;Packing&lt;/h3&gt;
&lt;p&gt;This was a very interesting part where I found myself performing
calculations so that I could carry the most effective load in the most
efficient manner.&lt;/p&gt;
&lt;p&gt;This is one of the most important parts of the trip because without
the correct stuff you might find yourself unprepared for a wide range
of possible situations out on a trip at a location where finding
relevant help would be very difficult.&lt;/p&gt;
&lt;p&gt;You also do not want to carry too much extra stuff because every added
gram means more weight on your shoulders. This is not a big deal but,
when you factor in the fact that I do not have a Pannier rack and I
have to carry all that stuff a shoulder bag it means all that load
will be resting on the small bones on my butt that in turn would rest
on that saddle. Factor in the distance (100km+) and time (6hrs+) of
cycling and you have the perfect recipe for a sore butt.&lt;/p&gt;
&lt;p&gt;I did not carry/wear any jackets since the waste heat from my body
would eventually heat me up.&lt;/p&gt;
&lt;p&gt;Anyway after solving the Linear Programming Problem I found the
optimum carrying requirements
- Food (Peanut Brittle)
- 1.75 Liters of Water (1L + 750ml)
- Tyre repair kit (Patches + Glue + Tyre levers + sand Paper)
- Emergency tools (multi tool + Single Hex Key)
- A spare inner tube (for those un-repairable punctures)
- Portable Pump
- Btwin Saddle Bag
- 2 Bananas (I ate these for breakfast so I don't think I should count them)
- Pen and Notepad
- My Phone
- A cap
- My helmet&lt;/p&gt;
&lt;p&gt;Here is the full inventory laid out for a photo. Note that the tube is
missing because I forgot to keep it
there.  &lt;img alt="Stuff I carried" src="/assets/images/2017-11-08/contents.jpg"&gt;&lt;/p&gt;
&lt;p&gt;I fit a bottle holder on the cycle and put a 1 Liter bottle
there. Also I used an attachment to fix the portable pump onto the
frame of the cycle itself. So in the end I was carrying about 2
Kilograms including the weight of the bag which is not too bad.&lt;/p&gt;
&lt;h3&gt;The TRIP!!!&lt;/h3&gt;
&lt;p&gt;Before this trip I was kinda scared of solo trips; and I would always
go out with Arun on longer rides. But I realized that at some point I
would have to go out myself and I love beign alone so I went on with
it. I was so scared before this ride that I was hoping that Arun would
not be able to let me borrow his backup gear for this ride and so I
would have a reason to cancel it. :-P&lt;/p&gt;
&lt;p&gt;BUT soon the alarm rang at 4 o'clock in the morning and it was time
for me to get going. So I woke up; checked the cycle for any defects,
checked the indexing of the gears, loaded up the gears, dressed up for
the event and Left. :-P I left at 5:30 in the morning which was a mere
half hour behind schedule.&lt;/p&gt;
&lt;p&gt;This is how it looked fully loaded.
&lt;img alt="Fully Loaded" src="/assets/images/2017-11-08/fullyLoaded.jpg"&gt;&lt;/p&gt;
&lt;p&gt;The first leg of the journey was amazing without any hiccups. The
weather was amazing, it was cool and the sun was merciful. I crossed
the "Welcome to Tumkur" sign on the highway at 8:22. So this leg took
exactly 3 hours with two stop in the middle (I stopped to have a
Peanut Brittle and to have coconut water :-P ) which gives me an
average speed of 20 kmph which is not at all bad especially if we
consider the fact this is my first 100km ride and my third long
distance ride in my life (yes!!).&lt;/p&gt;
&lt;p&gt;Here is a pic. :-P
&lt;img alt="Welcome to Tumkur" src="/assets/images/2017-11-08/welcomeToTumkur.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Then I stopped at a bakery to have some jam-bun (white-bread + jam)
which was good decision as I think that this gave me more than enough
energy and also some well-needed rest for my legs. I also refilled my
water bottle. I had used only about 750ml out of the total water that
I was carrying.&lt;/p&gt;
&lt;p&gt;Weird thing. There was a distance marker at Tumkur that said that
Bangalore was 70kms from that point. Here it is.&lt;/p&gt;
&lt;p&gt;&lt;img alt="weird distance marker" src="/assets/images/2017-11-08/signBoard1.jpg"&gt;&lt;/p&gt;
&lt;p&gt;This was very unsettling because this was weird, conflicting and new
information. Then it hit me that maybe what is Bangalore and what is
Tumkur is not fixed. Maybe they were measuring Bangalore from that
location to some place that was not where I was measuring Bangalore
to. So i was relieved. :-P&lt;/p&gt;
&lt;p&gt;I started from Tumkur after about 15 mins. This is the part where
things started to get ugly. The weather was bad, it was hot and the
sun was not merciful. I soon realized how tired I was and there was a
slight uphill climb just outside Tumkur (around 10km from
Tumkur). This proved to be a huge challenge. I couldn't do it. So I
ended up pushing the cycle for about 1 km. This was a relief at that
moment. This continued for sometime. I think I stopped and pushed or
stopped and sat down under a tree (btw trees are amazing on a highway
especially on a sunny day) for multiples times. I think I had to push
my cycle about 4 or 5 times. I did not push them too much, maybe just
about 1 km or so. But yeah these were some well needed rests.&lt;/p&gt;
&lt;p&gt;This is a pic when I was resting under a tree. 
&lt;img alt="Random Stop" src="/assets/images/2017-11-08/randomStop.jpg"&gt;&lt;/p&gt;
&lt;p&gt;I reached my hostel at 12:30 which was over 6 hours. I am actually very
surprised that I managed to maintain a decent 20kmps overall. :-P&lt;/p&gt;
&lt;h3&gt;PHOTOS!!!&lt;/h3&gt;
&lt;p&gt;Did I mention that I took photos :-P ? (I absolutely love the camera
in this new phone :-) )&lt;/p&gt;
&lt;p&gt;This was just before starting right in front of my hostel gate.
&lt;img alt="Starting" src="/assets/images/2017-11-08/justStarting.jpg"&gt;&lt;/p&gt;
&lt;p&gt;This was a random location where I stopped
&lt;img alt="random" src="/assets/images/2017-11-08/firstStop.jpg"&gt;&lt;/p&gt;
&lt;p&gt;A random tree with a random hill in the background.
&lt;img alt="random" src="/assets/images/2017-11-08/randomShot1.jpg"&gt;&lt;/p&gt;
&lt;p&gt;A random hill with weird looking clouds
&lt;img alt="random" src="/assets/images/2017-11-08/randomShot2.jpg"&gt;&lt;/p&gt;
&lt;p&gt;The not-random sun behind weird clouds
&lt;img alt="random" src="/assets/images/2017-11-08/randomShot3.jpg"&gt;&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;It was super fun and I think that I will keep on doing this again and
again. Next goal is Mysore. :-P&lt;/p&gt;
&lt;p&gt;I used OsmAnd to record the GPS traces and it was absolutely
phenomenal. I had no idea it would be this amazing.&lt;/p&gt;
&lt;p&gt;Here is what OsmAnd has to say about the trip with Speed (Orange) and
Altitude (Blue) on the same graph. I think we can clearly see the
correlation between the altitude and the speed.&lt;/p&gt;
&lt;p&gt;&lt;img alt="osmand Overall" src="/assets/images/2017-11-08/osmandBoth.jpg"&gt;&lt;/p&gt;
&lt;p&gt;The speed part of the GPX track is also interesting which says my
maximum speed was 46 km/hr which was just for a short while during the
starting phase. I think this was during the descend from my hostel
towards jalahalli via Tumkur Road.&lt;/p&gt;
&lt;p&gt;&lt;img alt="osmand speed" src="/assets/images/2017-11-08/osmandSpeed.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Here is
the
&lt;a href="/assets/files/2017-11-08/2017-11-02_05-39_Thu(100KM).gpx"&gt;GPX track&lt;/a&gt;
just in case.&lt;/p&gt;
&lt;p&gt;p.s. this was longer than I expected it would be. :-P&lt;/p&gt;</content><category term="Cycling"></category><category term="Travel"></category></entry><entry><title>My First Bicycle</title><link href="https://signalshore.github.io/blog/My-First-Bicycle.html" rel="alternate"></link><published>2017-10-26T00:00:00+05:30</published><updated>2017-10-26T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2017-10-26:/blog/My-First-Bicycle.html</id><summary type="html">&lt;h3&gt;Prologue&lt;/h3&gt;
&lt;p&gt;I have been interested in bicycles for as long as I can remember. For
me they represent the ultimate form of Open Design and practical implications of
physics in a much more feel-able way. &lt;/p&gt;
&lt;p&gt;However I never owned a geared bicycle and ever since I moved to
Bangalore I â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Prologue&lt;/h3&gt;
&lt;p&gt;I have been interested in bicycles for as long as I can remember. For
me they represent the ultimate form of Open Design and practical implications of
physics in a much more feel-able way. &lt;/p&gt;
&lt;p&gt;However I never owned a geared bicycle and ever since I moved to
Bangalore I wanted to buy one but my parents would not let me buy one
(I was also asking them to buy me one since I am not financially
independent yet!). So after I got the job I saved up enough money to
buy one myself. :-)&lt;/p&gt;
&lt;h3&gt;The Cycle&lt;/h3&gt;
&lt;p&gt;I bought a Schwinn Searcher from a friend of mine. This dude studied
at IISc and he was going home after completing his studies. He had
really cared for this cycle. It is about 5 years old but the
components are really really well maintained. &lt;/p&gt;
&lt;p&gt;Here it is. &lt;img alt="My cycle pic" src="/assets/images/2017-10-26/normal.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Before riding a premium cycle I had no idea that premium bicycles were
this good. The first time I rode a premium bicycle was a btwin
original. I had borrowed this cycle from Arun and we went for a 50k
ride. This was also the first time I rode more than 10k. This was
probably one of the reasons why I decided to buy this one.&lt;/p&gt;
&lt;p&gt;I went on 2 moderate distance rides (around 50k) with Arun. It was
fun. We went to Hesarghatta both times.&lt;/p&gt;
&lt;p&gt;I ride the cycle mostly for commute. I travel to and from college on
this thing.&lt;/p&gt;
&lt;p&gt;Riding in Bangalore is difficult especially with the stop-and-go
traffic. It takes a lot of courage to ride The bicycle in the city. I
still haven't mustered the courage to ride it after sundown. To be
honest I don't have safety lights. (yet) :-P&lt;/p&gt;
&lt;p&gt;I am not riding the cycle as much currently because Bangalore is
having unpredictable and heavy rainfalls. While I do not mind getting
wet in the occasional downpour; I do mind getting my bicycle all wet
and dirty. Its a pain to clean and its not good for the parts.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Riding in the rain with no mudguards is just plain stupid.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The amount of water these tires can fling even on a wet road with no
puddles is just amazing. On top of that the roads here are not too
good so we do have a LOT of puddles. I didn't learn this fact until
it was too late. I was caught off guard with no mud-guards
twice. Thank You Bangalore for such a weird and unpredictable
weather.&lt;/p&gt;
&lt;p&gt;On a positive note I do realize exactly how important mudguards are! :-P&lt;/p&gt;
&lt;h3&gt;Cleaning The Bike&lt;/h3&gt;
&lt;p&gt;One of the best things about owning a bicycle is the mechanical
part. You get to be the cool mechanic and fix any major/minor issues
that crop up. I do enjoy the occasional indexing and lubrication
rituals of the gears. But, after buying this I had never really washed
the bicycle completely. So on a random Sunday I got to it gave the
cycle a complete thorough wash. It was amazing. I opened up the chains
(without any tools; thanks to the master links...) and opened up the
wheels and stuff. It was a great experience.&lt;/p&gt;
&lt;p&gt;I kept the chain out to dry for about 2 days but I had to install it
for a quick ride because of an emergency.&lt;/p&gt;
&lt;p&gt;I was planning to clean the chain using kerosene but that never
happened. It's on my to-do list though!&lt;/p&gt;
&lt;p&gt;Here is a photo of the process. &lt;img alt="Cleaning" src="/assets/images/2017-10-26/clean.jpg"&gt;&lt;/p&gt;
&lt;p&gt;&lt;blue&gt; What is so special about cycling anyway ?  &lt;/blue&gt; &lt;/p&gt;
&lt;p&gt;Even though I can not put a finger on it, I would it is the open-ness
of the whole system that appeals to me at a personal level. As much as
I know myself I would pick a not-so-good but hack-able piece to
technology over a amazing but not hack-able piece of technology on any
fine day. Whats the point of using something if you can not figure
out how it works and tweak it.&lt;/p&gt;
&lt;p&gt;The best thing about bicycles is the open-ness. I think I have used
thus term quite a lot and not explained it. By open-ness I mean that I
can open up the bicycle completely using just a bunch of Allen
Keys. Moreover I can put it back together and it will work just like
before. I can also buy switch random parts and things will still
work. For any repair big or small the only limiting factor is the
availability of relevant tools. If the tools are present then I can
fix almost any foreseeable issue with the bicycle be it a tube puncture
repair or changing the drive-train.&lt;/p&gt;
&lt;p&gt;What I am saying is that a bicycle gives me a sense of
self-sufficiency. Also it has the right mixture of diy-ness that I
find most lacking in people now a days. (:-P)&lt;/p&gt;
&lt;p&gt;Also I am a person knows that Climate Change is real and we need to do as much as we can so that the future is brighter. So it's not a bad feeling to know that every-time I am riding the cycle I am actually making a positive impact in the world. &lt;/p&gt;
&lt;p&gt;I also try to inspire kids/their parents to take cycling seriously because its good for the environment and for the body.&lt;/p&gt;
&lt;p&gt;Last but not the least. Cycling is a great exercise. &lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Start Cycling; Keep Cycling. &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;p.s. I do not click many photos and my phone camera was behaving funny with a custom ROM so the pics can be a bit off! &lt;/p&gt;</content><category term="Cycling"></category></entry><entry><title>The Big Picture</title><link href="https://signalshore.github.io/blog/The-Big-Picture.html" rel="alternate"></link><published>2017-10-07T00:00:00+05:30</published><updated>2017-10-07T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2017-10-07:/blog/The-Big-Picture.html</id><summary type="html">&lt;h3&gt;Disclaimer&lt;/h3&gt;
&lt;p&gt;This post is the result of a train of thought that was triggered by an
interaction with a human being who is very close to me.&lt;/p&gt;
&lt;h3&gt;Prologue&lt;/h3&gt;
&lt;p&gt;So this person recently got into a really cool training program in a
cutting edge scientific field that is conducted by a â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Disclaimer&lt;/h3&gt;
&lt;p&gt;This post is the result of a train of thought that was triggered by an
interaction with a human being who is very close to me.&lt;/p&gt;
&lt;h3&gt;Prologue&lt;/h3&gt;
&lt;p&gt;So this person recently got into a really cool training program in a
cutting edge scientific field that is conducted by a very reputed
scientific organization.  Now somehow the details about this training
program is not too common, most students have no idea that such a program even
exists.&lt;/p&gt;
&lt;p&gt;So I ask this guy that who else applied along with him from his
college, to which he replied that he didn't know and he did not tell
his friends about the opportunity because that would increase the
competition and lower his chances of getting into the program.&lt;/p&gt;
&lt;h3&gt;Okay! So now what ?!&lt;/h3&gt;
&lt;p&gt;So I have a huge problem with the last statement and that train of
thought in general. I don't think that that type of thinking has any
place in the House of God (or the Temple of Science).&lt;/p&gt;
&lt;p&gt;I believe that science is carried forward by people who recognize that
no-matter what; if you are not good enough, you simply are not good
enough. There is no second thought about it.&lt;/p&gt;
&lt;p&gt;Let me clarify further.&lt;/p&gt;
&lt;p&gt;What does an &lt;em&gt;ideal&lt;/em&gt; scientist do when he/she realizes that her theory
is wrong ?  Do they get defensive about it or do they try to come up
with a theory that is not wrong ?&lt;/p&gt;
&lt;p&gt;My point is scientists recognize their short-comings and take
constructive steps to remedy that. Not the other way around where you
get ahead of others by eliminating the competition. In science
competition is healthy. Just look at the world and you will find
devastating examples of what happens when competition is not there.&lt;/p&gt;
&lt;p&gt;And not just scientists; I think every &lt;em&gt;healthy&lt;/em&gt; adult should practice
this form of thinking because this form of thinking takes the focus
off of the thing which one can not control which in this case is
whether they will get into the program or not and moves the focus to
the thing that they can indeed control which is the amount of effort
they put into developing their skills so that they may get into the
program.&lt;/p&gt;
&lt;p&gt;In less words it moves the focus from external factors that are not
under your control and lets the person focus on themselves so that
there is more room for personal development. If there is no more room
for personal development then we have already lost the battle. :-P&lt;/p&gt;
&lt;p&gt;While sabotaging the competition may seem like a great thing to do; it
is mostly a very un-sustainable thing to do. You may win the battle
but you will lose the war.&lt;/p&gt;
&lt;h3&gt;For the love of science!!&lt;/h3&gt;
&lt;p&gt;I love science. I love science to a fault. I am willing to do anything
in the interest of science.  I can confidently say that if I were in a
situation where I had to choose between myself and another person for
a scientific position of critical importance, I would choose the
better person out of the two of us.&lt;/p&gt;
&lt;p&gt;Given a specific job, I would rather have the best possible person for
the job, do the job rather than myself do the job if I am not
qualified enough for the job. This might look like a passive stance
but this kind of thinking means that in most cases I work really hard
to make sure that when the time comes I am the best possible person to
do a job.&lt;/p&gt;
&lt;p&gt;The reason for all of this is that there is a bigger picture to all of
this than just who gets to do the job. That is the progress of the
scientific community. It doesn't matter who does the job as long as the
job gets done with the best possible quality. &lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;So what I am trying to say is this; If you are incompetent; then you
are incompetent and your level of competency does not depend on your
opponents competency.&lt;/p&gt;
&lt;p&gt;Work on yourself and let the rest sort itself out. :-)&lt;/p&gt;</content><category term="Meta"></category></entry><entry><title>First Job at Azim Premji Foundation</title><link href="https://signalshore.github.io/blog/My-First-Job-at-Azim-Premji-Foundation.html" rel="alternate"></link><published>2017-09-20T00:00:00+05:30</published><updated>2017-09-20T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2017-09-20:/blog/My-First-Job-at-Azim-Premji-Foundation.html</id><summary type="html">&lt;h3&gt;Prologue&lt;/h3&gt;
&lt;p&gt;I got my first job on 14th April 2017. The company was Azim Premji
Foundation and my official role was that of a Technical Consultant. In
this I was to train the content-development team on the Ins and Outs
of Linux and be a guide on their whole learning â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Prologue&lt;/h3&gt;
&lt;p&gt;I got my first job on 14th April 2017. The company was Azim Premji
Foundation and my official role was that of a Technical Consultant. In
this I was to train the content-development team on the Ins and Outs
of Linux and be a guide on their whole learning process. It was quite
an educative experience. The contract ended on 14th
September 2017. But I can still visit the office and work on random
stuff (yes! the manager is really cool!!) =P&lt;/p&gt;
&lt;p&gt;Now that this thing has ended I think I am in a decent-ish position to
evaluate it. Honestly speaking I had no idea that my first job would
be something like as meaningful (to me) as this one. I think I am
lucky than most people because I got to work with technology that I
love and I got to do things that I love as well (I have a small crush
on teaching; mostly because I have had bad teachers and think we need
to fix that!!) and on top of that; my job required me to learn more
and more about Linux and to push the boundary. That is like icing on
the cake.&lt;/p&gt;
&lt;p&gt;This job shattered all the preconceived notions I had about jobs and how things worked and about "making an impact".&lt;/p&gt;
&lt;h3&gt;Making an impact&lt;/h3&gt;
&lt;p&gt;I used to be very short-sighted about the "impact" of a job. I always
thought that "impact" is something that you can see from day 1. After
working for 6 months I realized that it is rarely the case. I learned
that good things take time and most of the time this time is because
there are lots of situations that can arise in the middle; issues that
were not thought off before. Also when you are working with other
people then its very easy to get lost in the complexities of life and
work. But this does not mean the all the small things do not matter;
it's just that these things take time.&lt;/p&gt;
&lt;h3&gt;Teachers and Learning&lt;/h3&gt;
&lt;p&gt;Learning can be an intimidating task for anyone and mostly because
learning something absolutely new can make you feel incompetent and
that is not a good feeling. On top of that learning something new
takes a considerable amount of mental energy and time.&lt;/p&gt;
&lt;p&gt;That being said I do not find any difficulty in learning something
absolutely new (this is only the case if I am learning something that
I want to learn); but what surprised me was that even though the
teachers I worked with were very dedicated to the cause but still they
had difficulty getting used to the learning mentality. This used to
bother me at times initially but then I had a breakthrough.&lt;/p&gt;
&lt;p&gt;I am 20 years old now and I would say that I am pretty lucky since I
have a lot less things to worry about than most people. But the people
I worked with are not so lucky. What I was not accounting for is the
fact that they are not as free as I am. I was judging them based from
a very narrow perspective and not accounting for the fact that they
were more than just people with a job. They have families to take care
of of, jobs to worry about and hundreds of other things that need
their immediate attention.  So expecting that they would be "perfect
learners" was an unwise thing to do. Thus even though the team was a
very motivated team; they have every right to feel unmotivated from
time to time.&lt;/p&gt;
&lt;p&gt;I always had a personal grudge against teachers mostly because I had
seen teachers who were not too up to date with the current material
and teachers who did not inspire curiosity and teachers who would
rather say the wrong thing than accept that they do not know
something. I always thought that managers were evil mostly because how
my friends (who were working) always complained about how their
managers were not good and did not know enough about the underlying
system and stuff (I am generalizing here a bit).&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Enter the APF team&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;The group I worked with included three high school teachers and a
Project Manager. The most striking thing about them is their open-ness
to new experience and their humility. This is a bunch of people who
are in their 40s; who are very good at what they do (being teachers)
and who are actively learning new technology that would enhance 
the quality of education for high school students. Let that sink in
for a moment.&lt;/p&gt;
&lt;p&gt;We had one person there who not only used GNU/Linux so that she could
create localized materials for her students (in Kannada); she was also
an active contributor the the GeoGebra community. This is the best
manifestation of the FOSS movement. I have been associated with FSMK
for over a year and this is the first time got to experience the real
power of FOSS for someone outside the developer community. I always
failed to grasp the idea that FOSS is about the people and not the
technology completely until this experience. After this realized the
full depth of the idea (I think so). There is also another person who
was teaching himself woodworking, calculus and German just because he
wanted to learn them.&lt;/p&gt;
&lt;p&gt;I am interested in Theoretical Computer Science and that requires some
decent amount of mathematics which is not covered in great detail in
my course. So I planned to take an online course and teach myself the
maths. BUT I never did, I was too scared of finding out that I was too
dumb or too stupid or too late to the party. In the course of these 6
months my interaction with these amazing people inspired me to enroll 
in 4 MOOC while the usual FSMK work and APF work and College course
work (more about this later). I realized that its better to start than
to just wait for the correct time. It is tough to maintain all of
these at the same time (I think I am in-eligible for some of the MOOC
certificates right now; but the certificates are not why I started
taking the MOOC in the first place :-) )&lt;/p&gt;
&lt;h3&gt;Life-skills&lt;/h3&gt;
&lt;p&gt;Let's talk about humility and open-ness. I was under the impression
that I got this job because I was supposed to know GNU/Linux and teach
them that so I was very scared that a scenario might arise where I
would be out of my depth. As a result I spent a lot of time doing some
homework about the stuff that I had planned to cover that day. But I
got hit by a brick when I saw how open these teachers were about not
knowing stuff. I had never witnessed that amount of acknowledgment
from a teacher about their own shortcomings. Now I think that I am a
lot more open about acknowledging my own short-comings as a
person. Furthermore I think that it is a disservice to yourself if you
can not acknowledge your own shortcomings because we can grow as a
person only when we acknowledge that there is more room to grow as a
person in the first place.&lt;/p&gt;
&lt;h3&gt;Linux&lt;/h3&gt;
&lt;p&gt;This section will be very short! =P&lt;/p&gt;
&lt;p&gt;I had no idea that a Linux based OS was so complex. I always knew that
Linux was complex but I assumed that the OS built around would be
simple enough. Nah! not true again!!! I couldn't be more
wrong. Compiling LFS (Linux From Scratch) has been third best thing in this exercise.&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;At the end of these 6 amazing months I think its fair enough to say that
I learned a lot more from them than they learned from me and looking back I had no idea that this exercise would be such an amazing educational experience for me. Being teachers is not easy and I have more respect for teachers now than I did about 6 months ago. Sure there can be good teachers and bad teachers (I hope I was a good one!) but apart from the one-off cases; most of the teachers are amazing.&lt;/p&gt;</content><category term="Misc"></category><category term="Work"></category><category term="Linux"></category></entry><entry><title>Experience with Data Recovery</title><link href="https://signalshore.github.io/blog/Experience-With-Data-Recovery.html" rel="alternate"></link><published>2017-07-20T00:00:00+05:30</published><updated>2017-07-20T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2017-07-20:/blog/Experience-With-Data-Recovery.html</id><summary type="html">&lt;h3&gt;Prologue&lt;/h3&gt;
&lt;p&gt;We have been planning to set up a backup utility on Sam but somehow we never quite got around to actually doing it. However this week we finally decided to do it. We decided to try out &lt;a href="https://obnam.org/"&gt;Obnam&lt;/a&gt;. Things were going good until we needed to delete a directory â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Prologue&lt;/h3&gt;
&lt;p&gt;We have been planning to set up a backup utility on Sam but somehow we never quite got around to actually doing it. However this week we finally decided to do it. We decided to try out &lt;a href="https://obnam.org/"&gt;Obnam&lt;/a&gt;. Things were going good until we needed to delete a directory.&lt;/p&gt;
&lt;p&gt;Now remember that this directory was local directory and not a system directory unlike how the name suggests. The directory in question is "mnt".
Yes we had set up the dummy directory tree for experimenting with the backup tool and it had a mnt in it. &lt;/p&gt;
&lt;p&gt;So for deleting it Sohom should have typed &lt;code&gt;rm -rf mnt&lt;/code&gt; but he typed &lt;code&gt;rm -rf /mnt&lt;/code&gt;.
Notice the '/' in the command he typed, Yep true story. Completely nuked all the mounted partitions.&lt;/p&gt;
&lt;h3&gt;Some Context&lt;/h3&gt;
&lt;p&gt;Okay we need some context. This is how &lt;code&gt;lsblk&lt;/code&gt; looks on our system (Sam). The important partitions that store all the main data and media (movies and documentaries and Pics) are the &lt;code&gt;/dev/sda4&lt;/code&gt; and &lt;code&gt;/dev/sda5&lt;/code&gt;. As both of them were mounted they both were completely deleted. &lt;/p&gt;
&lt;p&gt;&lt;img alt="image" src="/assets/images/2017-07-20/lsblk.png"&gt;&lt;/p&gt;
&lt;h3&gt;Aftermath&lt;/h3&gt;
&lt;p&gt;Okay so what DID we lose ?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ALL  work related files ( We keep a work_space directory )&lt;/li&gt;
&lt;li&gt;ALL of our music collection ( this is what keeps us sane )&lt;/li&gt;
&lt;li&gt;ALL of our Pictures that we had saved ( nice memories :'(  )&lt;/li&gt;
&lt;li&gt;ALL of our documents ( amazing PDF files, and books and other stuff )&lt;/li&gt;
&lt;li&gt;ALL of our documentaries and movies.&lt;/li&gt;
&lt;li&gt;All of our MOOC videos that we had saved. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So yeah! EVERYTHING. &lt;/p&gt;
&lt;h3&gt;The Recovery&lt;/h3&gt;
&lt;p&gt;Now this is where we will trace the thinking that enabled us to get back almost all of our data. &lt;/p&gt;
&lt;p&gt;The First thing that we did was to unmount the affected partitions so as stop any data being overwritten on those partitions. This would increase the chances of getting most of our data back.&lt;/p&gt;
&lt;p&gt;Then we downloaded &lt;a href="https://www.cgsecurity.org/wiki/PhotoRec"&gt;PhotoRec&lt;/a&gt; ( in Arch it is packaged with the TestDisk package ). We started PhotoRec form the terminal and followed the steps to select the partition we wanted to recover and also we had to select the partition where the recovered files would be stored. It is recommended that the partition where you store the recovered files and the partition that you want to recover data from be different partitions as this would reduce the chances of the old data being overwritten. &lt;/p&gt;
&lt;p&gt;Now after this you might see something like this. &lt;img alt="PhotoRec working" src="/assets/images/2017-07-20/photorec.png"&gt;.&lt;/p&gt;
&lt;p&gt;This is normal and its perfectly fine to go about doing other stuff that you have to do while PhotoRec "walks" through the file-system and recovers files for you. &lt;/p&gt;
&lt;p&gt;One thing we should remember is that the recovery part is not such a pain! PhotoRec is amazing and does an amazing job. The main pain is actually picking up the files that YOU want from he whole bunch of recovered files. This is because since PhotoRec does not have any method to determine if the deleted files were deleted accidentally or not, it recovers everything that was deleted and not overwritten. Thus we have a LOT of work to do. &lt;/p&gt;
&lt;h3&gt;After the recovery&lt;/h3&gt;
&lt;p&gt;These are some of the things that PhotoRec does after recovering the files.
&lt;em&gt; Stores everything under multiple &lt;code&gt;recup_dir.&amp;lt;integer&amp;gt;&lt;/code&gt; directories. It looks something like this &lt;img alt="recovery ls" src="/assets/images/2017-07-20/reco_ls.png"&gt;
&lt;/em&gt; Every file other than text files are properly named. As in other than text files all other files have their proper extensions. Thus PhotoRec doesn't mix up JPEG and PNG files.
&lt;em&gt; That being said it does mix up text files. As in recovered Java files would sometimes be named as C++ header files and so on.
&lt;/em&gt; PhotoRec also recovers ELF files which are nothing but executable files.&lt;/p&gt;
&lt;p&gt;&lt;blue&gt; How do we go about sorting this mess ?&lt;/blue&gt;
Our first idea was to launch &lt;a href="http://nongnu.org/ranger/"&gt;ranger&lt;/a&gt; and inspect every single directory and delete directories if the contents didn't feel too important. Something like this.
&lt;img alt="manual" src="/assets/images/2017-07-20/manual.png"&gt;
But there was a major flaw with this system. There were a lot of files in those directories and going through each one of them would be a tedious and a very very stupid thing to do. &lt;/p&gt;
&lt;p&gt;So we started making a list of the things that we lost and the things that we wanted to recovered from the mess. We figured that if we could not remember something that we had lost them we probably did not need it in the first place. Thus we figured that the most important stuff in the data directory ware the scripts that we had written for our Arch System. We also realized that we mostly needed text files from this partition recovery so we could delete all the non-text files and thus we started this massive assault on all non essential files. &lt;/p&gt;
&lt;p&gt;Initially we were writing scripts like &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="k"&gt;for &lt;/span&gt;file in &lt;span class="o"&gt;(&lt;/span&gt;find ./ -name &lt;span class="s2"&gt;&amp;quot;*.jar&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;; rm -vf &lt;span class="nv"&gt;$file&lt;/span&gt;; end;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;which worked like a charm. &lt;/p&gt;
&lt;p&gt;Then we figured out the better version of this command i.e.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;find ./ -name &lt;span class="s2"&gt;&amp;quot;*.jar&amp;quot;&lt;/span&gt; -delete
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;which does the same thing; finds files with a particular extension (JAR files in this case) and delete them.&lt;/p&gt;
&lt;p&gt;We kept doing this for a huge set of files unless we were left with only text files.&lt;/p&gt;
&lt;p&gt;Now we needed to get all the DOCX files so we did this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;&lt;span class="k"&gt;for &lt;/span&gt;file in &lt;span class="o"&gt;(&lt;/span&gt;find ./ -name &lt;span class="s2"&gt;&amp;quot;*.docx&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;; cp -c &lt;span class="nv"&gt;$file&lt;/span&gt; ../store; end;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now comes the interesting part. Remember those scripts that we wrote. We had a fairly good idea about the contents of those scripts so we could do a recursive grep with those keywords and BOOM! &lt;/p&gt;
&lt;p&gt;This is the first script which had a lot of i3-msg in it.
&lt;img alt="i3-msg" src="/assets/images/2017-07-20/i3-msg.png"&gt;
Similarly we found all the other scripts.&lt;/p&gt;
&lt;h3&gt;The Second Partition&lt;/h3&gt;
&lt;p&gt;This partition posed a different kind of challenge. We wanted to recover all the images that we had. We ran PhotoRec with the option that would only recover only the JPEG files. But even after that we had about 12000+ JPEG files. Moreover inspection with ranger showed that certain files were duplicated. To confirm our assumption we check the MD5 hash of two such files.&lt;/p&gt;
&lt;p&gt;&lt;img alt="duplicate" src="/assets/images/2017-07-20/dupli.png"&gt;&lt;/p&gt;
&lt;p&gt;As you can see both the files have the same MD5 hash and thus they are essentially the same files. So now we needed a script that would sort the duplicate files out.&lt;/p&gt;
&lt;p&gt;We followed the instructions in this article and installed fdupes and let it run amok and remove all the duplicate files we had.&lt;/p&gt;
&lt;p&gt;Also we figured out that there were a lot of files that were 100kb or less. These were thumbnail files we believe. So we did this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$ &lt;/span&gt;find ./ -size -100k -delete
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and all of them annoying files were gone. :p&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;&lt;blue&gt; So what is the takeaway from all this ? &lt;/blue&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OFFSITE BACKUPS&lt;/li&gt;
&lt;li&gt;ALWAYS HAVE BACKUPS BEFORE PLAYING WITH IMPORTANT FILES&lt;/li&gt;
&lt;li&gt;PhotoRec is pretty awesome&lt;/li&gt;
&lt;/ul&gt;</content><category term="CS"></category><category term="Linux"></category></entry><entry><title>The Mess Called Kolkata</title><link href="https://signalshore.github.io/blog/The-Mess-called-Kolkata.html" rel="alternate"></link><published>2017-05-14T00:00:00+05:30</published><updated>2017-05-14T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2017-05-14:/blog/The-Mess-called-Kolkata.html</id><summary type="html">&lt;h3&gt;Prologue&lt;/h3&gt;
&lt;p&gt;I live in Bangalore as I am studying in Bangalore. My hometown is Kolkata. I keep visiting Kolkata after every semester break which generally lasts for about 3 weeks. &lt;/p&gt;
&lt;h3&gt;The Decision&lt;/h3&gt;
&lt;p&gt;Coming to Bangalore was not a properly planned decision. Generally moving to a new city for studies is â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Prologue&lt;/h3&gt;
&lt;p&gt;I live in Bangalore as I am studying in Bangalore. My hometown is Kolkata. I keep visiting Kolkata after every semester break which generally lasts for about 3 weeks. &lt;/p&gt;
&lt;h3&gt;The Decision&lt;/h3&gt;
&lt;p&gt;Coming to Bangalore was not a properly planned decision. Generally moving to a new city for studies is an option that everyone has discussed at-least once in their lifetime. But not me. During my higher-secondary schooling the I had never even entertained the idea of moving to another city to study for an under-graduate degree. Planning and coming to Bangalore happened in like 1 month after my CBSE class 12 results. &lt;/p&gt;
&lt;h3&gt;The Blunder&lt;/h3&gt;
&lt;p&gt;During my school days I was always a shut-in and avoided social interactions mostly because I did not like my friends too much to begin with and because I really did not fit into any particular group of friends. So to keep my young self sane I said to myself that I would find a decent friends circle when I would be in college and we all would hang out in and around Kolkata and explore the city and what not.&lt;/p&gt;
&lt;p&gt;So when coming to Bangalore was finalized I felt very happy. I was very very exited. But that excitement was short-lived. &lt;/p&gt;
&lt;h3&gt;The Realization&lt;/h3&gt;
&lt;p&gt;After living in Bangalore I soon realized how much I liked Kolkata; not because I did not like Bangalore but because I did not know Kolkata well enough to begin with. These two cities are very very different and comparing them is like comparing apples to bananas. I also felt extremely saddened by the fact that all those plans I made about exploring kolkata and stuff were just 3000 kilometers away. &lt;/p&gt;
&lt;h3&gt;The Remedy&lt;/h3&gt;
&lt;p&gt;So I decided that every semester break when I go to Kolkata I will trek around the city exploring it. My idea of exploring a city is somewhat different from the conventional idea. I do not follow a guide to the "must-visit" attractions. Rather I pick a place and I walk. I love walking. Walking through a city opens up another dimension to the city (I think this is because since you are slow while walking you can observe more stuff ?!! (maybe idk! ))&lt;/p&gt;
&lt;h3&gt;The Plan&lt;/h3&gt;
&lt;p&gt;The plan is that there is no plan. I will pick up a place and I will borrow a camera and I will walk and then I will write about it and I will post it with the pics. Most of the pics will have some description about the image and what not. This is gonna be Kolkata as I see it. &lt;/p&gt;
&lt;p&gt;Also I may end up using a cycle for my trek but I am not so sure about the cycle. &lt;/p&gt;</content><category term="Travel"></category></entry><entry><title>The Universe and The Reason</title><link href="https://signalshore.github.io/blog/The-Universe-and-the-reason.html" rel="alternate"></link><published>2017-04-10T00:00:00+05:30</published><updated>2017-04-10T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2017-04-10:/blog/The-Universe-and-the-reason.html</id><summary type="html">&lt;h3&gt;Disclaimer&lt;/h3&gt;
&lt;p&gt;This essay originated as a series of messages between me and my friend
(you know who you are). After that I took those messages and worked on
this for quite some time to polish then into something presentable.&lt;/p&gt;
&lt;h3&gt;Okay! so ...&lt;/h3&gt;
&lt;p&gt;Humanity always had a special relationship with reason. Reason â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Disclaimer&lt;/h3&gt;
&lt;p&gt;This essay originated as a series of messages between me and my friend
(you know who you are). After that I took those messages and worked on
this for quite some time to polish then into something presentable.&lt;/p&gt;
&lt;h3&gt;Okay! so ...&lt;/h3&gt;
&lt;p&gt;Humanity always had a special relationship with reason. Reason is the
main keyword here. It is reason that ultimately led to all beautiful
inventions and achievements. Since the early days humanity has always
strived to find the reasons that could describe the naturally occurring
phenomenon around them.&lt;/p&gt;
&lt;p&gt;Man was (still is to some extent) a very inquisitive animal. If it
were up to man then he would have had proper reasons for all the
things that he could have had reasons for and he strived to achieve
just that. Reasons that described everything man could think of. He
strived for perfection. This led to a problem. Man did not realize
that some (read: most) answers are not ultimate. They all lead to
further questions that need further answers and the cycle repeats all
over again. Soon enough humanity had more questions than it had
answers for.&lt;/p&gt;
&lt;p&gt;This created a feeling of helpless-ness. Man could not stomach the
fact that he did not have all the answers. Man could not stomach the
fact that he was not in control. Man could not acknowledge the
universe. Man felt helpless and insignificant (as he rightly is). Man
was (still is) a bit &lt;em&gt;too&lt;/em&gt; arrogant. A bit too arrogant for his own
good. Man was/is a bit too fragile to accept the responsibility for
all of his actions. He needs a scapegoat; not only to blame someone in
case anything goes wrong but also someone to take the credit in case
something goes right. This way man can escape accountability for his
actions and blame god for the good and the bad. He needs to believe
in something far bigger, far greater than himself to make him feel a
part of something bigger than himself, to define a sense of purpose
for him.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;THIS&lt;/em&gt; led to the invention of god. GOD was someone who had all the
answers; someone so perfect that he could take all the bashing and all
the accusations of lowly creatures like ourselves and still be
righteous. God was (still is) the perfect scapegoat for man. This is
what messed up the world as we know it.&lt;/p&gt;
&lt;p&gt;We were born a Hindu, raised a Hindu, trained a Hindu until we realized
what we were and we gave up our religion. We are atheists now. &lt;/p&gt;
&lt;p&gt;Giving up our religion was not a great feeling, there was some form of
disconnect. This is when we realized the power of the "believing in
something bigger than our-self" feeling. That feeling is a powerful
feeling; it keeps you sane.&lt;/p&gt;
&lt;p&gt;So what do we believe in ??  &lt;/p&gt;
&lt;p&gt;We believe in the Universe and the Reason. The universe because it is
what is ultimately out there and reason because reason is how we
insignificant beings communicate with the universe. The universe is
the ultimate form of power and grandeur. Nothing can beat its elegance
and majesticity. When compared to the universe, you truly are
insignificant. And that is also a powerful feeling.&lt;/p&gt;</content><category term="Meta"></category></entry><entry><title>The beginning</title><link href="https://signalshore.github.io/blog/The-beginning.html" rel="alternate"></link><published>2017-03-25T00:00:00+05:30</published><updated>2017-03-25T00:00:00+05:30</updated><author><name>Sohom</name></author><id>tag:signalshore.github.io,2017-03-25:/blog/The-beginning.html</id><summary type="html">&lt;h3&gt;Whats the plan&lt;/h3&gt;
&lt;p&gt;The plan is that there is no plan. We have no idea about what we are trying to do here. All we know is that we will be writing about &lt;em&gt;stuff&lt;/em&gt; and then publish them. &lt;/p&gt;
&lt;p&gt;This was planned for a long time and we have really put â€¦&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Whats the plan&lt;/h3&gt;
&lt;p&gt;The plan is that there is no plan. We have no idea about what we are trying to do here. All we know is that we will be writing about &lt;em&gt;stuff&lt;/em&gt; and then publish them. &lt;/p&gt;
&lt;p&gt;This was planned for a long time and we have really put in a lot of effort into making this blog (mostly the design part).&lt;/p&gt;
&lt;p&gt;Also since we are learning LISP and like parentheses (&lt;a href="https://github.com/Fuco1/smartparens"&gt;smartparens&lt;/a&gt; in &lt;a href="https://www.gnu.org/software/emacs/"&gt;Emacs&lt;/a&gt; makes you love parentheses!!) we will be using a lot of parentheses. &lt;/p&gt;
&lt;p&gt;We switched from using vim to using Emacs full time. Vim is good; Emacs is just waaay better (we are not kidding; there will be a post on this some time later ;-) )&lt;/p&gt;
&lt;p&gt;&lt;blue&gt; Source of inspiration &lt;/blue&gt;
Just like any other human out there this blog was also inspired by certain individuals out there&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://systemreboot.net"&gt;Arun Issac&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://solariiknight.org"&gt;Anand Issac&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href="https://cosmobird.github.io"&gt;Cosmobird&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="Meta"></category></entry></feed>